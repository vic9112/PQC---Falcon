-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mq_iNTT is
generic (
    C_M_AXI_GMEMO_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEMO_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEMO_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEMO_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEMO_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEMO_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEMO_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEMO_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEMO_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEMO_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEMO_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmemo_AWVALID : OUT STD_LOGIC;
    m_axi_gmemo_AWREADY : IN STD_LOGIC;
    m_axi_gmemo_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ADDR_WIDTH-1 downto 0);
    m_axi_gmemo_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ID_WIDTH-1 downto 0);
    m_axi_gmemo_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmemo_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmemo_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmemo_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_AWUSER_WIDTH-1 downto 0);
    m_axi_gmemo_WVALID : OUT STD_LOGIC;
    m_axi_gmemo_WREADY : IN STD_LOGIC;
    m_axi_gmemo_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_DATA_WIDTH-1 downto 0);
    m_axi_gmemo_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_DATA_WIDTH/8-1 downto 0);
    m_axi_gmemo_WLAST : OUT STD_LOGIC;
    m_axi_gmemo_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ID_WIDTH-1 downto 0);
    m_axi_gmemo_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_WUSER_WIDTH-1 downto 0);
    m_axi_gmemo_ARVALID : OUT STD_LOGIC;
    m_axi_gmemo_ARREADY : IN STD_LOGIC;
    m_axi_gmemo_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ADDR_WIDTH-1 downto 0);
    m_axi_gmemo_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ID_WIDTH-1 downto 0);
    m_axi_gmemo_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmemo_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmemo_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmemo_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmemo_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ARUSER_WIDTH-1 downto 0);
    m_axi_gmemo_RVALID : IN STD_LOGIC;
    m_axi_gmemo_RREADY : OUT STD_LOGIC;
    m_axi_gmemo_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEMO_DATA_WIDTH-1 downto 0);
    m_axi_gmemo_RLAST : IN STD_LOGIC;
    m_axi_gmemo_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ID_WIDTH-1 downto 0);
    m_axi_gmemo_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEMO_RUSER_WIDTH-1 downto 0);
    m_axi_gmemo_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_BVALID : IN STD_LOGIC;
    m_axi_gmemo_BREADY : OUT STD_LOGIC;
    m_axi_gmemo_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmemo_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEMO_ID_WIDTH-1 downto 0);
    m_axi_gmemo_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEMO_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of mq_iNTT is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mq_iNTT_mq_iNTT,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=2628,HLS_SYN_LUT=3638,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a : STD_LOGIC_VECTOR (63 downto 0);
    signal logn : STD_LOGIC_VECTOR (31 downto 0);
    signal iGMb_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iGMb_ce0 : STD_LOGIC;
    signal iGMb_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_read_reg_316 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_fu_183_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_reg_328 : STD_LOGIC_VECTOR (63 downto 0);
    signal hm_fu_221_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal hm_reg_340 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln554_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln557_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln557_reg_345 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_350 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln558_fu_245_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln558_reg_355 : STD_LOGIC_VECTOR (62 downto 0);
    signal dt_fu_249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dt_reg_360 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_fu_260_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal i_1_reg_370 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln559_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_fu_280_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j1_reg_380 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln559_fu_285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln559_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_reg_390 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_idle : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_ready : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ni_2_cast7_out : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ni_2_cast7_out_ap_vld : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_idle : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_ready : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WLAST : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_RREADY : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_BREADY : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_idle : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_ready : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WLAST : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARVALID : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_RREADY : STD_LOGIC;
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_BREADY : STD_LOGIC;
    signal gmemo_AWVALID : STD_LOGIC;
    signal gmemo_AWREADY : STD_LOGIC;
    signal gmemo_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmemo_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmemo_WVALID : STD_LOGIC;
    signal gmemo_WREADY : STD_LOGIC;
    signal gmemo_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmemo_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal gmemo_ARVALID : STD_LOGIC;
    signal gmemo_ARREADY : STD_LOGIC;
    signal gmemo_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmemo_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmemo_RVALID : STD_LOGIC;
    signal gmemo_RREADY : STD_LOGIC;
    signal gmemo_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmemo_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal gmemo_BVALID : STD_LOGIC;
    signal gmemo_BREADY : STD_LOGIC;
    signal indvars_iv_reg_117 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j1_2_reg_127 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_139 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg : STD_LOGIC := '0';
    signal grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln564_fu_275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_80 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_fu_84 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln551_fu_179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_205_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln559_fu_266_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln564_fu_270_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_590_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_9 : IN STD_LOGIC_VECTOR (63 downto 0);
        ni_2_cast7_out : OUT STD_LOGIC_VECTOR (30 downto 0);
        ni_2_cast7_out_ap_vld : OUT STD_LOGIC );
    end component;


    component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_565_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmemo_AWVALID : OUT STD_LOGIC;
        m_axi_gmemo_AWREADY : IN STD_LOGIC;
        m_axi_gmemo_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmemo_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmemo_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_WVALID : OUT STD_LOGIC;
        m_axi_gmemo_WREADY : IN STD_LOGIC;
        m_axi_gmemo_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmemo_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_WLAST : OUT STD_LOGIC;
        m_axi_gmemo_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_ARVALID : OUT STD_LOGIC;
        m_axi_gmemo_ARREADY : IN STD_LOGIC;
        m_axi_gmemo_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmemo_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmemo_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RVALID : IN STD_LOGIC;
        m_axi_gmemo_RREADY : OUT STD_LOGIC;
        m_axi_gmemo_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmemo_RLAST : IN STD_LOGIC;
        m_axi_gmemo_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmemo_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_BVALID : IN STD_LOGIC;
        m_axi_gmemo_BREADY : OUT STD_LOGIC;
        m_axi_gmemo_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        j1_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        indvars_iv : IN STD_LOGIC_VECTOR (63 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp : IN STD_LOGIC_VECTOR (62 downto 0);
        zext_ln564_1 : IN STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_593_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmemo_AWVALID : OUT STD_LOGIC;
        m_axi_gmemo_AWREADY : IN STD_LOGIC;
        m_axi_gmemo_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmemo_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmemo_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_WVALID : OUT STD_LOGIC;
        m_axi_gmemo_WREADY : IN STD_LOGIC;
        m_axi_gmemo_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmemo_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_WLAST : OUT STD_LOGIC;
        m_axi_gmemo_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_ARVALID : OUT STD_LOGIC;
        m_axi_gmemo_ARREADY : IN STD_LOGIC;
        m_axi_gmemo_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmemo_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmemo_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmemo_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmemo_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RVALID : IN STD_LOGIC;
        m_axi_gmemo_RREADY : OUT STD_LOGIC;
        m_axi_gmemo_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmemo_RLAST : IN STD_LOGIC;
        m_axi_gmemo_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmemo_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_BVALID : IN STD_LOGIC;
        m_axi_gmemo_BREADY : OUT STD_LOGIC;
        m_axi_gmemo_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmemo_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmemo_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_9 : IN STD_LOGIC_VECTOR (63 downto 0);
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        ni_2_cast7_reload : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component mq_iNTT_iGMb_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component mq_iNTT_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        a : OUT STD_LOGIC_VECTOR (63 downto 0);
        logn : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mq_iNTT_gmemo_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    iGMb_U : component mq_iNTT_iGMb_ROM_AUTO_1R
    generic map (
        DataWidth => 14,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => iGMb_address0,
        ce0 => iGMb_ce0,
        q0 => iGMb_q0);

    grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150 : component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_590_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start,
        ap_done => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done,
        ap_idle => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_idle,
        ap_ready => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_ready,
        m_9 => m_7_reg_328,
        ni_2_cast7_out => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ni_2_cast7_out,
        ni_2_cast7_out_ap_vld => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ni_2_cast7_out_ap_vld);

    grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156 : component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_565_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start,
        ap_done => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done,
        ap_idle => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_idle,
        ap_ready => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_ready,
        m_axi_gmemo_AWVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWVALID,
        m_axi_gmemo_AWREADY => gmemo_AWREADY,
        m_axi_gmemo_AWADDR => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWADDR,
        m_axi_gmemo_AWID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWID,
        m_axi_gmemo_AWLEN => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLEN,
        m_axi_gmemo_AWSIZE => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWSIZE,
        m_axi_gmemo_AWBURST => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWBURST,
        m_axi_gmemo_AWLOCK => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLOCK,
        m_axi_gmemo_AWCACHE => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWCACHE,
        m_axi_gmemo_AWPROT => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWPROT,
        m_axi_gmemo_AWQOS => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWQOS,
        m_axi_gmemo_AWREGION => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWREGION,
        m_axi_gmemo_AWUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWUSER,
        m_axi_gmemo_WVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WVALID,
        m_axi_gmemo_WREADY => gmemo_WREADY,
        m_axi_gmemo_WDATA => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WDATA,
        m_axi_gmemo_WSTRB => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WSTRB,
        m_axi_gmemo_WLAST => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WLAST,
        m_axi_gmemo_WID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WID,
        m_axi_gmemo_WUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WUSER,
        m_axi_gmemo_ARVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARVALID,
        m_axi_gmemo_ARREADY => gmemo_ARREADY,
        m_axi_gmemo_ARADDR => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARADDR,
        m_axi_gmemo_ARID => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARID,
        m_axi_gmemo_ARLEN => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLEN,
        m_axi_gmemo_ARSIZE => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARSIZE,
        m_axi_gmemo_ARBURST => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARBURST,
        m_axi_gmemo_ARLOCK => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLOCK,
        m_axi_gmemo_ARCACHE => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARCACHE,
        m_axi_gmemo_ARPROT => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARPROT,
        m_axi_gmemo_ARQOS => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARQOS,
        m_axi_gmemo_ARREGION => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARREGION,
        m_axi_gmemo_ARUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARUSER,
        m_axi_gmemo_RVALID => gmemo_RVALID,
        m_axi_gmemo_RREADY => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_RREADY,
        m_axi_gmemo_RDATA => gmemo_RDATA,
        m_axi_gmemo_RLAST => ap_const_logic_0,
        m_axi_gmemo_RID => ap_const_lv1_0,
        m_axi_gmemo_RFIFONUM => gmemo_RFIFONUM,
        m_axi_gmemo_RUSER => ap_const_lv1_0,
        m_axi_gmemo_RRESP => ap_const_lv2_0,
        m_axi_gmemo_BVALID => gmemo_BVALID,
        m_axi_gmemo_BREADY => grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_BREADY,
        m_axi_gmemo_BRESP => ap_const_lv2_0,
        m_axi_gmemo_BID => ap_const_lv1_0,
        m_axi_gmemo_BUSER => ap_const_lv1_0,
        j1_2 => j1_2_reg_127,
        indvars_iv => indvars_iv_reg_117,
        a => a_read_reg_316,
        tmp => trunc_ln558_reg_355,
        zext_ln564_1 => s_reg_390);

    grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170 : component mq_iNTT_mq_iNTT_Pipeline_VITIS_LOOP_593_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start,
        ap_done => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done,
        ap_idle => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_idle,
        ap_ready => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_ready,
        m_axi_gmemo_AWVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWVALID,
        m_axi_gmemo_AWREADY => gmemo_AWREADY,
        m_axi_gmemo_AWADDR => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWADDR,
        m_axi_gmemo_AWID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWID,
        m_axi_gmemo_AWLEN => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLEN,
        m_axi_gmemo_AWSIZE => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWSIZE,
        m_axi_gmemo_AWBURST => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWBURST,
        m_axi_gmemo_AWLOCK => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLOCK,
        m_axi_gmemo_AWCACHE => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWCACHE,
        m_axi_gmemo_AWPROT => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWPROT,
        m_axi_gmemo_AWQOS => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWQOS,
        m_axi_gmemo_AWREGION => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWREGION,
        m_axi_gmemo_AWUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWUSER,
        m_axi_gmemo_WVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WVALID,
        m_axi_gmemo_WREADY => gmemo_WREADY,
        m_axi_gmemo_WDATA => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WDATA,
        m_axi_gmemo_WSTRB => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WSTRB,
        m_axi_gmemo_WLAST => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WLAST,
        m_axi_gmemo_WID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WID,
        m_axi_gmemo_WUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WUSER,
        m_axi_gmemo_ARVALID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARVALID,
        m_axi_gmemo_ARREADY => gmemo_ARREADY,
        m_axi_gmemo_ARADDR => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARADDR,
        m_axi_gmemo_ARID => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARID,
        m_axi_gmemo_ARLEN => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLEN,
        m_axi_gmemo_ARSIZE => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARSIZE,
        m_axi_gmemo_ARBURST => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARBURST,
        m_axi_gmemo_ARLOCK => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLOCK,
        m_axi_gmemo_ARCACHE => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARCACHE,
        m_axi_gmemo_ARPROT => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARPROT,
        m_axi_gmemo_ARQOS => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARQOS,
        m_axi_gmemo_ARREGION => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARREGION,
        m_axi_gmemo_ARUSER => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARUSER,
        m_axi_gmemo_RVALID => gmemo_RVALID,
        m_axi_gmemo_RREADY => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_RREADY,
        m_axi_gmemo_RDATA => gmemo_RDATA,
        m_axi_gmemo_RLAST => ap_const_logic_0,
        m_axi_gmemo_RID => ap_const_lv1_0,
        m_axi_gmemo_RFIFONUM => gmemo_RFIFONUM,
        m_axi_gmemo_RUSER => ap_const_lv1_0,
        m_axi_gmemo_RRESP => ap_const_lv2_0,
        m_axi_gmemo_BVALID => gmemo_BVALID,
        m_axi_gmemo_BREADY => grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_BREADY,
        m_axi_gmemo_BRESP => ap_const_lv2_0,
        m_axi_gmemo_BID => ap_const_lv1_0,
        m_axi_gmemo_BUSER => ap_const_lv1_0,
        m_9 => m_7_reg_328,
        a => a_read_reg_316,
        ni_2_cast7_reload => grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ni_2_cast7_out);

    control_s_axi_U : component mq_iNTT_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        a => a,
        logn => logn,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmemo_m_axi_U : component mq_iNTT_gmemo_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEMO_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEMO_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEMO_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEMO_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEMO_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEMO_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEMO_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEMO_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEMO_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEMO_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEMO_CACHE_VALUE,
        USER_DW => 16,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmemo_AWVALID,
        AWREADY => m_axi_gmemo_AWREADY,
        AWADDR => m_axi_gmemo_AWADDR,
        AWID => m_axi_gmemo_AWID,
        AWLEN => m_axi_gmemo_AWLEN,
        AWSIZE => m_axi_gmemo_AWSIZE,
        AWBURST => m_axi_gmemo_AWBURST,
        AWLOCK => m_axi_gmemo_AWLOCK,
        AWCACHE => m_axi_gmemo_AWCACHE,
        AWPROT => m_axi_gmemo_AWPROT,
        AWQOS => m_axi_gmemo_AWQOS,
        AWREGION => m_axi_gmemo_AWREGION,
        AWUSER => m_axi_gmemo_AWUSER,
        WVALID => m_axi_gmemo_WVALID,
        WREADY => m_axi_gmemo_WREADY,
        WDATA => m_axi_gmemo_WDATA,
        WSTRB => m_axi_gmemo_WSTRB,
        WLAST => m_axi_gmemo_WLAST,
        WID => m_axi_gmemo_WID,
        WUSER => m_axi_gmemo_WUSER,
        ARVALID => m_axi_gmemo_ARVALID,
        ARREADY => m_axi_gmemo_ARREADY,
        ARADDR => m_axi_gmemo_ARADDR,
        ARID => m_axi_gmemo_ARID,
        ARLEN => m_axi_gmemo_ARLEN,
        ARSIZE => m_axi_gmemo_ARSIZE,
        ARBURST => m_axi_gmemo_ARBURST,
        ARLOCK => m_axi_gmemo_ARLOCK,
        ARCACHE => m_axi_gmemo_ARCACHE,
        ARPROT => m_axi_gmemo_ARPROT,
        ARQOS => m_axi_gmemo_ARQOS,
        ARREGION => m_axi_gmemo_ARREGION,
        ARUSER => m_axi_gmemo_ARUSER,
        RVALID => m_axi_gmemo_RVALID,
        RREADY => m_axi_gmemo_RREADY,
        RDATA => m_axi_gmemo_RDATA,
        RLAST => m_axi_gmemo_RLAST,
        RID => m_axi_gmemo_RID,
        RUSER => m_axi_gmemo_RUSER,
        RRESP => m_axi_gmemo_RRESP,
        BVALID => m_axi_gmemo_BVALID,
        BREADY => m_axi_gmemo_BREADY,
        BRESP => m_axi_gmemo_BRESP,
        BID => m_axi_gmemo_BID,
        BUSER => m_axi_gmemo_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmemo_ARVALID,
        I_ARREADY => gmemo_ARREADY,
        I_ARADDR => gmemo_ARADDR,
        I_ARLEN => gmemo_ARLEN,
        I_RVALID => gmemo_RVALID,
        I_RREADY => gmemo_RREADY,
        I_RDATA => gmemo_RDATA,
        I_RFIFONUM => gmemo_RFIFONUM,
        I_AWVALID => gmemo_AWVALID,
        I_AWREADY => gmemo_AWREADY,
        I_AWADDR => gmemo_AWADDR,
        I_AWLEN => gmemo_AWLEN,
        I_WVALID => gmemo_WVALID,
        I_WREADY => gmemo_WREADY,
        I_WDATA => gmemo_WDATA,
        I_WSTRB => gmemo_WSTRB,
        I_BVALID => gmemo_BVALID,
        I_BREADY => gmemo_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_ready = ap_const_logic_1)) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_1))) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_ready = ap_const_logic_1)) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_ready = ap_const_logic_1)) then 
                    grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_0))) then 
                i_reg_139 <= ap_const_lv63_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done = ap_const_logic_1))) then 
                i_reg_139 <= i_1_reg_370;
            end if; 
        end if;
    end process;

    indvars_iv_reg_117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_0))) then 
                indvars_iv_reg_117 <= t_fu_84;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done = ap_const_logic_1))) then 
                indvars_iv_reg_117 <= add_ln559_reg_385;
            end if; 
        end if;
    end process;

    j1_2_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_0))) then 
                j1_2_reg_127 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done = ap_const_logic_1))) then 
                j1_2_reg_127 <= j1_reg_380;
            end if; 
        end if;
    end process;

    m_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_fu_80 <= m_7_fu_183_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln559_fu_255_p2 = ap_const_lv1_1))) then 
                m_fu_80 <= zext_ln557_reg_345;
            end if; 
        end if;
    end process;

    t_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_fu_84 <= ap_const_lv64_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln559_fu_255_p2 = ap_const_lv1_1))) then 
                t_fu_84 <= dt_reg_360;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                a_read_reg_316 <= a;
                m_7_reg_328 <= m_7_fu_183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln559_fu_255_p2 = ap_const_lv1_0))) then
                add_ln559_reg_385 <= add_ln559_fu_285_p2;
                j1_reg_380 <= j1_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_0))) then
                    dt_reg_360(63 downto 1) <= dt_fu_249_p2(63 downto 1);
                hm_reg_340 <= m_fu_80(63 downto 1);
                trunc_ln558_reg_355 <= trunc_ln558_fu_245_p1;
                trunc_ln_reg_350 <= m_fu_80(10 downto 1);
                    zext_ln557_reg_345(62 downto 0) <= zext_ln557_fu_231_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_1_reg_370 <= i_1_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                s_reg_390 <= iGMb_q0;
            end if;
        end if;
    end process;
    zext_ln557_reg_345(63) <= '0';
    dt_reg_360(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln554_fu_215_p2, ap_CS_fsm_state3, icmp_ln559_fu_255_p2, grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln554_fu_215_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln559_fu_255_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln559_fu_285_p2 <= std_logic_vector(unsigned(dt_reg_360) + unsigned(indvars_iv_reg_117));
    add_ln564_fu_270_p2 <= std_logic_vector(unsigned(trunc_ln559_fu_266_p1) + unsigned(trunc_ln_reg_350));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done)
    begin
        if ((grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done)
    begin
        if ((grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done)
    begin
        if ((grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    dt_fu_249_p2 <= std_logic_vector(shift_left(unsigned(t_fu_84),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));

    gmemo_ARADDR_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARADDR, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARADDR, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_ARADDR <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_ARADDR <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARADDR;
        else 
            gmemo_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmemo_ARLEN_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLEN, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLEN, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_ARLEN <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_ARLEN <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARLEN;
        else 
            gmemo_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmemo_ARVALID_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARVALID, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARVALID, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_ARVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_ARVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_ARVALID;
        else 
            gmemo_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmemo_AWADDR_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWADDR, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWADDR, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_AWADDR <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_AWADDR <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWADDR;
        else 
            gmemo_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmemo_AWLEN_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLEN, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLEN, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_AWLEN <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_AWLEN <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWLEN;
        else 
            gmemo_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmemo_AWVALID_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWVALID, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWVALID, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_AWVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_AWVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_AWVALID;
        else 
            gmemo_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmemo_BREADY_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_BREADY, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_BREADY, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_BREADY <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_BREADY <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_BREADY;
        else 
            gmemo_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmemo_RREADY_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_RREADY, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_RREADY, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_RREADY <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_RREADY <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_RREADY;
        else 
            gmemo_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmemo_WDATA_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WDATA, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WDATA, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_WDATA <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_WDATA <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WDATA;
        else 
            gmemo_WDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmemo_WSTRB_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WSTRB, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WSTRB, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_WSTRB <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_WSTRB <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WSTRB;
        else 
            gmemo_WSTRB <= "XX";
        end if; 
    end process;


    gmemo_WVALID_assign_proc : process(ap_CS_fsm_state4, grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WVALID, grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WVALID, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmemo_WVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_m_axi_gmemo_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmemo_WVALID <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_m_axi_gmemo_WVALID;
        else 
            gmemo_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start <= grp_mq_iNTT_Pipeline_VITIS_LOOP_565_3_fu_156_ap_start_reg;
    grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start <= grp_mq_iNTT_Pipeline_VITIS_LOOP_590_4_fu_150_ap_start_reg;
    grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start <= grp_mq_iNTT_Pipeline_VITIS_LOOP_593_5_fu_170_ap_start_reg;
    hm_fu_221_p4 <= m_fu_80(63 downto 1);
    iGMb_address0 <= zext_ln564_fu_275_p1(10 - 1 downto 0);

    iGMb_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            iGMb_ce0 <= ap_const_logic_1;
        else 
            iGMb_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_260_p2 <= std_logic_vector(unsigned(i_reg_139) + unsigned(ap_const_lv63_1));
    icmp_ln554_fu_215_p2 <= "1" when (tmp_fu_205_p4 = ap_const_lv63_0) else "0";
    icmp_ln559_fu_255_p2 <= "1" when (i_reg_139 = hm_reg_340) else "0";
    j1_fu_280_p2 <= std_logic_vector(unsigned(dt_reg_360) + unsigned(j1_2_reg_127));
    m_7_fu_183_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1),to_integer(unsigned('0' & zext_ln551_fu_179_p1(31-1 downto 0)))));
    tmp_fu_205_p4 <= m_fu_80(63 downto 1);
    trunc_ln558_fu_245_p1 <= t_fu_84(63 - 1 downto 0);
    trunc_ln559_fu_266_p1 <= i_reg_139(10 - 1 downto 0);
    zext_ln551_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),64));
    zext_ln557_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hm_fu_221_p4),64));
    zext_ln564_fu_275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln564_fu_270_p2),64));
end behav;
