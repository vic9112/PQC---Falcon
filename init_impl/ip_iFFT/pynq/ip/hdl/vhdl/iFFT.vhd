-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iFFT is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of iFFT is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "iFFT_iFFT,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=25.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=18.250000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=5228,HLS_SYN_LUT=6284,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal f : STD_LOGIC_VECTOR (63 downto 0);
    signal logn : STD_LOGIC_VECTOR (31 downto 0);
    signal fpr_gm_tab_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal fpr_gm_tab_ce0 : STD_LOGIC;
    signal fpr_gm_tab_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal fpr_gm_tab_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal fpr_gm_tab_ce1 : STD_LOGIC;
    signal fpr_gm_tab_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal fpr_p2_tab_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fpr_p2_tab_ce0 : STD_LOGIC;
    signal fpr_p2_tab_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal logn_read_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_read_reg_439 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1455_fu_213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1455_reg_445 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_reg_450 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1458_fu_233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1458_reg_455 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_460 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln1463_fu_297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1463_reg_474 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln1459_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dt_fu_301_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dt_reg_479 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_reg_486 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1481_fu_317_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln1481_reg_491 : STD_LOGIC_VECTOR (60 downto 0);
    signal icmp_ln1496_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_reg_496 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_1_fu_331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_1_reg_508 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln1465_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_fu_370_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j1_reg_523 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1465_fu_375_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1465_reg_528 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_re_reg_533 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal s_im_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_im_reg_538 : STD_LOGIC_VECTOR (63 downto 0);
    signal ni_reg_543 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_idle : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_ready : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_ce : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_done : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_idle : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_ready : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_ce : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal indvars_iv_reg_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i1_reg_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal j1_2_reg_175 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg : STD_LOGIC := '0';
    signal grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln1472_fu_354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1473_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_92 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_fu_96 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_4_fu_380_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal hn_fu_223_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_fu_268_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal hm_fu_287_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln1472_fu_337_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1472_fu_341_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_346_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1473_fu_359_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln147_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln147_fu_402_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_548_ce : STD_LOGIC;
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component iFFT_iFFT_Pipeline_VITIS_LOOP_1474_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        j1_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        indvars_iv : IN STD_LOGIC_VECTOR (63 downto 0);
        f : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (60 downto 0);
        trunc_ln2 : IN STD_LOGIC_VECTOR (60 downto 0);
        s_re : IN STD_LOGIC_VECTOR (63 downto 0);
        s_im : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_ce : OUT STD_LOGIC );
    end component;


    component iFFT_iFFT_Pipeline_VITIS_LOOP_1500_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        n : IN STD_LOGIC_VECTOR (63 downto 0);
        f : IN STD_LOGIC_VECTOR (63 downto 0);
        ni : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_548_p_ce : OUT STD_LOGIC );
    end component;


    component iFFT_dmul_64ns_64ns_64_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component iFFT_fpr_gm_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component iFFT_fpr_p2_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component iFFT_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        f : OUT STD_LOGIC_VECTOR (63 downto 0);
        logn : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component iFFT_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    fpr_gm_tab_U : component iFFT_fpr_gm_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fpr_gm_tab_address0,
        ce0 => fpr_gm_tab_ce0,
        q0 => fpr_gm_tab_q0,
        address1 => fpr_gm_tab_address1,
        ce1 => fpr_gm_tab_ce1,
        q1 => fpr_gm_tab_q1);

    fpr_p2_tab_U : component iFFT_fpr_p2_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fpr_p2_tab_address0,
        ce0 => fpr_p2_tab_ce0,
        q0 => fpr_p2_tab_q0);

    grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187 : component iFFT_iFFT_Pipeline_VITIS_LOOP_1474_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start,
        ap_done => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done,
        ap_idle => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_idle,
        ap_ready => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_ready,
        m_axi_gmem0_AWVALID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        j1_2 => j1_2_reg_175,
        indvars_iv => indvars_iv_reg_154,
        f => f_read_reg_439,
        trunc_ln => trunc_ln_reg_460,
        trunc_ln2 => trunc_ln1481_reg_491,
        s_re => s_re_reg_533,
        s_im => s_im_reg_538,
        grp_fu_548_p_din0 => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din0,
        grp_fu_548_p_din1 => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din1,
        grp_fu_548_p_dout0 => grp_fu_548_p2,
        grp_fu_548_p_ce => grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_ce);

    grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203 : component iFFT_iFFT_Pipeline_VITIS_LOOP_1500_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start,
        ap_done => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_done,
        ap_idle => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_idle,
        ap_ready => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_ready,
        m_axi_gmem0_AWVALID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        n => n_reg_450,
        f => f_read_reg_439,
        ni => ni_reg_543,
        grp_fu_548_p_din0 => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din0,
        grp_fu_548_p_din1 => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din1,
        grp_fu_548_p_dout0 => grp_fu_548_p2,
        grp_fu_548_p_ce => grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_ce);

    control_s_axi_U : component iFFT_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        f => f,
        logn => logn,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component iFFT_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_DW => 64,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARLEN => gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => gmem0_AWADDR,
        I_AWLEN => gmem0_AWLEN,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => gmem0_WDATA,
        I_WSTRB => gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY);

    dmul_64ns_64ns_64_4_max_dsp_1_U19 : component iFFT_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_548_p0,
        din1 => grp_fu_548_p1,
        ce => grp_fu_548_ce,
        dout => grp_fu_548_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_ready = ap_const_logic_1)) then 
                    grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_0))) then 
                i1_reg_164 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done = ap_const_logic_1))) then 
                i1_reg_164 <= i1_1_reg_508;
            end if; 
        end if;
    end process;

    indvars_iv_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_0))) then 
                indvars_iv_reg_154 <= t_fu_100;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done = ap_const_logic_1))) then 
                indvars_iv_reg_154 <= add_ln1465_reg_528;
            end if; 
        end if;
    end process;

    j1_2_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_0))) then 
                j1_2_reg_175 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done = ap_const_logic_1))) then 
                j1_2_reg_175 <= j1_reg_523;
            end if; 
        end if;
    end process;

    m_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                m_fu_92 <= n_fu_217_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1465_fu_326_p2 = ap_const_lv1_0))) then 
                m_fu_92 <= zext_ln1463_reg_474;
            end if; 
        end if;
    end process;

    t_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_fu_100 <= ap_const_lv64_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1465_fu_326_p2 = ap_const_lv1_0))) then 
                t_fu_100 <= dt_reg_479;
            end if; 
        end if;
    end process;

    u_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                u_fu_96 <= zext_ln1455_fu_213_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1465_fu_326_p2 = ap_const_lv1_0))) then 
                u_fu_96 <= u_4_fu_380_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1465_fu_326_p2 = ap_const_lv1_1))) then
                add_ln1465_reg_528 <= add_ln1465_fu_375_p2;
                j1_reg_523 <= j1_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_0))) then
                    dt_reg_479(63 downto 1) <= dt_fu_301_p2(63 downto 1);
                trunc_ln1481_reg_491 <= trunc_ln1481_fu_317_p1;
                trunc_ln1_reg_486 <= m_fu_92(10 downto 1);
                    zext_ln1463_reg_474(62 downto 0) <= zext_ln1463_fu_297_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                f_read_reg_439 <= f;
                logn_read_reg_434 <= logn;
                n_reg_450 <= n_fu_217_p2;
                trunc_ln_reg_460 <= n_fu_217_p2(61 downto 1);
                    zext_ln1455_reg_445(31 downto 0) <= zext_ln1455_fu_213_p1(31 downto 0);
                    zext_ln1458_reg_455(62 downto 0) <= zext_ln1458_fu_233_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i1_1_reg_508 <= i1_1_fu_331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_1))) then
                icmp_ln1496_reg_496 <= icmp_ln1496_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                ni_reg_543 <= fpr_p2_tab_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                s_im_reg_538 <= s_im_fu_408_p1;
                s_re_reg_533 <= fpr_gm_tab_q1;
            end if;
        end if;
    end process;
    zext_ln1455_reg_445(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln1458_reg_455(63) <= '0';
    zext_ln1463_reg_474(63) <= '0';
    dt_reg_479(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln1459_fu_278_p2, icmp_ln1496_fu_321_p2, ap_CS_fsm_state3, icmp_ln1465_fu_326_p2, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1496_fu_321_p2 = ap_const_lv1_1) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1496_fu_321_p2 = ap_const_lv1_0) and (icmp_ln1459_fu_278_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln1465_fu_326_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln1465_fu_375_p2 <= std_logic_vector(unsigned(dt_reg_479) + unsigned(indvars_iv_reg_154));
    add_ln1472_fu_341_p2 <= std_logic_vector(unsigned(trunc_ln1472_fu_337_p1) + unsigned(trunc_ln1_reg_486));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done)
    begin
        if ((grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(icmp_ln1496_reg_496, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_done = ap_const_logic_0) and (icmp_ln1496_reg_496 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln147_fu_398_p1 <= fpr_gm_tab_q0;
    dt_fu_301_p2 <= std_logic_vector(shift_left(unsigned(t_fu_100),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    fpr_gm_tab_address0 <= zext_ln1473_fu_365_p1(11 - 1 downto 0);
    fpr_gm_tab_address1 <= zext_ln1472_fu_354_p1(11 - 1 downto 0);

    fpr_gm_tab_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fpr_gm_tab_ce0 <= ap_const_logic_1;
        else 
            fpr_gm_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fpr_gm_tab_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fpr_gm_tab_ce1 <= ap_const_logic_1;
        else 
            fpr_gm_tab_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    fpr_p2_tab_address0 <= zext_ln1455_reg_445(4 - 1 downto 0);

    fpr_p2_tab_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fpr_p2_tab_ce0 <= ap_const_logic_1;
        else 
            fpr_p2_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_ARADDR_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARADDR, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARADDR, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_ARADDR <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_ARADDR <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLEN, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLEN, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_ARLEN <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_ARLEN <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARVALID, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARVALID, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_ARVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_ARVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWADDR_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWADDR, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWADDR, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_AWADDR <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_AWADDR <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWADDR;
        else 
            gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWLEN_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLEN, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLEN, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_AWLEN <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_AWLEN <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWLEN;
        else 
            gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWVALID, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWVALID, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_AWVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_AWVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_BREADY, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_BREADY, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_BREADY <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_BREADY <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_RREADY, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_RREADY, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_RREADY <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_RREADY <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WDATA_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WDATA, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WDATA, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_WDATA <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_WDATA <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WDATA;
        else 
            gmem0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_WSTRB_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WSTRB, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WSTRB, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_WSTRB <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_WSTRB <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WSTRB;
        else 
            gmem0_WSTRB <= "XXXXXXXX";
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(icmp_ln1496_reg_496, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WVALID, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WVALID, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1496_reg_496 = ap_const_lv1_0)))) then 
            gmem0_WVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_WVALID <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_548_ce_assign_proc : process(grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_ce, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_ce, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_548_ce <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_548_ce <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_ce;
        else 
            grp_fu_548_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_548_p0_assign_proc : process(grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din0, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_548_p0 <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_548_p0 <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din0;
        else 
            grp_fu_548_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_548_p1_assign_proc : process(grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din1, grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_548_p1 <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_grp_fu_548_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_548_p1 <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_grp_fu_548_p_din1;
        else 
            grp_fu_548_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start <= grp_iFFT_Pipeline_VITIS_LOOP_1474_3_fu_187_ap_start_reg;
    grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start <= grp_iFFT_Pipeline_VITIS_LOOP_1500_4_fu_203_ap_start_reg;
    hm_fu_287_p4 <= m_fu_92(63 downto 1);
    hn_fu_223_p4 <= n_fu_217_p2(63 downto 1);
    i1_1_fu_331_p2 <= std_logic_vector(unsigned(i1_reg_164) + unsigned(ap_const_lv64_1));
    icmp_ln1459_fu_278_p2 <= "1" when (tmp_fu_268_p4 = ap_const_lv63_0) else "0";
    icmp_ln1465_fu_326_p2 <= "1" when (unsigned(j1_2_reg_175) < unsigned(zext_ln1458_reg_455)) else "0";
    icmp_ln1496_fu_321_p2 <= "1" when (logn_read_reg_434 = ap_const_lv32_0) else "0";
    j1_fu_370_p2 <= std_logic_vector(unsigned(dt_reg_479) + unsigned(j1_2_reg_175));
    n_fu_217_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1),to_integer(unsigned('0' & zext_ln1455_fu_213_p1(31-1 downto 0)))));
    or_ln1473_fu_359_p2 <= (shl_ln_fu_346_p3 or ap_const_lv11_1);
    s_im_fu_408_p1 <= xor_ln147_fu_402_p2;
    shl_ln_fu_346_p3 <= (add_ln1472_fu_341_p2 & ap_const_lv1_0);
    tmp_fu_268_p4 <= u_fu_96(63 downto 1);
    trunc_ln1472_fu_337_p1 <= i1_reg_164(10 - 1 downto 0);
    trunc_ln1481_fu_317_p1 <= t_fu_100(61 - 1 downto 0);
    u_4_fu_380_p2 <= std_logic_vector(unsigned(u_fu_96) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    xor_ln147_fu_402_p2 <= (bitcast_ln147_fu_398_p1 xor ap_const_lv64_8000000000000000);
    zext_ln1455_fu_213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),64));
    zext_ln1458_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hn_fu_223_p4),64));
    zext_ln1463_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hm_fu_287_p4),64));
    zext_ln1472_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_346_p3),64));
    zext_ln1473_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1473_fu_359_p2),64));
end behav;
