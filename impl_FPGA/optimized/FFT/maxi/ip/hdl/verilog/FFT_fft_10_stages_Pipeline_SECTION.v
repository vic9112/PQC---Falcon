// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT_fft_10_stages_Pipeline_SECTION (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stage0_r_1_address0,
        stage0_r_1_ce0,
        stage0_r_1_we0,
        stage0_r_1_d0,
        stage0_r_1_address1,
        stage0_r_1_ce1,
        stage0_r_1_we1,
        stage0_r_1_d1,
        stage0_r_3_address0,
        stage0_r_3_ce0,
        stage0_r_3_we0,
        stage0_r_3_d0,
        stage0_r_3_address1,
        stage0_r_3_ce1,
        stage0_r_3_we1,
        stage0_r_3_d1,
        stage0_i_1_address0,
        stage0_i_1_ce0,
        stage0_i_1_we0,
        stage0_i_1_d0,
        stage0_i_1_address1,
        stage0_i_1_ce1,
        stage0_i_1_we1,
        stage0_i_1_d1,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in_r_address1,
        in_r_ce1,
        in_r_q1,
        in_i_address0,
        in_i_ce0,
        in_i_q0,
        in_i_address1,
        in_i_ce1,
        in_i_q1,
        stage0_r_address0,
        stage0_r_ce0,
        stage0_r_we0,
        stage0_r_d0,
        stage0_r_address1,
        stage0_r_ce1,
        stage0_r_we1,
        stage0_r_d1,
        stage0_r_2_address0,
        stage0_r_2_ce0,
        stage0_r_2_we0,
        stage0_r_2_d0,
        stage0_r_2_address1,
        stage0_r_2_ce1,
        stage0_r_2_we1,
        stage0_r_2_d1,
        stage0_i_address0,
        stage0_i_ce0,
        stage0_i_we0,
        stage0_i_d0,
        stage0_i_address1,
        stage0_i_ce1,
        stage0_i_we1,
        stage0_i_d1,
        stage0_i_3_address0,
        stage0_i_3_ce0,
        stage0_i_3_we0,
        stage0_i_3_d0,
        stage0_i_3_address1,
        stage0_i_3_ce1,
        stage0_i_3_we1,
        stage0_i_3_d1,
        stage0_i_2_address0,
        stage0_i_2_ce0,
        stage0_i_2_we0,
        stage0_i_2_d0,
        stage0_i_2_address1,
        stage0_i_2_ce1,
        stage0_i_2_we1,
        stage0_i_2_d1,
        grp_complex_mul_fu_308_p_din1,
        grp_complex_mul_fu_308_p_din2,
        grp_complex_mul_fu_308_p_din3,
        grp_complex_mul_fu_308_p_din4,
        grp_complex_mul_fu_308_p_dout0_0,
        grp_complex_mul_fu_308_p_dout0_1,
        grp_complex_mul_fu_308_p_ce,
        grp_fu_315_p_din0,
        grp_fu_315_p_din1,
        grp_fu_315_p_opcode,
        grp_fu_315_p_dout0,
        grp_fu_315_p_ce,
        grp_fu_319_p_din0,
        grp_fu_319_p_din1,
        grp_fu_319_p_opcode,
        grp_fu_319_p_dout0,
        grp_fu_319_p_ce,
        grp_fu_323_p_din0,
        grp_fu_323_p_din1,
        grp_fu_323_p_opcode,
        grp_fu_323_p_dout0,
        grp_fu_323_p_ce,
        grp_fu_327_p_din0,
        grp_fu_327_p_din1,
        grp_fu_327_p_opcode,
        grp_fu_327_p_dout0,
        grp_fu_327_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] stage0_r_1_address0;
output   stage0_r_1_ce0;
output   stage0_r_1_we0;
output  [63:0] stage0_r_1_d0;
output  [6:0] stage0_r_1_address1;
output   stage0_r_1_ce1;
output   stage0_r_1_we1;
output  [63:0] stage0_r_1_d1;
output  [6:0] stage0_r_3_address0;
output   stage0_r_3_ce0;
output   stage0_r_3_we0;
output  [63:0] stage0_r_3_d0;
output  [6:0] stage0_r_3_address1;
output   stage0_r_3_ce1;
output   stage0_r_3_we1;
output  [63:0] stage0_r_3_d1;
output  [6:0] stage0_i_1_address0;
output   stage0_i_1_ce0;
output   stage0_i_1_we0;
output  [63:0] stage0_i_1_d0;
output  [6:0] stage0_i_1_address1;
output   stage0_i_1_ce1;
output   stage0_i_1_we1;
output  [63:0] stage0_i_1_d1;
output  [8:0] in_r_address0;
output   in_r_ce0;
input  [63:0] in_r_q0;
output  [8:0] in_r_address1;
output   in_r_ce1;
input  [63:0] in_r_q1;
output  [8:0] in_i_address0;
output   in_i_ce0;
input  [63:0] in_i_q0;
output  [8:0] in_i_address1;
output   in_i_ce1;
input  [63:0] in_i_q1;
output  [6:0] stage0_r_address0;
output   stage0_r_ce0;
output   stage0_r_we0;
output  [63:0] stage0_r_d0;
output  [6:0] stage0_r_address1;
output   stage0_r_ce1;
output   stage0_r_we1;
output  [63:0] stage0_r_d1;
output  [6:0] stage0_r_2_address0;
output   stage0_r_2_ce0;
output   stage0_r_2_we0;
output  [63:0] stage0_r_2_d0;
output  [6:0] stage0_r_2_address1;
output   stage0_r_2_ce1;
output   stage0_r_2_we1;
output  [63:0] stage0_r_2_d1;
output  [6:0] stage0_i_address0;
output   stage0_i_ce0;
output   stage0_i_we0;
output  [63:0] stage0_i_d0;
output  [6:0] stage0_i_address1;
output   stage0_i_ce1;
output   stage0_i_we1;
output  [63:0] stage0_i_d1;
output  [6:0] stage0_i_3_address0;
output   stage0_i_3_ce0;
output   stage0_i_3_we0;
output  [63:0] stage0_i_3_d0;
output  [6:0] stage0_i_3_address1;
output   stage0_i_3_ce1;
output   stage0_i_3_we1;
output  [63:0] stage0_i_3_d1;
output  [6:0] stage0_i_2_address0;
output   stage0_i_2_ce0;
output   stage0_i_2_we0;
output  [63:0] stage0_i_2_d0;
output  [6:0] stage0_i_2_address1;
output   stage0_i_2_ce1;
output   stage0_i_2_we1;
output  [63:0] stage0_i_2_d1;
output  [63:0] grp_complex_mul_fu_308_p_din1;
output  [63:0] grp_complex_mul_fu_308_p_din2;
output  [63:0] grp_complex_mul_fu_308_p_din3;
output  [63:0] grp_complex_mul_fu_308_p_din4;
input  [63:0] grp_complex_mul_fu_308_p_dout0_0;
input  [63:0] grp_complex_mul_fu_308_p_dout0_1;
output   grp_complex_mul_fu_308_p_ce;
output  [63:0] grp_fu_315_p_din0;
output  [63:0] grp_fu_315_p_din1;
output  [1:0] grp_fu_315_p_opcode;
input  [63:0] grp_fu_315_p_dout0;
output   grp_fu_315_p_ce;
output  [63:0] grp_fu_319_p_din0;
output  [63:0] grp_fu_319_p_din1;
output  [1:0] grp_fu_319_p_opcode;
input  [63:0] grp_fu_319_p_dout0;
output   grp_fu_319_p_ce;
output  [63:0] grp_fu_323_p_din0;
output  [63:0] grp_fu_323_p_din1;
output  [1:0] grp_fu_323_p_opcode;
input  [63:0] grp_fu_323_p_dout0;
output   grp_fu_323_p_ce;
output  [63:0] grp_fu_327_p_din0;
output  [63:0] grp_fu_327_p_din1;
output  [1:0] grp_fu_327_p_opcode;
input  [63:0] grp_fu_327_p_dout0;
output   grp_fu_327_p_ce;

reg ap_idle;
reg stage0_r_1_ce0;
reg stage0_r_1_we0;
reg stage0_r_1_ce1;
reg stage0_r_1_we1;
reg stage0_r_3_ce0;
reg stage0_r_3_we0;
reg stage0_r_3_ce1;
reg stage0_r_3_we1;
reg stage0_i_1_ce0;
reg stage0_i_1_we0;
reg stage0_i_1_ce1;
reg stage0_i_1_we1;
reg[8:0] in_r_address0;
reg in_r_ce0;
reg[8:0] in_r_address1;
reg in_r_ce1;
reg[8:0] in_i_address0;
reg in_i_ce0;
reg[8:0] in_i_address1;
reg in_i_ce1;
reg stage0_r_ce0;
reg stage0_r_we0;
reg stage0_r_ce1;
reg stage0_r_we1;
reg stage0_r_2_ce0;
reg stage0_r_2_we0;
reg stage0_r_2_ce1;
reg stage0_r_2_we1;
reg stage0_i_ce0;
reg stage0_i_we0;
reg stage0_i_ce1;
reg stage0_i_we1;
reg stage0_i_3_ce0;
reg stage0_i_3_we0;
reg stage0_i_3_ce1;
reg stage0_i_3_we1;
reg stage0_i_2_ce0;
reg stage0_i_2_we0;
reg stage0_i_2_ce1;
reg stage0_i_2_we1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] tmp_reg_542;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] tmp_fu_414_p3;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_542_pp0_iter1_reg;
reg   [0:0] tmp_reg_542_pp0_iter2_reg;
reg   [0:0] tmp_reg_542_pp0_iter3_reg;
reg   [0:0] tmp_reg_542_pp0_iter4_reg;
reg   [0:0] tmp_reg_542_pp0_iter5_reg;
reg   [0:0] tmp_reg_542_pp0_iter6_reg;
reg   [0:0] tmp_reg_542_pp0_iter7_reg;
reg   [0:0] tmp_reg_542_pp0_iter8_reg;
reg   [0:0] tmp_reg_542_pp0_iter9_reg;
wire   [7:0] i_fu_422_p1;
reg   [7:0] i_reg_546;
reg   [5:0] lshr_ln_reg_561;
reg   [5:0] lshr_ln_reg_561_pp0_iter1_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter2_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter3_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter4_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter5_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter6_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter7_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter8_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter9_reg;
reg   [5:0] lshr_ln_reg_561_pp0_iter10_reg;
wire   [0:0] icmp_ln96_fu_454_p2;
reg   [0:0] icmp_ln96_reg_567;
reg   [0:0] icmp_ln96_reg_567_pp0_iter1_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter2_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter3_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter4_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter5_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter6_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter7_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter8_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter9_reg;
reg   [0:0] icmp_ln96_reg_567_pp0_iter10_reg;
wire   [7:0] i_8_fu_460_p2;
reg   [7:0] i_8_reg_571;
wire   [0:0] icmp_ln96_4_fu_486_p2;
reg   [0:0] icmp_ln96_4_reg_586;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter1_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter2_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter3_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter4_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter5_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter6_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter7_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter8_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter9_reg;
reg   [0:0] icmp_ln96_4_reg_586_pp0_iter10_reg;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] tmp_re_7_reg_620;
reg   [63:0] tmp_im_7_reg_625;
reg   [63:0] x_re_reg_630;
reg   [63:0] x_re_reg_630_pp0_iter2_reg;
reg   [63:0] x_re_reg_630_pp0_iter3_reg;
reg   [63:0] x_re_reg_630_pp0_iter4_reg;
reg   [63:0] x_re_reg_630_pp0_iter5_reg;
reg   [63:0] x_re_reg_630_pp0_iter6_reg;
reg   [63:0] x_re_reg_630_pp0_iter7_reg;
reg   [63:0] x_re_reg_630_pp0_iter8_reg;
reg   [63:0] x_im_reg_636;
reg   [63:0] x_im_reg_636_pp0_iter2_reg;
reg   [63:0] x_im_reg_636_pp0_iter3_reg;
reg   [63:0] x_im_reg_636_pp0_iter4_reg;
reg   [63:0] x_im_reg_636_pp0_iter5_reg;
reg   [63:0] x_im_reg_636_pp0_iter6_reg;
reg   [63:0] x_im_reg_636_pp0_iter7_reg;
reg   [63:0] x_im_reg_636_pp0_iter8_reg;
reg   [63:0] x_re_7_reg_642;
reg   [63:0] x_re_7_reg_642_pp0_iter2_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter3_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter4_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter5_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter6_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter7_reg;
reg   [63:0] x_re_7_reg_642_pp0_iter8_reg;
reg   [63:0] x_im_7_reg_648;
reg   [63:0] x_im_7_reg_648_pp0_iter2_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter3_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter4_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter5_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter6_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter7_reg;
reg   [63:0] x_im_7_reg_648_pp0_iter8_reg;
reg   [63:0] y_re_reg_654;
reg   [63:0] y_im_reg_660;
reg   [63:0] y_re_4_reg_666;
reg   [63:0] y_im_4_reg_672;
wire   [63:0] zext_ln96_fu_513_p1;
reg   [63:0] zext_ln96_reg_678;
wire   [63:0] zext_ln99_fu_527_p1;
reg   [63:0] zext_ln99_reg_686;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] grp_complex_mul_fu_354_x_re;
reg   [63:0] grp_complex_mul_fu_354_x_im;
reg    grp_complex_mul_fu_354_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call14;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call14;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call14;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call14;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call14;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call14;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call14;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call14;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call14;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call14;
wire    ap_block_state21_pp0_stage0_iter10_ignore_call14;
wire    ap_block_state23_pp0_stage0_iter11_ignore_call14;
wire    ap_block_pp0_stage0_11001_ignoreCallOp76;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call14;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call14;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call14;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call14;
wire    ap_block_state10_pp0_stage1_iter4_ignore_call14;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call14;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call14;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call14;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call14;
wire    ap_block_state20_pp0_stage1_iter9_ignore_call14;
wire    ap_block_state22_pp0_stage1_iter10_ignore_call14;
wire    ap_block_pp0_stage1_11001_ignoreCallOp66;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln91_fu_434_p1;
wire   [63:0] zext_ln91_7_fu_474_p1;
wire   [63:0] zext_ln89_fu_503_p1;
wire   [63:0] zext_ln89_2_fu_508_p1;
reg   [8:0] n_fu_68;
wire   [8:0] n_14_fu_492_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_n_13;
reg   [63:0] grp_fu_366_p0;
reg   [63:0] grp_fu_366_p1;
reg   [63:0] grp_fu_372_p0;
reg   [63:0] grp_fu_372_p1;
reg   [63:0] grp_fu_378_p0;
reg   [63:0] grp_fu_378_p1;
reg   [63:0] grp_fu_384_p0;
reg   [63:0] grp_fu_384_p1;
wire   [8:0] zext_ln91_cast_fu_426_p3;
wire   [1:0] trunc_ln96_fu_450_p1;
wire   [8:0] zext_ln91_2_cast_fu_466_p3;
wire   [1:0] or_ln96_fu_480_p2;
wire   [6:0] zext_ln99_cast_fu_520_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter10_stage0;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_414_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n_fu_68 <= n_14_fu_492_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_68 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_fu_414_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_8_reg_571[7 : 1] <= i_8_fu_460_p2[7 : 1];
        i_reg_546 <= i_fu_422_p1;
        icmp_ln96_4_reg_586 <= icmp_ln96_4_fu_486_p2;
        icmp_ln96_reg_567 <= icmp_ln96_fu_454_p2;
        lshr_ln_reg_561 <= {{ap_sig_allocacmp_n_13[7:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln96_4_reg_586_pp0_iter10_reg <= icmp_ln96_4_reg_586_pp0_iter9_reg;
        icmp_ln96_4_reg_586_pp0_iter1_reg <= icmp_ln96_4_reg_586;
        icmp_ln96_4_reg_586_pp0_iter2_reg <= icmp_ln96_4_reg_586_pp0_iter1_reg;
        icmp_ln96_4_reg_586_pp0_iter3_reg <= icmp_ln96_4_reg_586_pp0_iter2_reg;
        icmp_ln96_4_reg_586_pp0_iter4_reg <= icmp_ln96_4_reg_586_pp0_iter3_reg;
        icmp_ln96_4_reg_586_pp0_iter5_reg <= icmp_ln96_4_reg_586_pp0_iter4_reg;
        icmp_ln96_4_reg_586_pp0_iter6_reg <= icmp_ln96_4_reg_586_pp0_iter5_reg;
        icmp_ln96_4_reg_586_pp0_iter7_reg <= icmp_ln96_4_reg_586_pp0_iter6_reg;
        icmp_ln96_4_reg_586_pp0_iter8_reg <= icmp_ln96_4_reg_586_pp0_iter7_reg;
        icmp_ln96_4_reg_586_pp0_iter9_reg <= icmp_ln96_4_reg_586_pp0_iter8_reg;
        icmp_ln96_reg_567_pp0_iter10_reg <= icmp_ln96_reg_567_pp0_iter9_reg;
        icmp_ln96_reg_567_pp0_iter1_reg <= icmp_ln96_reg_567;
        icmp_ln96_reg_567_pp0_iter2_reg <= icmp_ln96_reg_567_pp0_iter1_reg;
        icmp_ln96_reg_567_pp0_iter3_reg <= icmp_ln96_reg_567_pp0_iter2_reg;
        icmp_ln96_reg_567_pp0_iter4_reg <= icmp_ln96_reg_567_pp0_iter3_reg;
        icmp_ln96_reg_567_pp0_iter5_reg <= icmp_ln96_reg_567_pp0_iter4_reg;
        icmp_ln96_reg_567_pp0_iter6_reg <= icmp_ln96_reg_567_pp0_iter5_reg;
        icmp_ln96_reg_567_pp0_iter7_reg <= icmp_ln96_reg_567_pp0_iter6_reg;
        icmp_ln96_reg_567_pp0_iter8_reg <= icmp_ln96_reg_567_pp0_iter7_reg;
        icmp_ln96_reg_567_pp0_iter9_reg <= icmp_ln96_reg_567_pp0_iter8_reg;
        lshr_ln_reg_561_pp0_iter10_reg <= lshr_ln_reg_561_pp0_iter9_reg;
        lshr_ln_reg_561_pp0_iter1_reg <= lshr_ln_reg_561;
        lshr_ln_reg_561_pp0_iter2_reg <= lshr_ln_reg_561_pp0_iter1_reg;
        lshr_ln_reg_561_pp0_iter3_reg <= lshr_ln_reg_561_pp0_iter2_reg;
        lshr_ln_reg_561_pp0_iter4_reg <= lshr_ln_reg_561_pp0_iter3_reg;
        lshr_ln_reg_561_pp0_iter5_reg <= lshr_ln_reg_561_pp0_iter4_reg;
        lshr_ln_reg_561_pp0_iter6_reg <= lshr_ln_reg_561_pp0_iter5_reg;
        lshr_ln_reg_561_pp0_iter7_reg <= lshr_ln_reg_561_pp0_iter6_reg;
        lshr_ln_reg_561_pp0_iter8_reg <= lshr_ln_reg_561_pp0_iter7_reg;
        lshr_ln_reg_561_pp0_iter9_reg <= lshr_ln_reg_561_pp0_iter8_reg;
        tmp_reg_542 <= ap_sig_allocacmp_n_13[32'd8];
        tmp_reg_542_pp0_iter1_reg <= tmp_reg_542;
        tmp_reg_542_pp0_iter2_reg <= tmp_reg_542_pp0_iter1_reg;
        tmp_reg_542_pp0_iter3_reg <= tmp_reg_542_pp0_iter2_reg;
        tmp_reg_542_pp0_iter4_reg <= tmp_reg_542_pp0_iter3_reg;
        tmp_reg_542_pp0_iter5_reg <= tmp_reg_542_pp0_iter4_reg;
        tmp_reg_542_pp0_iter6_reg <= tmp_reg_542_pp0_iter5_reg;
        tmp_reg_542_pp0_iter7_reg <= tmp_reg_542_pp0_iter6_reg;
        tmp_reg_542_pp0_iter8_reg <= tmp_reg_542_pp0_iter7_reg;
        tmp_reg_542_pp0_iter9_reg <= tmp_reg_542_pp0_iter8_reg;
        x_im_7_reg_648_pp0_iter2_reg <= x_im_7_reg_648;
        x_im_7_reg_648_pp0_iter3_reg <= x_im_7_reg_648_pp0_iter2_reg;
        x_im_7_reg_648_pp0_iter4_reg <= x_im_7_reg_648_pp0_iter3_reg;
        x_im_7_reg_648_pp0_iter5_reg <= x_im_7_reg_648_pp0_iter4_reg;
        x_im_7_reg_648_pp0_iter6_reg <= x_im_7_reg_648_pp0_iter5_reg;
        x_im_7_reg_648_pp0_iter7_reg <= x_im_7_reg_648_pp0_iter6_reg;
        x_im_7_reg_648_pp0_iter8_reg <= x_im_7_reg_648_pp0_iter7_reg;
        x_im_reg_636_pp0_iter2_reg <= x_im_reg_636;
        x_im_reg_636_pp0_iter3_reg <= x_im_reg_636_pp0_iter2_reg;
        x_im_reg_636_pp0_iter4_reg <= x_im_reg_636_pp0_iter3_reg;
        x_im_reg_636_pp0_iter5_reg <= x_im_reg_636_pp0_iter4_reg;
        x_im_reg_636_pp0_iter6_reg <= x_im_reg_636_pp0_iter5_reg;
        x_im_reg_636_pp0_iter7_reg <= x_im_reg_636_pp0_iter6_reg;
        x_im_reg_636_pp0_iter8_reg <= x_im_reg_636_pp0_iter7_reg;
        x_re_7_reg_642_pp0_iter2_reg <= x_re_7_reg_642;
        x_re_7_reg_642_pp0_iter3_reg <= x_re_7_reg_642_pp0_iter2_reg;
        x_re_7_reg_642_pp0_iter4_reg <= x_re_7_reg_642_pp0_iter3_reg;
        x_re_7_reg_642_pp0_iter5_reg <= x_re_7_reg_642_pp0_iter4_reg;
        x_re_7_reg_642_pp0_iter6_reg <= x_re_7_reg_642_pp0_iter5_reg;
        x_re_7_reg_642_pp0_iter7_reg <= x_re_7_reg_642_pp0_iter6_reg;
        x_re_7_reg_642_pp0_iter8_reg <= x_re_7_reg_642_pp0_iter7_reg;
        x_re_reg_630_pp0_iter2_reg <= x_re_reg_630;
        x_re_reg_630_pp0_iter3_reg <= x_re_reg_630_pp0_iter2_reg;
        x_re_reg_630_pp0_iter4_reg <= x_re_reg_630_pp0_iter3_reg;
        x_re_reg_630_pp0_iter5_reg <= x_re_reg_630_pp0_iter4_reg;
        x_re_reg_630_pp0_iter6_reg <= x_re_reg_630_pp0_iter5_reg;
        x_re_reg_630_pp0_iter7_reg <= x_re_reg_630_pp0_iter6_reg;
        x_re_reg_630_pp0_iter8_reg <= x_re_reg_630_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_im_7_reg_625 <= in_i_q0;
        tmp_re_7_reg_620 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_im_7_reg_648 <= in_i_q0;
        x_im_reg_636 <= in_i_q1;
        x_re_7_reg_642 <= in_r_q0;
        x_re_reg_630 <= in_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_im_4_reg_672 <= grp_complex_mul_fu_308_p_dout0_1;
        y_re_4_reg_666 <= grp_complex_mul_fu_308_p_dout0_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_im_reg_660 <= grp_complex_mul_fu_308_p_dout0_1;
        y_re_reg_654 <= grp_complex_mul_fu_308_p_dout0_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln96_reg_678[5 : 0] <= zext_ln96_fu_513_p1[5 : 0];
        zext_ln99_reg_686[5 : 0] <= zext_ln99_fu_527_p1[5 : 0];
    end
end

always @ (*) begin
    if (((tmp_reg_542 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (tmp_reg_542_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_13 = 9'd0;
    end else begin
        ap_sig_allocacmp_n_13 = n_fu_68;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp76) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp66) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_complex_mul_fu_354_ap_ce = 1'b1;
    end else begin
        grp_complex_mul_fu_354_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_complex_mul_fu_354_x_im = tmp_im_7_reg_625;
    end else if (((tmp_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_complex_mul_fu_354_x_im = in_i_q1;
    end else begin
        grp_complex_mul_fu_354_x_im = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_complex_mul_fu_354_x_re = tmp_re_7_reg_620;
    end else if (((tmp_reg_542 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_complex_mul_fu_354_x_re = in_r_q1;
    end else begin
        grp_complex_mul_fu_354_x_re = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_366_p0 = x_re_7_reg_642_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_366_p0 = x_re_reg_630_pp0_iter8_reg;
    end else begin
        grp_fu_366_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_366_p1 = y_re_4_reg_666;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_366_p1 = y_re_reg_654;
    end else begin
        grp_fu_366_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_372_p0 = x_im_7_reg_648_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_372_p0 = x_im_reg_636_pp0_iter8_reg;
    end else begin
        grp_fu_372_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_372_p1 = y_im_4_reg_672;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_372_p1 = y_im_reg_660;
    end else begin
        grp_fu_372_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_378_p0 = x_re_7_reg_642_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_378_p0 = x_re_reg_630_pp0_iter8_reg;
    end else begin
        grp_fu_378_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_378_p1 = y_re_4_reg_666;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_378_p1 = y_re_reg_654;
    end else begin
        grp_fu_378_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_384_p0 = x_im_7_reg_648_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_384_p0 = x_im_reg_636_pp0_iter8_reg;
    end else begin
        grp_fu_384_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_384_p1 = y_im_4_reg_672;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_384_p1 = y_im_reg_660;
    end else begin
        grp_fu_384_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            in_i_address0 = zext_ln89_2_fu_508_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            in_i_address0 = zext_ln91_7_fu_474_p1;
        end else begin
            in_i_address0 = 'bx;
        end
    end else begin
        in_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            in_i_address1 = zext_ln89_fu_503_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            in_i_address1 = zext_ln91_fu_434_p1;
        end else begin
            in_i_address1 = 'bx;
        end
    end else begin
        in_i_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_i_ce0 = 1'b1;
    end else begin
        in_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_i_ce1 = 1'b1;
    end else begin
        in_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            in_r_address0 = zext_ln89_2_fu_508_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            in_r_address0 = zext_ln91_7_fu_474_p1;
        end else begin
            in_r_address0 = 'bx;
        end
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            in_r_address1 = zext_ln89_fu_503_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            in_r_address1 = zext_ln91_fu_434_p1;
        end else begin
            in_r_address1 = 'bx;
        end
    end else begin
        in_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_r_ce1 = 1'b1;
    end else begin
        in_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_1_ce0 = 1'b1;
    end else begin
        stage0_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_1_ce1 = 1'b1;
    end else begin
        stage0_i_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_1_we0 = 1'b1;
    end else begin
        stage0_i_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_1_we1 = 1'b1;
    end else begin
        stage0_i_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_2_ce0 = 1'b1;
    end else begin
        stage0_i_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_2_ce1 = 1'b1;
    end else begin
        stage0_i_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_2_we0 = 1'b1;
    end else begin
        stage0_i_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_2_we1 = 1'b1;
    end else begin
        stage0_i_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_3_ce0 = 1'b1;
    end else begin
        stage0_i_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_3_ce1 = 1'b1;
    end else begin
        stage0_i_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_3_we0 = 1'b1;
    end else begin
        stage0_i_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_i_3_we1 = 1'b1;
    end else begin
        stage0_i_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_ce0 = 1'b1;
    end else begin
        stage0_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_ce1 = 1'b1;
    end else begin
        stage0_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_we0 = 1'b1;
    end else begin
        stage0_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_i_we1 = 1'b1;
    end else begin
        stage0_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_1_ce0 = 1'b1;
    end else begin
        stage0_r_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_1_ce1 = 1'b1;
    end else begin
        stage0_r_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_1_we0 = 1'b1;
    end else begin
        stage0_r_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_1_we1 = 1'b1;
    end else begin
        stage0_r_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_2_ce0 = 1'b1;
    end else begin
        stage0_r_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_2_ce1 = 1'b1;
    end else begin
        stage0_r_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_2_we0 = 1'b1;
    end else begin
        stage0_r_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_2_we1 = 1'b1;
    end else begin
        stage0_r_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_3_ce0 = 1'b1;
    end else begin
        stage0_r_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_3_ce1 = 1'b1;
    end else begin
        stage0_r_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_3_we0 = 1'b1;
    end else begin
        stage0_r_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln96_4_reg_586_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_r_3_we1 = 1'b1;
    end else begin
        stage0_r_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_ce0 = 1'b1;
    end else begin
        stage0_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_ce1 = 1'b1;
    end else begin
        stage0_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_we0 = 1'b1;
    end else begin
        stage0_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln96_reg_567_pp0_iter10_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stage0_r_we1 = 1'b1;
    end else begin
        stage0_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp66 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call14 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_complex_mul_fu_308_p_ce = grp_complex_mul_fu_354_ap_ce;

assign grp_complex_mul_fu_308_p_din1 = grp_complex_mul_fu_354_x_re;

assign grp_complex_mul_fu_308_p_din2 = grp_complex_mul_fu_354_x_im;

assign grp_complex_mul_fu_308_p_din3 = 64'd4604544271217802189;

assign grp_complex_mul_fu_308_p_din4 = 64'd4604544271217802189;

assign grp_fu_315_p_ce = 1'b1;

assign grp_fu_315_p_din0 = grp_fu_366_p0;

assign grp_fu_315_p_din1 = grp_fu_366_p1;

assign grp_fu_315_p_opcode = 2'd0;

assign grp_fu_319_p_ce = 1'b1;

assign grp_fu_319_p_din0 = grp_fu_372_p0;

assign grp_fu_319_p_din1 = grp_fu_372_p1;

assign grp_fu_319_p_opcode = 2'd0;

assign grp_fu_323_p_ce = 1'b1;

assign grp_fu_323_p_din0 = grp_fu_378_p0;

assign grp_fu_323_p_din1 = grp_fu_378_p1;

assign grp_fu_323_p_opcode = 2'd1;

assign grp_fu_327_p_ce = 1'b1;

assign grp_fu_327_p_din0 = grp_fu_384_p0;

assign grp_fu_327_p_din1 = grp_fu_384_p1;

assign grp_fu_327_p_opcode = 2'd1;

assign i_8_fu_460_p2 = (i_fu_422_p1 | 8'd1);

assign i_fu_422_p1 = ap_sig_allocacmp_n_13[7:0];

assign icmp_ln96_4_fu_486_p2 = ((or_ln96_fu_480_p2 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_454_p2 = ((trunc_ln96_fu_450_p1 == 2'd0) ? 1'b1 : 1'b0);

assign n_14_fu_492_p2 = (ap_sig_allocacmp_n_13 + 9'd2);

assign or_ln96_fu_480_p2 = (trunc_ln96_fu_450_p1 | 2'd1);

assign stage0_i_1_address0 = zext_ln99_reg_686;

assign stage0_i_1_address1 = zext_ln96_reg_678;

assign stage0_i_1_d0 = grp_fu_327_p_dout0;

assign stage0_i_1_d1 = grp_fu_319_p_dout0;

assign stage0_i_2_address0 = zext_ln99_fu_527_p1;

assign stage0_i_2_address1 = zext_ln96_fu_513_p1;

assign stage0_i_2_d0 = grp_fu_327_p_dout0;

assign stage0_i_2_d1 = grp_fu_319_p_dout0;

assign stage0_i_3_address0 = zext_ln99_reg_686;

assign stage0_i_3_address1 = zext_ln96_reg_678;

assign stage0_i_3_d0 = grp_fu_327_p_dout0;

assign stage0_i_3_d1 = grp_fu_319_p_dout0;

assign stage0_i_address0 = zext_ln99_fu_527_p1;

assign stage0_i_address1 = zext_ln96_fu_513_p1;

assign stage0_i_d0 = grp_fu_327_p_dout0;

assign stage0_i_d1 = grp_fu_319_p_dout0;

assign stage0_r_1_address0 = zext_ln99_reg_686;

assign stage0_r_1_address1 = zext_ln96_reg_678;

assign stage0_r_1_d0 = grp_fu_323_p_dout0;

assign stage0_r_1_d1 = grp_fu_315_p_dout0;

assign stage0_r_2_address0 = zext_ln99_fu_527_p1;

assign stage0_r_2_address1 = zext_ln96_fu_513_p1;

assign stage0_r_2_d0 = grp_fu_323_p_dout0;

assign stage0_r_2_d1 = grp_fu_315_p_dout0;

assign stage0_r_3_address0 = zext_ln99_reg_686;

assign stage0_r_3_address1 = zext_ln96_reg_678;

assign stage0_r_3_d0 = grp_fu_323_p_dout0;

assign stage0_r_3_d1 = grp_fu_315_p_dout0;

assign stage0_r_address0 = zext_ln99_fu_527_p1;

assign stage0_r_address1 = zext_ln96_fu_513_p1;

assign stage0_r_d0 = grp_fu_323_p_dout0;

assign stage0_r_d1 = grp_fu_315_p_dout0;

assign tmp_fu_414_p3 = ap_sig_allocacmp_n_13[32'd8];

assign trunc_ln96_fu_450_p1 = ap_sig_allocacmp_n_13[1:0];

assign zext_ln89_2_fu_508_p1 = i_8_reg_571;

assign zext_ln89_fu_503_p1 = i_reg_546;

assign zext_ln91_2_cast_fu_466_p3 = {{1'd1}, {i_8_fu_460_p2}};

assign zext_ln91_7_fu_474_p1 = zext_ln91_2_cast_fu_466_p3;

assign zext_ln91_cast_fu_426_p3 = {{1'd1}, {i_fu_422_p1}};

assign zext_ln91_fu_434_p1 = zext_ln91_cast_fu_426_p3;

assign zext_ln96_fu_513_p1 = lshr_ln_reg_561_pp0_iter10_reg;

assign zext_ln99_cast_fu_520_p3 = {{1'd1}, {lshr_ln_reg_561_pp0_iter10_reg}};

assign zext_ln99_fu_527_p1 = zext_ln99_cast_fu_520_p3;

always @ (posedge ap_clk) begin
    i_8_reg_571[0] <= 1'b1;
    zext_ln96_reg_678[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln99_reg_686[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000001;
end

endmodule //FFT_fft_10_stages_Pipeline_SECTION
