-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_10_stages_Pipeline_SECTION7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stage1_r_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_4_ce0 : OUT STD_LOGIC;
    stage1_r_4_we0 : OUT STD_LOGIC;
    stage1_r_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_6_ce0 : OUT STD_LOGIC;
    stage1_r_6_we0 : OUT STD_LOGIC;
    stage1_r_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_4_ce0 : OUT STD_LOGIC;
    stage1_i_4_we0 : OUT STD_LOGIC;
    stage1_i_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_1_ce0 : OUT STD_LOGIC;
    stage0_r_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_1_ce1 : OUT STD_LOGIC;
    stage0_r_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_3_ce0 : OUT STD_LOGIC;
    stage0_r_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_3_ce1 : OUT STD_LOGIC;
    stage0_r_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_1_ce0 : OUT STD_LOGIC;
    stage0_i_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_1_ce1 : OUT STD_LOGIC;
    stage0_i_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_3_ce0 : OUT STD_LOGIC;
    stage0_i_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_3_ce1 : OUT STD_LOGIC;
    stage0_i_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_ce0 : OUT STD_LOGIC;
    stage1_r_we0 : OUT STD_LOGIC;
    stage1_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_5_ce0 : OUT STD_LOGIC;
    stage1_r_5_we0 : OUT STD_LOGIC;
    stage1_r_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_ce0 : OUT STD_LOGIC;
    stage1_i_we0 : OUT STD_LOGIC;
    stage1_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_6_ce0 : OUT STD_LOGIC;
    stage1_i_6_we0 : OUT STD_LOGIC;
    stage1_i_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_5_ce0 : OUT STD_LOGIC;
    stage1_i_5_we0 : OUT STD_LOGIC;
    stage1_i_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_ce0 : OUT STD_LOGIC;
    stage0_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_ce1 : OUT STD_LOGIC;
    stage0_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_2_ce0 : OUT STD_LOGIC;
    stage0_r_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_2_ce1 : OUT STD_LOGIC;
    stage0_r_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_ce0 : OUT STD_LOGIC;
    stage0_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_ce1 : OUT STD_LOGIC;
    stage0_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_2_ce0 : OUT STD_LOGIC;
    stage0_i_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_2_ce1 : OUT STD_LOGIC;
    stage0_i_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    gm_re_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_re_tab_ce0 : OUT STD_LOGIC;
    gm_re_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    gm_im_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_im_tab_ce0 : OUT STD_LOGIC;
    gm_im_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_ce : OUT STD_LOGIC;
    grp_fu_315_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_315_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_ce : OUT STD_LOGIC;
    grp_fu_319_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_319_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_ce : OUT STD_LOGIC;
    grp_fu_323_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_323_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_ce : OUT STD_LOGIC;
    grp_fu_327_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_327_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_ce : OUT STD_LOGIC );
end;


architecture behav of FFT_fft_10_stages_Pipeline_SECTION7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal tmp_reg_860 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_536 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_544 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_560_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln85_fu_572_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_reg_864_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln89_7_reg_884 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_7_reg_884_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln91_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_reg_889_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln85_3_fu_666_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln85_3_reg_917_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln89_s_reg_925 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln89_s_reg_925_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln91_2_fu_702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_2_reg_930_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_958 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_reg_963 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_fu_721_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_fu_733_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_3_fu_745_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_3_reg_978 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_3_fu_758_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_3_reg_983 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_reg_988 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_reg_988_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_reg_988_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_reg_1016 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_reg_1022 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_3_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_3_reg_1028 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_3_reg_1028_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_3_reg_1028_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_fu_785_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_fu_798_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln96_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_1068_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_1068_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_re_3_fu_821_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_3_reg_1072 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_3_fu_834_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_3_reg_1078 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_3_reg_1084 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_3_reg_1090 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln96_2_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_2_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_2_reg_1096_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_2_reg_1096_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal grp_complex_mul_fu_494_x_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_494_x_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_494_y_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_494_y_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_494_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call40 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call40 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call40 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call40 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4_ignore_call40 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call40 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6_ignore_call40 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7_ignore_call40 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8_ignore_call40 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9_ignore_call40 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10_ignore_call40 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11_ignore_call40 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp93 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call40 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1_ignore_call40 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2_ignore_call40 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3_ignore_call40 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call40 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5_ignore_call40 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6_ignore_call40 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7_ignore_call40 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8_ignore_call40 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9_ignore_call40 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10_ignore_call40 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11_ignore_call40 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp86 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln87_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_96 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_6_fu_710_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_5 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_504_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_510_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_516_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_520_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln81_fu_568_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_580_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln85_4_fu_590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln85_4_fu_598_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln85_fu_576_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln87_4_cast_fu_608_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_fu_602_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln91_fu_632_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln91_7_fu_638_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln85_2_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln85_5_fu_662_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_2_fu_670_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln91_2_fu_686_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln91_s_fu_692_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln85_fu_816_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to11 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_complex_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_re : IN STD_LOGIC_VECTOR (63 downto 0);
        x_im : IN STD_LOGIC_VECTOR (63 downto 0);
        y_re : IN STD_LOGIC_VECTOR (63 downto 0);
        y_im : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dsub_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_mux_32_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_mux_42_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_32_64_1_1_U162 : component FFT_mux_32_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => stage0_r_q1,
        din1 => ap_const_lv64_0,
        din2 => stage0_r_2_q1,
        din3 => trunc_ln85_reg_864,
        dout => tmp_re_fu_721_p5);

    mux_32_64_1_1_U163 : component FFT_mux_32_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => stage0_i_q1,
        din1 => ap_const_lv64_0,
        din2 => stage0_i_2_q1,
        din3 => trunc_ln85_reg_864,
        dout => tmp_im_fu_733_p5);

    mux_42_64_1_1_U164 : component FFT_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => stage0_r_1_q1,
        din2 => ap_const_lv64_0,
        din3 => stage0_r_3_q1,
        din4 => trunc_ln85_3_reg_917,
        dout => tmp_re_3_fu_745_p6);

    mux_42_64_1_1_U165 : component FFT_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => stage0_i_1_q1,
        din2 => ap_const_lv64_0,
        din3 => stage0_i_3_q1,
        din4 => trunc_ln85_3_reg_917,
        dout => tmp_im_3_fu_758_p6);

    mux_32_64_1_1_U166 : component FFT_mux_32_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => stage0_r_q0,
        din1 => ap_const_lv64_0,
        din2 => stage0_r_2_q0,
        din3 => trunc_ln85_reg_864_pp0_iter8_reg,
        dout => x_re_fu_785_p5);

    mux_32_64_1_1_U167 : component FFT_mux_32_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => stage0_i_q0,
        din1 => ap_const_lv64_0,
        din2 => stage0_i_2_q0,
        din3 => trunc_ln85_reg_864_pp0_iter8_reg,
        dout => x_im_fu_798_p5);

    mux_42_64_1_1_U168 : component FFT_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => stage0_r_1_q0,
        din2 => ap_const_lv64_0,
        din3 => stage0_r_3_q0,
        din4 => trunc_ln85_3_reg_917_pp0_iter8_reg,
        dout => x_re_3_fu_821_p6);

    mux_42_64_1_1_U169 : component FFT_mux_42_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 2,
        dout_WIDTH => 64)
    port map (
        din0 => ap_const_lv64_0,
        din1 => stage0_i_1_q0,
        din2 => ap_const_lv64_0,
        din3 => stage0_i_3_q0,
        din4 => trunc_ln85_3_reg_917_pp0_iter8_reg,
        dout => x_im_3_fu_834_p6);

    flow_control_loop_pipe_sequential_init_U : component FFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    n_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_fu_560_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n_fu_96 <= n_6_fu_710_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_96 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln96_2_reg_1096 <= icmp_ln96_2_fu_847_p2;
                icmp_ln96_2_reg_1096_pp0_iter10_reg <= icmp_ln96_2_reg_1096_pp0_iter9_reg;
                icmp_ln96_2_reg_1096_pp0_iter9_reg <= icmp_ln96_2_reg_1096;
                icmp_ln96_reg_1068 <= icmp_ln96_fu_811_p2;
                icmp_ln96_reg_1068_pp0_iter10_reg <= icmp_ln96_reg_1068_pp0_iter9_reg;
                icmp_ln96_reg_1068_pp0_iter9_reg <= icmp_ln96_reg_1068;
                x_im_3_reg_1078 <= x_im_3_fu_834_p6;
                x_re_3_reg_1072 <= x_re_3_fu_821_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_860 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                gm_im_reg_963 <= gm_im_tab_q0;
                gm_re_reg_958 <= gm_re_tab_q0;
                tmp_im_3_reg_983 <= tmp_im_3_fu_758_p6;
                tmp_re_3_reg_978 <= tmp_re_3_fu_745_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_560_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln89_7_reg_884 <= i_fu_602_p2(8 downto 2);
                lshr_ln89_s_reg_925 <= i_2_fu_670_p2(8 downto 2);
                    trunc_ln85_3_reg_917(1) <= trunc_ln85_3_fu_666_p1(1);
                trunc_ln85_reg_864 <= trunc_ln85_fu_572_p1;
                    zext_ln91_2_reg_930(6 downto 0) <= zext_ln91_2_fu_702_p1(6 downto 0);
                    zext_ln91_reg_889(6 downto 0) <= zext_ln91_fu_648_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln89_7_reg_884_pp0_iter1_reg <= lshr_ln89_7_reg_884;
                lshr_ln89_7_reg_884_pp0_iter2_reg <= lshr_ln89_7_reg_884_pp0_iter1_reg;
                lshr_ln89_7_reg_884_pp0_iter3_reg <= lshr_ln89_7_reg_884_pp0_iter2_reg;
                lshr_ln89_7_reg_884_pp0_iter4_reg <= lshr_ln89_7_reg_884_pp0_iter3_reg;
                lshr_ln89_7_reg_884_pp0_iter5_reg <= lshr_ln89_7_reg_884_pp0_iter4_reg;
                lshr_ln89_7_reg_884_pp0_iter6_reg <= lshr_ln89_7_reg_884_pp0_iter5_reg;
                lshr_ln89_7_reg_884_pp0_iter7_reg <= lshr_ln89_7_reg_884_pp0_iter6_reg;
                lshr_ln89_s_reg_925_pp0_iter1_reg <= lshr_ln89_s_reg_925;
                lshr_ln89_s_reg_925_pp0_iter2_reg <= lshr_ln89_s_reg_925_pp0_iter1_reg;
                lshr_ln89_s_reg_925_pp0_iter3_reg <= lshr_ln89_s_reg_925_pp0_iter2_reg;
                lshr_ln89_s_reg_925_pp0_iter4_reg <= lshr_ln89_s_reg_925_pp0_iter3_reg;
                lshr_ln89_s_reg_925_pp0_iter5_reg <= lshr_ln89_s_reg_925_pp0_iter4_reg;
                lshr_ln89_s_reg_925_pp0_iter6_reg <= lshr_ln89_s_reg_925_pp0_iter5_reg;
                lshr_ln89_s_reg_925_pp0_iter7_reg <= lshr_ln89_s_reg_925_pp0_iter6_reg;
                tmp_reg_860 <= ap_sig_allocacmp_n_5(8 downto 8);
                    trunc_ln85_3_reg_917_pp0_iter1_reg(1) <= trunc_ln85_3_reg_917(1);
                    trunc_ln85_3_reg_917_pp0_iter2_reg(1) <= trunc_ln85_3_reg_917_pp0_iter1_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter3_reg(1) <= trunc_ln85_3_reg_917_pp0_iter2_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter4_reg(1) <= trunc_ln85_3_reg_917_pp0_iter3_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter5_reg(1) <= trunc_ln85_3_reg_917_pp0_iter4_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter6_reg(1) <= trunc_ln85_3_reg_917_pp0_iter5_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter7_reg(1) <= trunc_ln85_3_reg_917_pp0_iter6_reg(1);
                    trunc_ln85_3_reg_917_pp0_iter8_reg(1) <= trunc_ln85_3_reg_917_pp0_iter7_reg(1);
                trunc_ln85_reg_864_pp0_iter1_reg <= trunc_ln85_reg_864;
                trunc_ln85_reg_864_pp0_iter2_reg <= trunc_ln85_reg_864_pp0_iter1_reg;
                trunc_ln85_reg_864_pp0_iter3_reg <= trunc_ln85_reg_864_pp0_iter2_reg;
                trunc_ln85_reg_864_pp0_iter4_reg <= trunc_ln85_reg_864_pp0_iter3_reg;
                trunc_ln85_reg_864_pp0_iter5_reg <= trunc_ln85_reg_864_pp0_iter4_reg;
                trunc_ln85_reg_864_pp0_iter6_reg <= trunc_ln85_reg_864_pp0_iter5_reg;
                trunc_ln85_reg_864_pp0_iter7_reg <= trunc_ln85_reg_864_pp0_iter6_reg;
                trunc_ln85_reg_864_pp0_iter8_reg <= trunc_ln85_reg_864_pp0_iter7_reg;
                    zext_ln89_3_reg_1028(6 downto 0) <= zext_ln89_3_fu_778_p1(6 downto 0);
                    zext_ln89_3_reg_1028_pp0_iter10_reg(6 downto 0) <= zext_ln89_3_reg_1028_pp0_iter9_reg(6 downto 0);
                    zext_ln89_3_reg_1028_pp0_iter9_reg(6 downto 0) <= zext_ln89_3_reg_1028(6 downto 0);
                    zext_ln89_reg_988(6 downto 0) <= zext_ln89_fu_771_p1(6 downto 0);
                    zext_ln89_reg_988_pp0_iter10_reg(6 downto 0) <= zext_ln89_reg_988_pp0_iter9_reg(6 downto 0);
                    zext_ln89_reg_988_pp0_iter9_reg(6 downto 0) <= zext_ln89_reg_988(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter10_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter9_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter11_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter10_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter1_reg(6 downto 0) <= zext_ln91_2_reg_930(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter2_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter1_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter3_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter2_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter4_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter3_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter5_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter4_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter6_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter5_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter7_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter6_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter8_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter7_reg(6 downto 0);
                    zext_ln91_2_reg_930_pp0_iter9_reg(6 downto 0) <= zext_ln91_2_reg_930_pp0_iter8_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter10_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter9_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter1_reg(6 downto 0) <= zext_ln91_reg_889(6 downto 0);
                    zext_ln91_reg_889_pp0_iter2_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter1_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter3_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter2_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter4_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter3_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter5_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter4_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter6_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter5_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter7_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter6_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter8_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter7_reg(6 downto 0);
                    zext_ln91_reg_889_pp0_iter9_reg(6 downto 0) <= zext_ln91_reg_889_pp0_iter8_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_536 <= grp_fu_323_p_dout0;
                reg_544 <= grp_fu_327_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                y_im_3_reg_1090 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_3_reg_1084 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_im_reg_1022 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_reg_1016 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    zext_ln91_reg_889(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter4_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter5_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter6_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter7_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter8_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter9_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_reg_889_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    trunc_ln85_3_reg_917(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter1_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter2_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter3_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter4_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter5_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter6_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter7_reg(0) <= '1';
    trunc_ln85_3_reg_917_pp0_iter8_reg(0) <= '1';
    zext_ln91_2_reg_930(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter4_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter5_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter6_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter7_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter8_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter9_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln91_2_reg_930_pp0_iter11_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_reg_988(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_reg_988_pp0_iter9_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_reg_988_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_3_reg_1028(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_3_reg_1028_pp0_iter9_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_3_reg_1028_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to11, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to11 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln91_2_fu_686_p2 <= std_logic_vector(unsigned(i_2_fu_670_p2) + unsigned(ap_const_lv9_8));
    add_ln91_fu_632_p2 <= std_logic_vector(unsigned(i_fu_602_p2) + unsigned(ap_const_lv9_8));
    and_ln85_4_fu_590_p3 <= (tmp_5_fu_580_p4 & ap_const_lv3_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4_ignore_call40 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, tmp_reg_860)
    begin
        if (((tmp_reg_860 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to11_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to11 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_96, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_5 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_5 <= n_fu_96;
        end if; 
    end process;

    gm_im_tab_address0 <= zext_ln87_fu_616_p1(10 - 1 downto 0);

    gm_im_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gm_im_tab_ce0 <= ap_const_logic_1;
        else 
            gm_im_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    gm_re_tab_address0 <= zext_ln87_fu_616_p1(10 - 1 downto 0);

    gm_re_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gm_re_tab_ce0 <= ap_const_logic_1;
        else 
            gm_re_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_complex_mul_fu_308_p_ce <= grp_complex_mul_fu_494_ap_ce;
    grp_complex_mul_fu_308_p_din1 <= grp_complex_mul_fu_494_x_re;
    grp_complex_mul_fu_308_p_din2 <= grp_complex_mul_fu_494_x_im;
    grp_complex_mul_fu_308_p_din3 <= grp_complex_mul_fu_494_y_re;
    grp_complex_mul_fu_308_p_din4 <= grp_complex_mul_fu_494_y_im;

    grp_complex_mul_fu_494_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_ignoreCallOp93, ap_block_pp0_stage1_11001_ignoreCallOp86)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp93) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp86) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_complex_mul_fu_494_ap_ce <= ap_const_logic_1;
        else 
            grp_complex_mul_fu_494_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_494_x_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_860, tmp_im_fu_733_p5, tmp_im_3_reg_983, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_494_x_im <= tmp_im_3_reg_983;
        elsif (((tmp_reg_860 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_494_x_im <= tmp_im_fu_733_p5;
        else 
            grp_complex_mul_fu_494_x_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_494_x_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_860, tmp_re_fu_721_p5, tmp_re_3_reg_978, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_494_x_re <= tmp_re_3_reg_978;
        elsif (((tmp_reg_860 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_494_x_re <= tmp_re_fu_721_p5;
        else 
            grp_complex_mul_fu_494_x_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_494_y_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_860, gm_im_tab_q0, gm_im_reg_963, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_494_y_im <= gm_im_reg_963;
        elsif (((tmp_reg_860 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_494_y_im <= gm_im_tab_q0;
        else 
            grp_complex_mul_fu_494_y_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_494_y_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_860, gm_re_tab_q0, gm_re_reg_958, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_494_y_re <= gm_re_reg_958;
        elsif (((tmp_reg_860 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_494_y_re <= gm_re_tab_q0;
        else 
            grp_complex_mul_fu_494_y_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_315_p_ce <= ap_const_logic_1;
    grp_fu_315_p_din0 <= grp_fu_504_p0;
    grp_fu_315_p_din1 <= grp_fu_504_p1;
    grp_fu_315_p_opcode <= ap_const_lv2_0;
    grp_fu_319_p_ce <= ap_const_logic_1;
    grp_fu_319_p_din0 <= grp_fu_510_p0;
    grp_fu_319_p_din1 <= grp_fu_510_p1;
    grp_fu_319_p_opcode <= ap_const_lv2_0;
    grp_fu_323_p_ce <= ap_const_logic_1;
    grp_fu_323_p_din0 <= grp_fu_516_p0;
    grp_fu_323_p_din1 <= grp_fu_516_p1;
    grp_fu_323_p_opcode <= ap_const_lv2_1;
    grp_fu_327_p_ce <= ap_const_logic_1;
    grp_fu_327_p_din0 <= grp_fu_520_p0;
    grp_fu_327_p_din1 <= grp_fu_520_p1;
    grp_fu_327_p_opcode <= ap_const_lv2_1;

    grp_fu_504_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_re_fu_785_p5, x_re_3_reg_1072, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_504_p0 <= x_re_3_reg_1072;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_504_p0 <= x_re_fu_785_p5;
        else 
            grp_fu_504_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_504_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_1016, y_re_3_reg_1084, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_504_p1 <= y_re_3_reg_1084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_504_p1 <= y_re_reg_1016;
        else 
            grp_fu_504_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_510_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_im_fu_798_p5, icmp_ln96_fu_811_p2, x_im_3_reg_1078, icmp_ln96_2_reg_1096, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln96_2_reg_1096 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln96_2_reg_1096 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_510_p0 <= x_im_3_reg_1078;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln96_fu_811_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln96_fu_811_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_510_p0 <= x_im_fu_798_p5;
        else 
            grp_fu_510_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_510_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_1022, icmp_ln96_fu_811_p2, y_im_3_reg_1090, icmp_ln96_2_reg_1096, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln96_2_reg_1096 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln96_2_reg_1096 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_510_p1 <= y_im_3_reg_1090;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln96_fu_811_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln96_fu_811_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_510_p1 <= y_im_reg_1022;
        else 
            grp_fu_510_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_516_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_re_fu_785_p5, x_re_3_reg_1072, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_516_p0 <= x_re_3_reg_1072;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_516_p0 <= x_re_fu_785_p5;
        else 
            grp_fu_516_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_516_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_1016, y_re_3_reg_1084, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_516_p1 <= y_re_3_reg_1084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_516_p1 <= y_re_reg_1016;
        else 
            grp_fu_516_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_520_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_im_fu_798_p5, x_im_3_reg_1078, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_520_p0 <= x_im_3_reg_1078;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_520_p0 <= x_im_fu_798_p5;
        else 
            grp_fu_520_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_520_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_1022, y_im_3_reg_1090, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_520_p1 <= y_im_3_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_520_p1 <= y_im_reg_1022;
        else 
            grp_fu_520_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_2_fu_670_p2 <= std_logic_vector(unsigned(zext_ln85_5_fu_662_p1) + unsigned(zext_ln85_4_fu_598_p1));
    i_fu_602_p2 <= std_logic_vector(unsigned(zext_ln85_4_fu_598_p1) + unsigned(zext_ln85_fu_576_p1));
    icmp_ln96_2_fu_847_p2 <= "1" when (or_ln85_fu_816_p2 = ap_const_lv2_1) else "0";
    icmp_ln96_fu_811_p2 <= "1" when (trunc_ln85_reg_864_pp0_iter8_reg = ap_const_lv2_0) else "0";
    lshr_ln91_7_fu_638_p4 <= add_ln91_fu_632_p2(8 downto 2);
    lshr_ln91_s_fu_692_p4 <= add_ln91_2_fu_686_p2(8 downto 2);
    n_6_fu_710_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_5) + unsigned(ap_const_lv9_2));
    or_ln85_2_fu_656_p2 <= (trunc_ln81_fu_568_p1 or ap_const_lv8_1);
    or_ln85_fu_816_p2 <= (trunc_ln85_reg_864_pp0_iter8_reg or ap_const_lv2_1);
    stage0_i_1_address0 <= zext_ln89_3_fu_778_p1(7 - 1 downto 0);
    stage0_i_1_address1 <= zext_ln91_2_fu_702_p1(7 - 1 downto 0);

    stage0_i_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_ce0 <= ap_const_logic_1;
        else 
            stage0_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_ce1 <= ap_const_logic_1;
        else 
            stage0_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_2_address0 <= zext_ln89_fu_771_p1(7 - 1 downto 0);
    stage0_i_2_address1 <= zext_ln91_fu_648_p1(7 - 1 downto 0);

    stage0_i_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_2_ce0 <= ap_const_logic_1;
        else 
            stage0_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_2_ce1 <= ap_const_logic_1;
        else 
            stage0_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_3_address0 <= zext_ln89_3_fu_778_p1(7 - 1 downto 0);
    stage0_i_3_address1 <= zext_ln91_2_fu_702_p1(7 - 1 downto 0);

    stage0_i_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_ce0 <= ap_const_logic_1;
        else 
            stage0_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_ce1 <= ap_const_logic_1;
        else 
            stage0_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_address0 <= zext_ln89_fu_771_p1(7 - 1 downto 0);
    stage0_i_address1 <= zext_ln91_fu_648_p1(7 - 1 downto 0);

    stage0_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_ce0 <= ap_const_logic_1;
        else 
            stage0_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_ce1 <= ap_const_logic_1;
        else 
            stage0_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_1_address0 <= zext_ln89_3_fu_778_p1(7 - 1 downto 0);
    stage0_r_1_address1 <= zext_ln91_2_fu_702_p1(7 - 1 downto 0);

    stage0_r_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_ce0 <= ap_const_logic_1;
        else 
            stage0_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_ce1 <= ap_const_logic_1;
        else 
            stage0_r_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_2_address0 <= zext_ln89_fu_771_p1(7 - 1 downto 0);
    stage0_r_2_address1 <= zext_ln91_fu_648_p1(7 - 1 downto 0);

    stage0_r_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_2_ce0 <= ap_const_logic_1;
        else 
            stage0_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_2_ce1 <= ap_const_logic_1;
        else 
            stage0_r_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_3_address0 <= zext_ln89_3_fu_778_p1(7 - 1 downto 0);
    stage0_r_3_address1 <= zext_ln91_2_fu_702_p1(7 - 1 downto 0);

    stage0_r_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_ce0 <= ap_const_logic_1;
        else 
            stage0_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_ce1 <= ap_const_logic_1;
        else 
            stage0_r_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_address0 <= zext_ln89_fu_771_p1(7 - 1 downto 0);
    stage0_r_address1 <= zext_ln91_fu_648_p1(7 - 1 downto 0);

    stage0_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_ce0 <= ap_const_logic_1;
        else 
            stage0_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_ce1 <= ap_const_logic_1;
        else 
            stage0_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_2_reg_930_pp0_iter11_reg, zext_ln89_3_reg_1028_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_i_4_address0 <= zext_ln91_2_reg_930_pp0_iter11_reg(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_i_4_address0 <= zext_ln89_3_reg_1028_pp0_iter10_reg(7 - 1 downto 0);
            else 
                stage1_i_4_address0 <= "XXXXXXX";
            end if;
        else 
            stage1_i_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_4_ce0 <= ap_const_logic_1;
        else 
            stage1_i_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_4_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_544, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_319_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_i_4_d0 <= reg_544;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_i_4_d0 <= grp_fu_319_p_dout0;
            else 
                stage1_i_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage1_i_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_i_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_2_reg_1096_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_4_we0 <= ap_const_logic_1;
        else 
            stage1_i_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_reg_889_pp0_iter10_reg, zext_ln89_reg_988_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_5_address0 <= zext_ln91_reg_889_pp0_iter10_reg(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_i_5_address0 <= zext_ln89_reg_988_pp0_iter10_reg(7 - 1 downto 0);
        else 
            stage1_i_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_5_ce0 <= ap_const_logic_1;
        else 
            stage1_i_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_5_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_544, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_319_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_5_d0 <= reg_544;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_i_5_d0 <= grp_fu_319_p_dout0;
        else 
            stage1_i_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_i_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_reg_1068_pp0_iter9_reg, icmp_ln96_reg_1068_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_5_we0 <= ap_const_logic_1;
        else 
            stage1_i_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_2_reg_930_pp0_iter11_reg, zext_ln89_3_reg_1028_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_i_6_address0 <= zext_ln91_2_reg_930_pp0_iter11_reg(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_i_6_address0 <= zext_ln89_3_reg_1028_pp0_iter10_reg(7 - 1 downto 0);
            else 
                stage1_i_6_address0 <= "XXXXXXX";
            end if;
        else 
            stage1_i_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_6_ce0 <= ap_const_logic_1;
        else 
            stage1_i_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_6_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_544, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_319_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_i_6_d0 <= reg_544;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_i_6_d0 <= grp_fu_319_p_dout0;
            else 
                stage1_i_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage1_i_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_i_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_2_reg_1096_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_6_we0 <= ap_const_logic_1;
        else 
            stage1_i_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_reg_889_pp0_iter10_reg, zext_ln89_reg_988_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_address0 <= zext_ln91_reg_889_pp0_iter10_reg(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_i_address0 <= zext_ln89_reg_988_pp0_iter10_reg(7 - 1 downto 0);
        else 
            stage1_i_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_ce0 <= ap_const_logic_1;
        else 
            stage1_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_544, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_319_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_d0 <= reg_544;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_i_d0 <= grp_fu_319_p_dout0;
        else 
            stage1_i_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_i_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_reg_1068_pp0_iter9_reg, icmp_ln96_reg_1068_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_i_we0 <= ap_const_logic_1;
        else 
            stage1_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_2_reg_930_pp0_iter11_reg, zext_ln89_3_reg_1028_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_r_4_address0 <= zext_ln91_2_reg_930_pp0_iter11_reg(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_r_4_address0 <= zext_ln89_3_reg_1028_pp0_iter10_reg(7 - 1 downto 0);
            else 
                stage1_r_4_address0 <= "XXXXXXX";
            end if;
        else 
            stage1_r_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_4_ce0 <= ap_const_logic_1;
        else 
            stage1_r_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_4_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_536, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_315_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_r_4_d0 <= reg_536;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_r_4_d0 <= grp_fu_315_p_dout0;
            else 
                stage1_r_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage1_r_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_r_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_2_reg_1096_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_4_we0 <= ap_const_logic_1;
        else 
            stage1_r_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_reg_889_pp0_iter10_reg, zext_ln89_reg_988_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_5_address0 <= zext_ln91_reg_889_pp0_iter10_reg(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_r_5_address0 <= zext_ln89_reg_988_pp0_iter10_reg(7 - 1 downto 0);
        else 
            stage1_r_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_5_ce0 <= ap_const_logic_1;
        else 
            stage1_r_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_5_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_536, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_315_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_5_d0 <= reg_536;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_r_5_d0 <= grp_fu_315_p_dout0;
        else 
            stage1_r_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_r_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_reg_1068_pp0_iter9_reg, icmp_ln96_reg_1068_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_5_we0 <= ap_const_logic_1;
        else 
            stage1_r_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_2_reg_930_pp0_iter11_reg, zext_ln89_3_reg_1028_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_r_6_address0 <= zext_ln91_2_reg_930_pp0_iter11_reg(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_r_6_address0 <= zext_ln89_3_reg_1028_pp0_iter10_reg(7 - 1 downto 0);
            else 
                stage1_r_6_address0 <= "XXXXXXX";
            end if;
        else 
            stage1_r_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_6_ce0 <= ap_const_logic_1;
        else 
            stage1_r_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_6_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_536, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_315_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter11 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                stage1_r_6_d0 <= reg_536;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                stage1_r_6_d0 <= grp_fu_315_p_dout0;
            else 
                stage1_r_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage1_r_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_r_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_2_reg_1096_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_2_reg_1096_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_6_we0 <= ap_const_logic_1;
        else 
            stage1_r_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln91_reg_889_pp0_iter10_reg, zext_ln89_reg_988_pp0_iter10_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_address0 <= zext_ln91_reg_889_pp0_iter10_reg(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_r_address0 <= zext_ln89_reg_988_pp0_iter10_reg(7 - 1 downto 0);
        else 
            stage1_r_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_ce0 <= ap_const_logic_1;
        else 
            stage1_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, reg_536, ap_block_pp0_stage1, ap_block_pp0_stage0, grp_fu_315_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_d0 <= reg_536;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage1_r_d0 <= grp_fu_315_p_dout0;
        else 
            stage1_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage1_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, icmp_ln96_reg_1068_pp0_iter9_reg, icmp_ln96_reg_1068_pp0_iter10_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_1068_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            stage1_r_we0 <= ap_const_logic_1;
        else 
            stage1_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_5_fu_580_p4 <= ap_sig_allocacmp_n_5(7 downto 3);
    tmp_fu_560_p3 <= ap_sig_allocacmp_n_5(8 downto 8);
    trunc_ln81_fu_568_p1 <= ap_sig_allocacmp_n_5(8 - 1 downto 0);
    trunc_ln85_3_fu_666_p1 <= or_ln85_2_fu_656_p2(2 - 1 downto 0);
    trunc_ln85_fu_572_p1 <= ap_sig_allocacmp_n_5(2 - 1 downto 0);
    zext_ln85_4_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln85_4_fu_590_p3),9));
    zext_ln85_5_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln85_2_fu_656_p2),9));
    zext_ln85_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln81_fu_568_p1),9));
    zext_ln87_4_cast_fu_608_p3 <= (ap_const_lv2_2 & tmp_5_fu_580_p4);
    zext_ln87_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_4_cast_fu_608_p3),64));
    zext_ln89_3_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln89_s_reg_925_pp0_iter7_reg),64));
    zext_ln89_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln89_7_reg_884_pp0_iter7_reg),64));
    zext_ln91_2_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln91_s_fu_692_p4),64));
    zext_ln91_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln91_7_fu_638_p4),64));
end behav;
