-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_10_stages_Pipeline_SECTION10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stage1_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_ce0 : OUT STD_LOGIC;
    stage1_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_ce0 : OUT STD_LOGIC;
    stage1_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_4_ce0 : OUT STD_LOGIC;
    stage1_r_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_4_ce0 : OUT STD_LOGIC;
    stage1_i_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce0 : OUT STD_LOGIC;
    out_i_we0 : OUT STD_LOGIC;
    out_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce1 : OUT STD_LOGIC;
    out_i_we1 : OUT STD_LOGIC;
    out_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_5_ce0 : OUT STD_LOGIC;
    stage1_r_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_5_ce0 : OUT STD_LOGIC;
    stage1_i_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_r_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_r_6_ce0 : OUT STD_LOGIC;
    stage1_r_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage1_i_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage1_i_6_ce0 : OUT STD_LOGIC;
    stage1_i_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    gm_re_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_re_tab_ce0 : OUT STD_LOGIC;
    gm_re_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    gm_im_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_im_tab_ce0 : OUT STD_LOGIC;
    gm_im_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_ce : OUT STD_LOGIC;
    grp_fu_315_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_315_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_ce : OUT STD_LOGIC;
    grp_fu_319_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_319_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_ce : OUT STD_LOGIC;
    grp_fu_323_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_323_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_ce : OUT STD_LOGIC;
    grp_fu_327_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_327_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_ce : OUT STD_LOGIC );
end;


architecture behav of FFT_fft_10_stages_Pipeline_SECTION10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal tmp_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal n_11_reg_499 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal n_11_reg_499_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_11_reg_499_pp0_iter10_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_504_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln89_6_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_6_reg_518_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal i_gm_2_fu_398_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_536_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_re_6_reg_582 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_6_reg_587 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_reg_612 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_reg_618 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_6_reg_646 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_6_reg_652 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_5_reg_658 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_5_reg_664 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_complex_mul_fu_304_x_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_304_x_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_304_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call23 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call23 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call23 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4_ignore_call23 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call23 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6_ignore_call23 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7_ignore_call23 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8_ignore_call23 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9_ignore_call23 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10_ignore_call23 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp68 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call23 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1_ignore_call23 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2_ignore_call23 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3_ignore_call23 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call23 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5_ignore_call23 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6_ignore_call23 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7_ignore_call23 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8_ignore_call23 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9_ignore_call23 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10_ignore_call23 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp59 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln87_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_6_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_1_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_7_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_5_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_72 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_12_fu_420_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_11 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_316_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_322_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_328_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_334_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_gm_fu_364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln87_7_cast_fu_368_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln89_1_fu_382_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_404_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln87_8_cast_fu_431_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_444_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln91_fu_455_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_7_fu_467_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln91_1_fu_480_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to11 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_complex_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_re : IN STD_LOGIC_VECTOR (63 downto 0);
        x_im : IN STD_LOGIC_VECTOR (63 downto 0);
        y_re : IN STD_LOGIC_VECTOR (63 downto 0);
        y_im : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dsub_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component FFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    n_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_356_p3 = ap_const_lv1_0))) then 
                    n_fu_72 <= n_12_fu_420_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_72 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_fu_356_p3 = ap_const_lv1_0))) then
                    i_gm_2_reg_536(7 downto 1) <= i_gm_2_fu_398_p2(7 downto 1);
                    zext_ln89_6_reg_518(6 downto 0) <= zext_ln89_6_fu_392_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    i_gm_2_reg_536_pp0_iter10_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter9_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter1_reg(7 downto 1) <= i_gm_2_reg_536(7 downto 1);
                    i_gm_2_reg_536_pp0_iter2_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter1_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter3_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter2_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter4_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter3_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter5_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter4_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter6_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter5_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter7_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter6_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter8_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter7_reg(7 downto 1);
                    i_gm_2_reg_536_pp0_iter9_reg(7 downto 1) <= i_gm_2_reg_536_pp0_iter8_reg(7 downto 1);
                n_11_reg_499 <= ap_sig_allocacmp_n_11;
                n_11_reg_499_pp0_iter10_reg <= n_11_reg_499_pp0_iter9_reg;
                n_11_reg_499_pp0_iter1_reg <= n_11_reg_499;
                n_11_reg_499_pp0_iter2_reg <= n_11_reg_499_pp0_iter1_reg;
                n_11_reg_499_pp0_iter3_reg <= n_11_reg_499_pp0_iter2_reg;
                n_11_reg_499_pp0_iter4_reg <= n_11_reg_499_pp0_iter3_reg;
                n_11_reg_499_pp0_iter5_reg <= n_11_reg_499_pp0_iter4_reg;
                n_11_reg_499_pp0_iter6_reg <= n_11_reg_499_pp0_iter5_reg;
                n_11_reg_499_pp0_iter7_reg <= n_11_reg_499_pp0_iter6_reg;
                n_11_reg_499_pp0_iter8_reg <= n_11_reg_499_pp0_iter7_reg;
                n_11_reg_499_pp0_iter9_reg <= n_11_reg_499_pp0_iter8_reg;
                tmp_reg_504 <= ap_sig_allocacmp_n_11(8 downto 8);
                tmp_reg_504_pp0_iter1_reg <= tmp_reg_504;
                tmp_reg_504_pp0_iter2_reg <= tmp_reg_504_pp0_iter1_reg;
                tmp_reg_504_pp0_iter3_reg <= tmp_reg_504_pp0_iter2_reg;
                tmp_reg_504_pp0_iter4_reg <= tmp_reg_504_pp0_iter3_reg;
                tmp_reg_504_pp0_iter5_reg <= tmp_reg_504_pp0_iter4_reg;
                tmp_reg_504_pp0_iter6_reg <= tmp_reg_504_pp0_iter5_reg;
                tmp_reg_504_pp0_iter7_reg <= tmp_reg_504_pp0_iter6_reg;
                tmp_reg_504_pp0_iter8_reg <= tmp_reg_504_pp0_iter7_reg;
                tmp_reg_504_pp0_iter9_reg <= tmp_reg_504_pp0_iter8_reg;
                    zext_ln89_6_reg_518_pp0_iter1_reg(6 downto 0) <= zext_ln89_6_reg_518(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter2_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter1_reg(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter3_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter2_reg(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter4_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter3_reg(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter5_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter4_reg(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter6_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter5_reg(6 downto 0);
                    zext_ln89_6_reg_518_pp0_iter7_reg(6 downto 0) <= zext_ln89_6_reg_518_pp0_iter6_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_504 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_im_6_reg_587 <= stage1_i_6_q0;
                tmp_re_6_reg_582 <= stage1_r_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                x_im_6_reg_652 <= stage1_i_5_q0;
                x_re_6_reg_646 <= stage1_r_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                y_im_5_reg_664 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_5_reg_658 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_im_reg_618 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_reg_612 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    zext_ln89_6_reg_518(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter4_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter5_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter6_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln89_6_reg_518_pp0_iter7_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    i_gm_2_reg_536(0) <= '1';
    i_gm_2_reg_536_pp0_iter1_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter2_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter3_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter4_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter5_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter6_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter7_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter8_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter9_reg(0) <= '1';
    i_gm_2_reg_536_pp0_iter10_reg(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter10_stage0, ap_idle_pp0_0to9, ap_idle_pp0_1to11, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to11 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4_ignore_call23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, tmp_reg_504)
    begin
        if (((tmp_reg_504 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, tmp_reg_504_pp0_iter9_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_reg_504_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to11_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to11 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_11_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_72, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_11 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_11 <= n_fu_72;
        end if; 
    end process;


    gm_im_tab_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln87_fu_376_p1, zext_ln87_1_fu_438_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                gm_im_tab_address0 <= zext_ln87_1_fu_438_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                gm_im_tab_address0 <= zext_ln87_fu_376_p1(10 - 1 downto 0);
            else 
                gm_im_tab_address0 <= "XXXXXXXXXX";
            end if;
        else 
            gm_im_tab_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gm_im_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gm_im_tab_ce0 <= ap_const_logic_1;
        else 
            gm_im_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gm_re_tab_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln87_fu_376_p1, zext_ln87_1_fu_438_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                gm_re_tab_address0 <= zext_ln87_1_fu_438_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                gm_re_tab_address0 <= zext_ln87_fu_376_p1(10 - 1 downto 0);
            else 
                gm_re_tab_address0 <= "XXXXXXXXXX";
            end if;
        else 
            gm_re_tab_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gm_re_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gm_re_tab_ce0 <= ap_const_logic_1;
        else 
            gm_re_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_304_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_ignoreCallOp68, ap_block_pp0_stage1_11001_ignoreCallOp59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp68) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_complex_mul_fu_304_ap_ce <= ap_const_logic_1;
        else 
            grp_complex_mul_fu_304_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_304_x_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_504, stage1_i_4_q0, tmp_im_6_reg_587, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_304_x_im <= tmp_im_6_reg_587;
        elsif (((tmp_reg_504 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_304_x_im <= stage1_i_4_q0;
        else 
            grp_complex_mul_fu_304_x_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_304_x_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_504, stage1_r_4_q0, tmp_re_6_reg_582, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_304_x_re <= tmp_re_6_reg_582;
        elsif (((tmp_reg_504 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_304_x_re <= stage1_r_4_q0;
        else 
            grp_complex_mul_fu_304_x_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_complex_mul_fu_308_p_ce <= grp_complex_mul_fu_304_ap_ce;
    grp_complex_mul_fu_308_p_din1 <= grp_complex_mul_fu_304_x_re;
    grp_complex_mul_fu_308_p_din2 <= grp_complex_mul_fu_304_x_im;
    grp_complex_mul_fu_308_p_din3 <= gm_re_tab_q0;
    grp_complex_mul_fu_308_p_din4 <= gm_im_tab_q0;
    grp_fu_315_p_ce <= ap_const_logic_1;
    grp_fu_315_p_din0 <= grp_fu_316_p0;
    grp_fu_315_p_din1 <= grp_fu_316_p1;
    grp_fu_315_p_opcode <= ap_const_lv2_0;

    grp_fu_316_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, stage1_r_q0, x_re_6_reg_646, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_316_p0 <= x_re_6_reg_646;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_316_p0 <= stage1_r_q0;
        else 
            grp_fu_316_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_316_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_612, y_re_5_reg_658, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_316_p1 <= y_re_5_reg_658;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_316_p1 <= y_re_reg_612;
        else 
            grp_fu_316_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_319_p_ce <= ap_const_logic_1;
    grp_fu_319_p_din0 <= grp_fu_322_p0;
    grp_fu_319_p_din1 <= grp_fu_322_p1;
    grp_fu_319_p_opcode <= ap_const_lv2_0;

    grp_fu_322_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, stage1_i_q0, x_im_6_reg_652, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p0 <= x_im_6_reg_652;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p0 <= stage1_i_q0;
        else 
            grp_fu_322_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_618, y_im_5_reg_664, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_322_p1 <= y_im_5_reg_664;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_322_p1 <= y_im_reg_618;
        else 
            grp_fu_322_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_323_p_ce <= ap_const_logic_1;
    grp_fu_323_p_din0 <= grp_fu_328_p0;
    grp_fu_323_p_din1 <= grp_fu_328_p1;
    grp_fu_323_p_opcode <= ap_const_lv2_1;
    grp_fu_327_p_ce <= ap_const_logic_1;
    grp_fu_327_p_din0 <= grp_fu_334_p0;
    grp_fu_327_p_din1 <= grp_fu_334_p1;
    grp_fu_327_p_opcode <= ap_const_lv2_1;

    grp_fu_328_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, stage1_r_q0, x_re_6_reg_646, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_328_p0 <= x_re_6_reg_646;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_328_p0 <= stage1_r_q0;
        else 
            grp_fu_328_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_612, y_re_5_reg_658, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_328_p1 <= y_re_5_reg_658;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_328_p1 <= y_re_reg_612;
        else 
            grp_fu_328_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, stage1_i_q0, x_im_6_reg_652, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p0 <= x_im_6_reg_652;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p0 <= stage1_i_q0;
        else 
            grp_fu_334_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_334_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_618, y_im_5_reg_664, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p1 <= y_im_5_reg_664;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p1 <= y_im_reg_618;
        else 
            grp_fu_334_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_7_fu_467_p3 <= (i_gm_2_reg_536_pp0_iter10_reg & ap_const_lv1_0);
    i_fu_444_p2 <= std_logic_vector(shift_left(unsigned(n_11_reg_499_pp0_iter10_reg),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    i_gm_2_fu_398_p2 <= (i_gm_fu_364_p1 or ap_const_lv8_1);
    i_gm_fu_364_p1 <= ap_sig_allocacmp_n_11(8 - 1 downto 0);
    n_12_fu_420_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_11) + unsigned(ap_const_lv9_2));
    or_ln91_1_fu_480_p2 <= (i_7_fu_467_p3 or ap_const_lv9_1);
    or_ln91_fu_455_p2 <= (i_fu_444_p2 or ap_const_lv9_1);

    out_i_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_fu_461_p1, zext_ln91_5_fu_486_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_i_address0 <= zext_ln91_5_fu_486_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_i_address0 <= zext_ln91_fu_461_p1(9 - 1 downto 0);
        else 
            out_i_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    out_i_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln89_fu_449_p1, zext_ln89_7_fu_474_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_i_address1 <= zext_ln89_7_fu_474_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_i_address1 <= zext_ln89_fu_449_p1(9 - 1 downto 0);
        else 
            out_i_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    out_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_ce0 <= ap_const_logic_1;
        else 
            out_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_ce1 <= ap_const_logic_1;
        else 
            out_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_i_d0 <= grp_fu_327_p_dout0;
    out_i_d1 <= grp_fu_319_p_dout0;

    out_i_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_we0 <= ap_const_logic_1;
        else 
            out_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_we1 <= ap_const_logic_1;
        else 
            out_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_fu_461_p1, zext_ln91_5_fu_486_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_address0 <= zext_ln91_5_fu_486_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_address0 <= zext_ln91_fu_461_p1(9 - 1 downto 0);
        else 
            out_r_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    out_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln89_fu_449_p1, zext_ln89_7_fu_474_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_address1 <= zext_ln89_7_fu_474_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_address1 <= zext_ln89_fu_449_p1(9 - 1 downto 0);
        else 
            out_r_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_ce1 <= ap_const_logic_1;
        else 
            out_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= grp_fu_323_p_dout0;
    out_r_d1 <= grp_fu_315_p_dout0;

    out_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_we1 <= ap_const_logic_1;
        else 
            out_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_i_4_address0 <= zext_ln89_6_fu_392_p1(7 - 1 downto 0);

    stage1_i_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_4_ce0 <= ap_const_logic_1;
        else 
            stage1_i_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_i_5_address0 <= zext_ln89_6_reg_518_pp0_iter7_reg(7 - 1 downto 0);

    stage1_i_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_5_ce0 <= ap_const_logic_1;
        else 
            stage1_i_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_i_6_address0 <= zext_ln91_6_fu_414_p1(7 - 1 downto 0);

    stage1_i_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_6_ce0 <= ap_const_logic_1;
        else 
            stage1_i_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_i_address0 <= zext_ln89_6_reg_518_pp0_iter7_reg(7 - 1 downto 0);

    stage1_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_i_ce0 <= ap_const_logic_1;
        else 
            stage1_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_r_4_address0 <= zext_ln89_6_fu_392_p1(7 - 1 downto 0);

    stage1_r_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_4_ce0 <= ap_const_logic_1;
        else 
            stage1_r_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_r_5_address0 <= zext_ln89_6_reg_518_pp0_iter7_reg(7 - 1 downto 0);

    stage1_r_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_5_ce0 <= ap_const_logic_1;
        else 
            stage1_r_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_r_6_address0 <= zext_ln91_6_fu_414_p1(7 - 1 downto 0);

    stage1_r_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_6_ce0 <= ap_const_logic_1;
        else 
            stage1_r_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    stage1_r_address0 <= zext_ln89_6_reg_518_pp0_iter7_reg(7 - 1 downto 0);

    stage1_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage1_r_ce0 <= ap_const_logic_1;
        else 
            stage1_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_356_p3 <= ap_sig_allocacmp_n_11(8 downto 8);
    tmp_s_fu_404_p4 <= i_gm_2_fu_398_p2(7 downto 1);
    trunc_ln89_1_fu_382_p4 <= ap_sig_allocacmp_n_11(7 downto 1);
    zext_ln87_1_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_8_cast_fu_431_p3),64));
    zext_ln87_7_cast_fu_368_p3 <= (ap_const_lv2_2 & i_gm_fu_364_p1);
    zext_ln87_8_cast_fu_431_p3 <= (ap_const_lv2_2 & i_gm_2_reg_536);
    zext_ln87_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_7_cast_fu_368_p3),64));
    zext_ln89_6_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln89_1_fu_382_p4),64));
    zext_ln89_7_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_7_fu_467_p3),64));
    zext_ln89_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_444_p2),64));
    zext_ln91_5_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln91_1_fu_480_p2),64));
    zext_ln91_6_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_404_p4),64));
    zext_ln91_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln91_fu_455_p2),64));
end behav;
