// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_COMPLEX_MUL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf1_address0,
        buf1_ce0,
        buf1_q0,
        buf1_address1,
        buf1_ce1,
        buf1_q1,
        buf2_address0,
        buf2_ce0,
        buf2_q0,
        buf2_address1,
        buf2_ce1,
        buf2_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        tmp_address1,
        tmp_ce1,
        tmp_we1,
        tmp_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] buf1_address0;
output   buf1_ce0;
input  [63:0] buf1_q0;
output  [9:0] buf1_address1;
output   buf1_ce1;
input  [63:0] buf1_q1;
output  [9:0] buf2_address0;
output   buf2_ce0;
input  [63:0] buf2_q0;
output  [9:0] buf2_address1;
output   buf2_ce1;
input  [63:0] buf2_q1;
output  [9:0] tmp_address0;
output   tmp_ce0;
output  [7:0] tmp_we0;
output  [63:0] tmp_d0;
output  [9:0] tmp_address1;
output   tmp_ce1;
output  [7:0] tmp_we1;
output  [63:0] tmp_d1;

reg ap_idle;
reg buf1_ce0;
reg buf1_ce1;
reg buf2_ce0;
reg buf2_ce1;
reg tmp_ce0;
reg[7:0] tmp_we0;
reg tmp_ce1;
reg[7:0] tmp_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln67_reg_348;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln67_fu_215_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln67_fu_227_p1;
reg   [63:0] zext_ln67_reg_352;
reg   [63:0] zext_ln67_reg_352_pp0_iter1_reg;
reg   [63:0] zext_ln67_reg_352_pp0_iter2_reg;
reg   [63:0] zext_ln67_reg_352_pp0_iter3_reg;
reg   [63:0] zext_ln67_reg_352_pp0_iter4_reg;
reg   [63:0] zext_ln67_reg_352_pp0_iter5_reg;
reg   [63:0] zext_ln67_reg_352_pp0_iter6_reg;
wire   [63:0] zext_ln73_fu_245_p1;
reg   [63:0] zext_ln73_reg_362;
reg   [63:0] zext_ln73_reg_362_pp0_iter1_reg;
reg   [63:0] zext_ln73_reg_362_pp0_iter2_reg;
reg   [63:0] zext_ln73_reg_362_pp0_iter3_reg;
reg   [63:0] zext_ln73_reg_362_pp0_iter4_reg;
reg   [63:0] zext_ln73_reg_362_pp0_iter5_reg;
reg   [63:0] zext_ln73_reg_362_pp0_iter6_reg;
reg   [63:0] buf1_load_reg_382;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] tmp_12_reg_387;
reg   [63:0] tmp_12_reg_387_pp0_iter1_reg;
reg   [63:0] tmp_12_reg_387_pp0_iter2_reg;
wire   [63:0] b_re_fu_256_p1;
wire   [63:0] b_im_fu_262_p1;
reg   [63:0] b_im_reg_399;
reg   [63:0] b_im_reg_399_pp0_iter1_reg;
reg   [63:0] b_im_reg_399_pp0_iter2_reg;
wire   [63:0] bitcast_ln322_fu_291_p1;
reg   [0:0] tmp_8_reg_410;
wire   [63:0] a_re_fu_304_p1;
reg   [63:0] a_re_reg_415;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] a_re_reg_415_pp0_iter1_reg;
wire   [63:0] bitcast_ln322_1_fu_322_p1;
wire   [63:0] grp_d_add_fu_139_ap_return;
reg   [63:0] sub_b_reg_426;
wire   [63:0] grp_d_add_fu_140_ap_return;
reg   [63:0] add_b_reg_431;
reg   [63:0] sub_a_reg_436;
wire   [63:0] a_im_fu_327_p1;
wire   [63:0] grp_d_mul_fu_186_ap_return;
reg   [63:0] mul_1_reg_446;
reg   [63:0] mul_2_reg_451;
reg   [63:0] mul_3_reg_456;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [63:0] grp_d_add_fu_139_a;
reg   [63:0] grp_d_add_fu_139_b;
reg    grp_d_add_fu_139_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call24;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state16_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state19_pp0_stage0_iter6_ignore_call24;
wire    ap_block_pp0_stage0_11001_ignoreCallOp68;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call24;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call24;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call24;
wire    ap_block_state11_pp0_stage1_iter3_ignore_call24;
wire    ap_block_state14_pp0_stage1_iter4_ignore_call24;
wire    ap_block_state17_pp0_stage1_iter5_ignore_call24;
wire    ap_block_state20_pp0_stage1_iter6_ignore_call24;
wire    ap_block_pp0_stage1_11001_ignoreCallOp58;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call24;
wire    ap_block_state6_pp0_stage2_iter1_ignore_call24;
wire    ap_block_state9_pp0_stage2_iter2_ignore_call24;
wire    ap_block_state12_pp0_stage2_iter3_ignore_call24;
wire    ap_block_state15_pp0_stage2_iter4_ignore_call24;
wire    ap_block_state18_pp0_stage2_iter5_ignore_call24;
wire    ap_block_state21_pp0_stage2_iter6_ignore_call24;
wire    ap_block_pp0_stage2_11001_ignoreCallOp62;
reg   [63:0] grp_d_add_fu_140_a;
reg   [63:0] grp_d_add_fu_140_b;
reg    grp_d_add_fu_140_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call25;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call25;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call25;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call25;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call25;
wire    ap_block_state16_pp0_stage0_iter5_ignore_call25;
wire    ap_block_state19_pp0_stage0_iter6_ignore_call25;
wire    ap_block_pp0_stage0_11001_ignoreCallOp69;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call25;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call25;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call25;
wire    ap_block_state11_pp0_stage1_iter3_ignore_call25;
wire    ap_block_state14_pp0_stage1_iter4_ignore_call25;
wire    ap_block_state17_pp0_stage1_iter5_ignore_call25;
wire    ap_block_state20_pp0_stage1_iter6_ignore_call25;
wire    ap_block_pp0_stage1_11001_ignoreCallOp59;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call25;
wire    ap_block_state6_pp0_stage2_iter1_ignore_call25;
wire    ap_block_state9_pp0_stage2_iter2_ignore_call25;
wire    ap_block_state12_pp0_stage2_iter3_ignore_call25;
wire    ap_block_state15_pp0_stage2_iter4_ignore_call25;
wire    ap_block_state18_pp0_stage2_iter5_ignore_call25;
wire    ap_block_state21_pp0_stage2_iter6_ignore_call25;
wire    ap_block_pp0_stage2_11001_ignoreCallOp63;
reg   [63:0] grp_d_mul_fu_186_a;
reg   [63:0] grp_d_mul_fu_186_b;
reg    grp_d_mul_fu_186_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call31;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call31;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call31;
wire    ap_block_state11_pp0_stage1_iter3_ignore_call31;
wire    ap_block_state14_pp0_stage1_iter4_ignore_call31;
wire    ap_block_state17_pp0_stage1_iter5_ignore_call31;
wire    ap_block_state20_pp0_stage1_iter6_ignore_call31;
wire    ap_block_pp0_stage1_11001_ignoreCallOp81;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call31;
wire    ap_block_state6_pp0_stage2_iter1_ignore_call31;
wire    ap_block_state9_pp0_stage2_iter2_ignore_call31;
wire    ap_block_state12_pp0_stage2_iter3_ignore_call31;
wire    ap_block_state15_pp0_stage2_iter4_ignore_call31;
wire    ap_block_state18_pp0_stage2_iter5_ignore_call31;
wire    ap_block_state21_pp0_stage2_iter6_ignore_call31;
wire    ap_block_pp0_stage2_11001_ignoreCallOp83;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call31;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call31;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call31;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call31;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call31;
wire    ap_block_state16_pp0_stage0_iter5_ignore_call31;
wire    ap_block_state19_pp0_stage0_iter6_ignore_call31;
wire    ap_block_pp0_stage0_11001_ignoreCallOp85;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
reg   [9:0] r_fu_62;
wire   [9:0] add_ln67_fu_221_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_r_1;
wire   [8:0] trunc_ln73_fu_233_p1;
wire   [9:0] zext_ln_fu_237_p3;
wire   [0:0] tmp_4_fu_267_p3;
wire   [0:0] p_Repl2_s_fu_275_p2;
wire   [63:0] p_Result_s_fu_281_p4;
wire   [0:0] p_Repl2_1_fu_308_p2;
wire   [63:0] p_Result_1_fu_313_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_d_add grp_d_add_fu_139(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a(grp_d_add_fu_139_a),
    .b(grp_d_add_fu_139_b),
    .ap_return(grp_d_add_fu_139_ap_return),
    .ap_ce(grp_d_add_fu_139_ap_ce)
);

top_d_add grp_d_add_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a(grp_d_add_fu_140_a),
    .b(grp_d_add_fu_140_b),
    .ap_return(grp_d_add_fu_140_ap_return),
    .ap_ce(grp_d_add_fu_140_ap_ce)
);

top_d_mul grp_d_mul_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a(grp_d_mul_fu_186_a),
    .b(grp_d_mul_fu_186_b),
    .ap_return(grp_d_mul_fu_186_ap_return),
    .ap_ce(grp_d_mul_fu_186_ap_ce)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln67_fu_215_p2 == 1'd0))) begin
            r_fu_62 <= add_ln67_fu_221_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            r_fu_62 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_re_reg_415 <= a_re_fu_304_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_re_reg_415_pp0_iter1_reg <= a_re_reg_415;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_b_reg_431 <= grp_d_add_fu_140_ap_return;
        sub_b_reg_426 <= grp_d_add_fu_139_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_im_reg_399 <= b_im_fu_262_p1;
        tmp_8_reg_410 <= buf1_q0[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_im_reg_399_pp0_iter1_reg <= b_im_reg_399;
        b_im_reg_399_pp0_iter2_reg <= b_im_reg_399_pp0_iter1_reg;
        tmp_12_reg_387_pp0_iter1_reg <= tmp_12_reg_387;
        tmp_12_reg_387_pp0_iter2_reg <= tmp_12_reg_387_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf1_load_reg_382 <= buf1_q1;
        tmp_12_reg_387 <= buf1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln67_reg_348 <= icmp_ln67_fu_215_p2;
        zext_ln67_reg_352_pp0_iter1_reg[9 : 0] <= zext_ln67_reg_352[9 : 0];
        zext_ln67_reg_352_pp0_iter2_reg[9 : 0] <= zext_ln67_reg_352_pp0_iter1_reg[9 : 0];
        zext_ln67_reg_352_pp0_iter3_reg[9 : 0] <= zext_ln67_reg_352_pp0_iter2_reg[9 : 0];
        zext_ln67_reg_352_pp0_iter4_reg[9 : 0] <= zext_ln67_reg_352_pp0_iter3_reg[9 : 0];
        zext_ln67_reg_352_pp0_iter5_reg[9 : 0] <= zext_ln67_reg_352_pp0_iter4_reg[9 : 0];
        zext_ln67_reg_352_pp0_iter6_reg[9 : 0] <= zext_ln67_reg_352_pp0_iter5_reg[9 : 0];
        zext_ln73_reg_362_pp0_iter1_reg[8 : 0] <= zext_ln73_reg_362[8 : 0];
        zext_ln73_reg_362_pp0_iter2_reg[8 : 0] <= zext_ln73_reg_362_pp0_iter1_reg[8 : 0];
        zext_ln73_reg_362_pp0_iter3_reg[8 : 0] <= zext_ln73_reg_362_pp0_iter2_reg[8 : 0];
        zext_ln73_reg_362_pp0_iter4_reg[8 : 0] <= zext_ln73_reg_362_pp0_iter3_reg[8 : 0];
        zext_ln73_reg_362_pp0_iter5_reg[8 : 0] <= zext_ln73_reg_362_pp0_iter4_reg[8 : 0];
        zext_ln73_reg_362_pp0_iter6_reg[8 : 0] <= zext_ln73_reg_362_pp0_iter5_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_1_reg_446 <= grp_d_mul_fu_186_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_2_reg_451 <= grp_d_mul_fu_186_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_456 <= grp_d_mul_fu_186_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_a_reg_436 <= grp_d_add_fu_139_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_215_p2 == 1'd0))) begin
        zext_ln67_reg_352[9 : 0] <= zext_ln67_fu_227_p1[9 : 0];
        zext_ln73_reg_362[8 : 0] <= zext_ln73_fu_245_p1[8 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_348 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_r_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_r_1 = r_fu_62;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf1_ce0 = 1'b1;
    end else begin
        buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf1_ce1 = 1'b1;
    end else begin
        buf1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf2_ce0 = 1'b1;
    end else begin
        buf2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf2_ce1 = 1'b1;
    end else begin
        buf2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_add_fu_139_a = mul_1_reg_446;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_d_add_fu_139_a = a_re_fu_304_p1;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_add_fu_139_a = b_re_fu_256_p1;
    end else begin
        grp_d_add_fu_139_a = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp68) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp62) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp58) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_d_add_fu_139_ap_ce = 1'b1;
    end else begin
        grp_d_add_fu_139_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_add_fu_139_b = mul_3_reg_456;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_d_add_fu_139_b = bitcast_ln322_1_fu_322_p1;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_add_fu_139_b = bitcast_ln322_fu_291_p1;
    end else begin
        grp_d_add_fu_139_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_add_fu_140_a = mul_2_reg_451;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_add_fu_140_a = b_re_fu_256_p1;
    end else begin
        grp_d_add_fu_140_a = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp69) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp63) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp59) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_d_add_fu_140_ap_ce = 1'b1;
    end else begin
        grp_d_add_fu_140_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_add_fu_140_b = mul_3_reg_456;
    end else if (((icmp_ln67_reg_348 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_add_fu_140_b = b_im_fu_262_p1;
    end else begin
        grp_d_add_fu_140_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_mul_fu_186_a = b_im_reg_399_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_d_mul_fu_186_a = a_im_fu_327_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_mul_fu_186_a = a_re_reg_415_pp0_iter1_reg;
    end else begin
        grp_d_mul_fu_186_a = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp85) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp83) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp81) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_d_mul_fu_186_ap_ce = 1'b1;
    end else begin
        grp_d_mul_fu_186_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_mul_fu_186_b = sub_a_reg_436;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_d_mul_fu_186_b = add_b_reg_431;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_d_mul_fu_186_b = sub_b_reg_426;
    end else begin
        grp_d_mul_fu_186_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_we0 = 8'd255;
    end else begin
        tmp_we0 = 8'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_we1 = 8'd255;
    end else begin
        tmp_we1 = 8'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_im_fu_327_p1 = tmp_12_reg_387_pp0_iter2_reg;

assign a_re_fu_304_p1 = buf1_load_reg_382;

assign add_ln67_fu_221_p2 = (ap_sig_allocacmp_r_1 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp68 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp69 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp85 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp59 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp81 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp62 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp63 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp83 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2_ignore_call31 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign b_im_fu_262_p1 = buf2_q0;

assign b_re_fu_256_p1 = buf2_q1;

assign bitcast_ln322_1_fu_322_p1 = p_Result_1_fu_313_p4;

assign bitcast_ln322_fu_291_p1 = p_Result_s_fu_281_p4;

assign buf1_address0 = zext_ln73_fu_245_p1;

assign buf1_address1 = zext_ln67_fu_227_p1;

assign buf2_address0 = zext_ln73_fu_245_p1;

assign buf2_address1 = zext_ln67_fu_227_p1;

assign icmp_ln67_fu_215_p2 = ((ap_sig_allocacmp_r_1 == 10'd512) ? 1'b1 : 1'b0);

assign p_Repl2_1_fu_308_p2 = (tmp_8_reg_410 ^ 1'd1);

assign p_Repl2_s_fu_275_p2 = (tmp_4_fu_267_p3 ^ 1'd1);

assign p_Result_1_fu_313_p4 = {|(p_Repl2_1_fu_308_p2), tmp_12_reg_387[63 - 1:0]};

assign p_Result_s_fu_281_p4 = {|(p_Repl2_s_fu_275_p2), buf2_q0[63 - 1:0]};

assign tmp_4_fu_267_p3 = buf2_q0[32'd63];

assign tmp_address0 = zext_ln73_reg_362_pp0_iter6_reg;

assign tmp_address1 = zext_ln67_reg_352_pp0_iter6_reg;

assign tmp_d0 = grp_d_add_fu_140_ap_return;

assign tmp_d1 = grp_d_add_fu_139_ap_return;

assign trunc_ln73_fu_233_p1 = ap_sig_allocacmp_r_1[8:0];

assign zext_ln67_fu_227_p1 = ap_sig_allocacmp_r_1;

assign zext_ln73_fu_245_p1 = zext_ln_fu_237_p3;

assign zext_ln_fu_237_p3 = {{1'd1}, {trunc_ln73_fu_233_p1}};

always @ (posedge ap_clk) begin
    zext_ln67_reg_352[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_352_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln73_reg_362[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln73_reg_362_pp0_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
end

endmodule //top_top_Pipeline_COMPLEX_MUL
