-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_Loop_VITIS_LOOP_955_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (62 downto 0);
    logn_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    logn_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    logn_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    logn_empty_n : IN STD_LOGIC;
    logn_read : OUT STD_LOGIC;
    f_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    f_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    f_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    f_empty_n : IN STD_LOGIC;
    f_read : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of FFT_Loop_VITIS_LOOP_955_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fpr_gm_tab_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal fpr_gm_tab_ce0 : STD_LOGIC;
    signal fpr_gm_tab_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal fpr_gm_tab_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal fpr_gm_tab_ce1 : STD_LOGIC;
    signal fpr_gm_tab_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal logn_blk_n : STD_LOGIC;
    signal f_blk_n : STD_LOGIC;
    signal logn_read_reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_read_reg_389 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln977_fu_208_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln977_reg_394 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln937_fu_238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln937_reg_405 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln955_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln959_fu_252_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln959_reg_411 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln957_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_reg_421 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln967_fu_270_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln967_reg_426 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln3_reg_431 : STD_LOGIC_VECTOR (60 downto 0);
    signal i1_1_fu_289_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal i1_1_reg_439 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln961_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j1_fu_328_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal j1_reg_454 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln961_fu_333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln961_reg_459 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_re_reg_464 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal s_im_reg_469 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_idle : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_ready : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_BREADY : STD_LOGIC;
    signal indvars_iv_i_reg_155 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j1_2_reg_165 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_reg_177 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln967_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln968_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_3_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal t_fu_98 : STD_LOGIC_VECTOR (62 downto 0);
    signal m_fu_102 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_343_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_1_fu_242_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln967_1_fu_295_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln967_fu_299_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_304_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln968_fu_317_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        j1_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        indvars_iv_i : IN STD_LOGIC_VECTOR (63 downto 0);
        f_load : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (60 downto 0);
        trunc_ln3 : IN STD_LOGIC_VECTOR (60 downto 0);
        s_re : IN STD_LOGIC_VECTOR (63 downto 0);
        s_im : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_Loop_VITIS_LOOP_955_1_proc_fpr_gm_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    fpr_gm_tab_U : component FFT_Loop_VITIS_LOOP_955_1_proc_fpr_gm_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fpr_gm_tab_address0,
        ce0 => fpr_gm_tab_ce0,
        q0 => fpr_gm_tab_q0,
        address1 => fpr_gm_tab_address1,
        ce1 => fpr_gm_tab_ce1,
        q1 => fpr_gm_tab_q1);

    grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188 : component FFT_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start,
        ap_done => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done,
        ap_idle => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_idle,
        ap_ready => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_ready,
        m_axi_gmem0_AWVALID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => m_axi_gmem0_BRESP,
        m_axi_gmem0_BID => m_axi_gmem0_BID,
        m_axi_gmem0_BUSER => m_axi_gmem0_BUSER,
        j1_2 => j1_2_reg_165,
        indvars_iv_i => indvars_iv_i_reg_155,
        f_load => f_read_reg_389,
        trunc_ln => trunc_ln977_reg_394,
        trunc_ln3 => trunc_ln3_reg_431,
        s_re => s_re_reg_464,
        s_im => s_im_reg_469);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_ready = ap_const_logic_1)) then 
                    grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_1))) then 
                i1_reg_177 <= ap_const_lv63_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done = ap_const_logic_1))) then 
                i1_reg_177 <= i1_1_reg_439;
            end if; 
        end if;
    end process;

    indvars_iv_i_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_1))) then 
                indvars_iv_i_reg_155 <= zext_ln957_fu_256_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done = ap_const_logic_1))) then 
                indvars_iv_i_reg_155 <= add_ln961_reg_459;
            end if; 
        end if;
    end process;

    j1_2_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_1))) then 
                j1_2_reg_165 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done = ap_const_logic_1))) then 
                j1_2_reg_165 <= j1_reg_454;
            end if; 
        end if;
    end process;

    m_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_fu_102(1) <= '1';
                m_fu_102(2) <= '0';
                m_fu_102(3) <= '0';
                m_fu_102(4) <= '0';
                m_fu_102(5) <= '0';
                m_fu_102(6) <= '0';
                m_fu_102(7) <= '0';
                m_fu_102(8) <= '0';
                m_fu_102(9) <= '0';
                m_fu_102(10) <= '0';
                m_fu_102(11) <= '0';
                m_fu_102(12) <= '0';
                m_fu_102(13) <= '0';
                m_fu_102(14) <= '0';
                m_fu_102(15) <= '0';
                m_fu_102(16) <= '0';
                m_fu_102(17) <= '0';
                m_fu_102(18) <= '0';
                m_fu_102(19) <= '0';
                m_fu_102(20) <= '0';
                m_fu_102(21) <= '0';
                m_fu_102(22) <= '0';
                m_fu_102(23) <= '0';
                m_fu_102(24) <= '0';
                m_fu_102(25) <= '0';
                m_fu_102(26) <= '0';
                m_fu_102(27) <= '0';
                m_fu_102(28) <= '0';
                m_fu_102(29) <= '0';
                m_fu_102(30) <= '0';
                m_fu_102(31) <= '0';
                m_fu_102(32) <= '0';
                m_fu_102(33) <= '0';
                m_fu_102(34) <= '0';
                m_fu_102(35) <= '0';
                m_fu_102(36) <= '0';
                m_fu_102(37) <= '0';
                m_fu_102(38) <= '0';
                m_fu_102(39) <= '0';
                m_fu_102(40) <= '0';
                m_fu_102(41) <= '0';
                m_fu_102(42) <= '0';
                m_fu_102(43) <= '0';
                m_fu_102(44) <= '0';
                m_fu_102(45) <= '0';
                m_fu_102(46) <= '0';
                m_fu_102(47) <= '0';
                m_fu_102(48) <= '0';
                m_fu_102(49) <= '0';
                m_fu_102(50) <= '0';
                m_fu_102(51) <= '0';
                m_fu_102(52) <= '0';
                m_fu_102(53) <= '0';
                m_fu_102(54) <= '0';
                m_fu_102(55) <= '0';
                m_fu_102(56) <= '0';
                m_fu_102(57) <= '0';
                m_fu_102(58) <= '0';
                m_fu_102(59) <= '0';
                m_fu_102(60) <= '0';
                m_fu_102(61) <= '0';
                m_fu_102(62) <= '0';
                m_fu_102(63) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln961_fu_284_p2 = ap_const_lv1_1))) then 
                                m_fu_102(63 downto 1) <= m_1_fu_343_p2(63 downto 1);
            end if; 
        end if;
    end process;

    t_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_fu_98 <= p_read;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln961_fu_284_p2 = ap_const_lv1_1))) then 
                t_fu_98 <= zext_ln959_reg_411;
            end if; 
        end if;
    end process;

    u_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                u_fu_94 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln961_fu_284_p2 = ap_const_lv1_1))) then 
                u_fu_94 <= u_3_fu_338_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln961_fu_284_p2 = ap_const_lv1_0))) then
                add_ln961_reg_459 <= add_ln961_fu_333_p2;
                j1_reg_454 <= j1_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                f_read_reg_389 <= f_dout;
                logn_read_reg_384 <= logn_dout;
                trunc_ln977_reg_394 <= trunc_ln977_fu_208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i1_1_reg_439 <= i1_1_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                s_im_reg_469 <= fpr_gm_tab_q0;
                s_re_reg_464 <= fpr_gm_tab_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_1))) then
                trunc_ln1_reg_421 <= m_fu_102(63 downto 1);
                trunc_ln3_reg_431 <= t_fu_98(61 downto 1);
                    trunc_ln967_reg_426(9 downto 1) <= trunc_ln967_fu_270_p1(9 downto 1);
                    zext_ln937_reg_405(62 downto 0) <= zext_ln937_fu_238_p1(62 downto 0);
                    zext_ln959_reg_411(61 downto 0) <= zext_ln959_fu_252_p1(61 downto 0);
            end if;
        end if;
    end process;
    zext_ln937_reg_405(63) <= '0';
    zext_ln959_reg_411(62) <= '0';
    trunc_ln967_reg_426(0) <= '0';
    m_fu_102(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, logn_empty_n, f_empty_n, ap_CS_fsm_state2, icmp_ln955_fu_230_p2, ap_CS_fsm_state3, icmp_ln961_fu_284_p2, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln961_fu_284_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln961_fu_333_p2 <= std_logic_vector(unsigned(zext_ln937_reg_405) + unsigned(indvars_iv_i_reg_155));
    add_ln967_fu_299_p2 <= std_logic_vector(unsigned(trunc_ln967_1_fu_295_p1) + unsigned(trunc_ln967_reg_426));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, logn_empty_n, f_empty_n)
    begin
        if (((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done)
    begin
        if ((grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, logn_empty_n, f_empty_n)
    begin
                ap_block_state1 <= ((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln955_fu_230_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln955_fu_230_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln955_fu_230_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    f_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, f_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            f_blk_n <= f_empty_n;
        else 
            f_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    f_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, logn_empty_n, f_empty_n)
    begin
        if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            f_read <= ap_const_logic_1;
        else 
            f_read <= ap_const_logic_0;
        end if; 
    end process;

    fpr_gm_tab_address0 <= zext_ln968_fu_323_p1(11 - 1 downto 0);
    fpr_gm_tab_address1 <= zext_ln967_fu_312_p1(11 - 1 downto 0);

    fpr_gm_tab_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fpr_gm_tab_ce0 <= ap_const_logic_1;
        else 
            fpr_gm_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fpr_gm_tab_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fpr_gm_tab_ce1 <= ap_const_logic_1;
        else 
            fpr_gm_tab_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_ap_start_reg;
    i1_1_fu_289_p2 <= std_logic_vector(unsigned(i1_reg_177) + unsigned(ap_const_lv63_1));
    icmp_ln955_fu_230_p2 <= "1" when (unsigned(u_fu_94) < unsigned(logn_read_reg_384)) else "0";
    icmp_ln961_fu_284_p2 <= "1" when (i1_reg_177 = trunc_ln1_reg_421) else "0";
    j1_fu_328_p2 <= std_logic_vector(unsigned(zext_ln937_reg_405) + unsigned(j1_2_reg_165));

    logn_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, logn_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            logn_blk_n <= logn_empty_n;
        else 
            logn_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    logn_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, logn_empty_n, f_empty_n)
    begin
        if ((not(((f_empty_n = ap_const_logic_0) or (logn_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            logn_read <= ap_const_logic_1;
        else 
            logn_read <= ap_const_logic_0;
        end if; 
    end process;

    m_1_fu_343_p2 <= std_logic_vector(shift_left(unsigned(m_fu_102),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    m_axi_gmem0_ARADDR <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARADDR;
    m_axi_gmem0_ARBURST <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARBURST;
    m_axi_gmem0_ARCACHE <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARCACHE;
    m_axi_gmem0_ARID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARID;
    m_axi_gmem0_ARLEN <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLEN;
    m_axi_gmem0_ARLOCK <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARLOCK;
    m_axi_gmem0_ARPROT <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARPROT;
    m_axi_gmem0_ARQOS <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARQOS;
    m_axi_gmem0_ARREGION <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARREGION;
    m_axi_gmem0_ARSIZE <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARSIZE;
    m_axi_gmem0_ARUSER <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARUSER;

    m_axi_gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state4, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARVALID, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_ARVALID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_ARVALID;
        else 
            m_axi_gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_AWADDR <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWADDR;
    m_axi_gmem0_AWBURST <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWBURST;
    m_axi_gmem0_AWCACHE <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWCACHE;
    m_axi_gmem0_AWID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWID;
    m_axi_gmem0_AWLEN <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLEN;
    m_axi_gmem0_AWLOCK <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWLOCK;
    m_axi_gmem0_AWPROT <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWPROT;
    m_axi_gmem0_AWQOS <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWQOS;
    m_axi_gmem0_AWREGION <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWREGION;
    m_axi_gmem0_AWSIZE <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWSIZE;
    m_axi_gmem0_AWUSER <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWUSER;

    m_axi_gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state4, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWVALID, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWVALID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_AWVALID;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(ap_CS_fsm_state4, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_BREADY, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_BREADY <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_BREADY;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_state4, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_RREADY, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_RREADY <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_RREADY;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WDATA;
    m_axi_gmem0_WID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WID;
    m_axi_gmem0_WLAST <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WLAST;
    m_axi_gmem0_WSTRB <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WSTRB;
    m_axi_gmem0_WUSER <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WUSER;

    m_axi_gmem0_WVALID_assign_proc : process(ap_CS_fsm_state4, grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WVALID, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_WVALID <= grp_Loop_VITIS_LOOP_955_1_proc_Pipeline_VITIS_LOOP_970_3_fu_188_m_axi_gmem0_WVALID;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln968_fu_317_p2 <= (shl_ln_fu_304_p3 or ap_const_lv11_1);
    shl_ln_fu_304_p3 <= (add_ln967_fu_299_p2 & ap_const_lv1_0);
    t_1_fu_242_p4 <= t_fu_98(62 downto 1);
    trunc_ln967_1_fu_295_p1 <= i1_reg_177(10 - 1 downto 0);
    trunc_ln967_fu_270_p1 <= m_fu_102(10 - 1 downto 0);
    trunc_ln977_fu_208_p1 <= p_read1(61 - 1 downto 0);
    u_3_fu_338_p2 <= std_logic_vector(unsigned(u_fu_94) + unsigned(ap_const_lv32_1));
    zext_ln937_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_98),64));
    zext_ln957_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_1_fu_242_p4),64));
    zext_ln959_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_1_fu_242_p4),63));
    zext_ln967_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_304_p3),64));
    zext_ln968_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln968_fu_317_p2),64));
end behav;
