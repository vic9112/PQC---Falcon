

================================================================
== Vitis HLS Report for 'paralleltostreamwithburst_Pipeline_VITIS_LOOP_113_2'
================================================================
* Date:           Thu May 23 07:50:22 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        hls_userdma.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_113_2  |        ?|        ?|        20|          1|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 21


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 1
  Pipeline-0 : II = 1, D = 21, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 23 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len = alloca i32 1"   --->   Operation 24 'alloca' 'paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%in_memory_assign_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_memory_assign"   --->   Operation 25 'read' 'in_memory_assign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%icmp_ln95_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %icmp_ln95"   --->   Operation 26 'read' 'icmp_ln95_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%shl_ln117_cast_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %shl_ln117_cast"   --->   Operation 27 'read' 'shl_ln117_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%select_ln95_cast_cast_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %select_ln95_cast_cast"   --->   Operation 28 'read' 'select_ln95_cast_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%sub_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sub"   --->   Operation 29 'read' 'sub_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%count_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %count_1"   --->   Operation 30 'read' 'count_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%count_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %count"   --->   Operation 31 'read' 'count_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%shl_ln117_cast_cast = zext i6 %shl_ln117_cast_read"   --->   Operation 32 'zext' 'shl_ln117_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%select_ln95_cast_cast_cast = zext i12 %select_ln95_cast_cast_read"   --->   Operation 33 'zext' 'select_ln95_cast_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %gmem1, void @empty_0, i32 0, i32 0, void @empty_1, i32 10, i32 1024, void @empty_4, void @empty_3, void @empty_1, i32 4, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i35 %outbuf, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %count_read, i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln0 = store i5 0, i5 %i"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 38 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.04>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i_2 = load i5 %i" [userdma.cpp:117]   --->   Operation 39 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln113 = zext i5 %i_2" [userdma.cpp:113]   --->   Operation 40 'zext' 'zext_ln113' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (2.47ns)   --->   "%icmp_ln113 = icmp_slt  i32 %zext_ln113, i32 %count_1_read" [userdma.cpp:113]   --->   Operation 41 'icmp' 'icmp_ln113' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.78ns)   --->   "%add_ln113 = add i5 %i_2, i5 1" [userdma.cpp:113]   --->   Operation 42 'add' 'add_ln113' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln113 = br i1 %icmp_ln113, void %for.end.loopexit.exitStub, void %for.body.split" [userdma.cpp:113]   --->   Operation 43 'br' 'br_ln113' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load_1 = load i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len" [userdma.cpp:116]   --->   Operation 44 'load' 'paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load_1' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%specpipeline_ln114 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [userdma.cpp:114]   --->   Operation 45 'specpipeline' 'specpipeline_ln114' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%specloopname_ln113 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [userdma.cpp:113]   --->   Operation 46 'specloopname' 'specloopname_ln113' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (2.47ns)   --->   "%icmp_ln116 = icmp_slt  i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load_1, i32 1025" [userdma.cpp:116]   --->   Operation 47 'icmp' 'icmp_ln116' <Predicate = (icmp_ln113)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.97ns)   --->   "%and_ln116 = and i1 %icmp_ln95_read, i1 %icmp_ln116" [userdma.cpp:116]   --->   Operation 48 'and' 'and_ln116' <Predicate = (icmp_ln113)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i5 %i_2" [userdma.cpp:117]   --->   Operation 49 'trunc' 'trunc_ln117' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%shl_ln117_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %trunc_ln117, i3 0" [userdma.cpp:117]   --->   Operation 50 'bitconcatenate' 'shl_ln117_1' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln117 = zext i7 %shl_ln117_1" [userdma.cpp:117]   --->   Operation 51 'zext' 'zext_ln117' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (3.52ns)   --->   "%add_ln117 = add i64 %in_memory_assign_read, i64 %zext_ln117" [userdma.cpp:117]   --->   Operation 52 'add' 'add_ln117' <Predicate = (icmp_ln113)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln116 = br i1 %and_ln116, void %if.else30, void %if.then27" [userdma.cpp:116]   --->   Operation 53 'br' 'br_ln116' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln117, i32 3, i32 63" [userdma.cpp:119]   --->   Operation 54 'partselect' 'trunc_ln4' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (3.52ns)   --->   "%add_ln117_1 = add i64 %add_ln117, i64 4" [userdma.cpp:117]   --->   Operation 55 'add' 'add_ln117_1' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln117_1, i32 3, i32 63" [userdma.cpp:117]   --->   Operation 56 'partselect' 'trunc_ln3' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load = load i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len" [userdma.cpp:131]   --->   Operation 57 'load' 'paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load' <Predicate = (icmp_ln113)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (2.47ns)   --->   "%icmp_ln122 = icmp_slt  i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load, i32 17" [userdma.cpp:122]   --->   Operation 58 'icmp' 'icmp_ln122' <Predicate = (icmp_ln113)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (2.47ns)   --->   "%icmp_ln122_1 = icmp_eq  i32 %zext_ln113, i32 %sub_read" [userdma.cpp:122]   --->   Operation 59 'icmp' 'icmp_ln122_1' <Predicate = (icmp_ln113)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.97ns)   --->   "%out_val_last_V = and i1 %icmp_ln122, i1 %icmp_ln122_1" [userdma.cpp:122]   --->   Operation 60 'and' 'out_val_last_V' <Predicate = (icmp_ln113)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (2.47ns)   --->   "%icmp_ln127 = icmp_eq  i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load, i32 %select_ln95_cast_cast_cast" [userdma.cpp:127]   --->   Operation 61 'icmp' 'icmp_ln127' <Predicate = (icmp_ln113)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (2.55ns)   --->   "%add_ln131 = add i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len_load, i32 4294967295" [userdma.cpp:131]   --->   Operation 62 'add' 'add_ln131' <Predicate = (icmp_ln113)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (1.58ns)   --->   "%store_ln113 = store i32 %add_ln131, i32 %paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len" [userdma.cpp:113]   --->   Operation 63 'store' 'store_ln113' <Predicate = (icmp_ln113)> <Delay = 1.58>
ST_2 : Operation 64 [1/1] (1.58ns)   --->   "%store_ln113 = store i5 %add_ln113, i5 %i" [userdma.cpp:113]   --->   Operation 64 'store' 'store_ln113' <Predicate = (icmp_ln113)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln119 = sext i61 %trunc_ln4" [userdma.cpp:119]   --->   Operation 65 'sext' 'sext_ln119' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%gmem1_addr_1 = getelementptr i64 %gmem1, i64 %sext_ln119" [userdma.cpp:119]   --->   Operation 66 'getelementptr' 'gmem1_addr_1' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 0.00>
ST_3 : Operation 67 [16/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 67 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln117 = sext i61 %trunc_ln3" [userdma.cpp:117]   --->   Operation 68 'sext' 'sext_ln117' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%gmem1_addr = getelementptr i64 %gmem1, i64 %sext_ln117" [userdma.cpp:117]   --->   Operation 69 'getelementptr' 'gmem1_addr' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 0.00>
ST_3 : Operation 70 [16/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 70 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 71 [15/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 71 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 72 [15/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 72 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 73 [14/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 73 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 74 [14/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 74 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 75 [13/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 75 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 76 [13/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 76 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 77 [12/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 77 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 78 [12/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 78 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 79 [11/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 79 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 80 [11/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 80 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 81 [10/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 81 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 82 [10/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 82 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 83 [9/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 83 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 84 [9/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 84 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 85 [8/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 85 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 86 [8/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 86 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 87 [7/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 87 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 88 [7/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 88 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 89 [6/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 89 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 90 [6/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 90 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 91 [5/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 91 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 92 [5/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 92 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 93 [4/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 93 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 94 [4/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 94 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 95 [3/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 95 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 96 [3/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 96 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 97 [2/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 97 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 98 [2/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 98 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 99 [1/16] (7.30ns)   --->   "%gmem1_load_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr_1, i32 1" [userdma.cpp:119]   --->   Operation 99 'readreq' 'gmem1_load_1_req' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 100 [1/16] (7.30ns)   --->   "%gmem1_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i64P1A, i64 %gmem1_addr, i32 1" [userdma.cpp:117]   --->   Operation 100 'readreq' 'gmem1_load_req' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 101 [1/1] (7.30ns)   --->   "%gmem1_addr_1_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %gmem1_addr_1" [userdma.cpp:119]   --->   Operation 101 'read' 'gmem1_addr_1_read' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 102 [1/1] (7.30ns)   --->   "%gmem1_addr_read = read i64 @_ssdm_op_Read.m_axi.i64P1A, i64 %gmem1_addr" [userdma.cpp:117]   --->   Operation 102 'read' 'gmem1_addr_read' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 4.59>
ST_20 : Operation 103 [1/1] (1.58ns)   --->   "%br_ln0 = br void %if.end36"   --->   Operation 103 'br' 'br_ln0' <Predicate = (icmp_ln113 & !and_ln116)> <Delay = 1.58>
ST_20 : Operation 104 [1/1] (4.59ns)   --->   "%lshr_ln117 = lshr i64 %gmem1_addr_read, i64 %shl_ln117_cast_cast" [userdma.cpp:117]   --->   Operation 104 'lshr' 'lshr_ln117' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 4.59> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.59> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 105 [1/1] (1.58ns)   --->   "%br_ln117 = br void %if.end36" [userdma.cpp:117]   --->   Operation 105 'br' 'br_ln117' <Predicate = (icmp_ln113 & and_ln116)> <Delay = 1.58>
ST_20 : Operation 111 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 111 'ret' 'ret_ln0' <Predicate = (!icmp_ln113)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 3.60>
ST_21 : Operation 106 [1/1] (0.00ns)   --->   "%phi_ln90 = phi i64 %lshr_ln117, void %if.then27, i64 %gmem1_addr_1_read, void %if.else30" [userdma.cpp:90]   --->   Operation 106 'phi' 'phi_ln90' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 107 [1/1] (0.00ns)   --->   "%out_val_data_filed_V = trunc i64 %phi_ln90" [userdma.cpp:90]   --->   Operation 107 'trunc' 'out_val_data_filed_V' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 108 [1/1] (0.00ns)   --->   "%p_0 = bitconcatenate i35 @_ssdm_op_BitConcatenate.i35.i1.i1.i1.i32, i1 %out_val_last_V, i1 0, i1 %icmp_ln127, i32 %out_val_data_filed_V" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 108 'bitconcatenate' 'p_0' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 109 [1/1] (3.60ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i35P0A, i35 %outbuf, i35 %p_0" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 109 'write' 'write_ln174' <Predicate = true> <Delay = 3.60> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.60> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 35> <Depth = 32> <FIFO>
ST_21 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln113 = br void %for.body" [userdma.cpp:113]   --->   Operation 110 'br' 'br_ln113' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len') [11]  (0 ns)
	'store' operation ('store_ln0') of variable 'count_read' on local variable 'paralleltostreamwithburst_memcell_ap_uint_hls_stream_final_m2s_len' [23]  (1.59 ns)

 <State 2>: 7.04ns
The critical path consists of the following:
	'load' operation ('i', userdma.cpp:117) on local variable 'i' [27]  (0 ns)
	'add' operation ('add_ln117', userdma.cpp:117) [41]  (3.52 ns)
	'add' operation ('add_ln117_1', userdma.cpp:117) [51]  (3.52 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem1_addr_1', userdma.cpp:119) [46]  (0 ns)
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 14>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus request operation ('gmem1_load_1_req', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [47]  (7.3 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus read operation ('gmem1_addr_1_read', userdma.cpp:119) on port 'gmem1' (userdma.cpp:119) [48]  (7.3 ns)

 <State 20>: 4.59ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln117', userdma.cpp:117) [57]  (4.59 ns)

 <State 21>: 3.61ns
The critical path consists of the following:
	'phi' operation ('phi_ln90', userdma.cpp:90) with incoming values : ('gmem1_addr_1_read', userdma.cpp:119) ('lshr_ln117', userdma.cpp:117) [60]  (0 ns)
	fifo write operation ('write_ln174', /tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) on port 'outbuf' (/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) [68]  (3.61 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
