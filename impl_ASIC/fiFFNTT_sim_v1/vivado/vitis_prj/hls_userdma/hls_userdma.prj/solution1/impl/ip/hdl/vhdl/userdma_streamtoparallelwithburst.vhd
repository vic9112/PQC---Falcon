-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity userdma_streamtoparallelwithburst is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inbuf_dout : IN STD_LOGIC_VECTOR (32 downto 0);
    inbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    inbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    inbuf_empty_n : IN STD_LOGIC;
    inbuf_read : OUT STD_LOGIC;
    incount25_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    incount25_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    incount25_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    incount25_empty_n : IN STD_LOGIC;
    incount25_read : OUT STD_LOGIC;
    s2m_buf_sts : OUT STD_LOGIC_VECTOR (0 downto 0);
    s2m_buf_sts_ap_vld : OUT STD_LOGIC;
    kernel_mode_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    kernel_mode_empty_n : IN STD_LOGIC;
    kernel_mode_read : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_memory_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    out_memory_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out_memory_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out_memory_empty_n : IN STD_LOGIC;
    out_memory_read : OUT STD_LOGIC );
end;


architecture behav of userdma_streamtoparallelwithburst is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv64_FFFFFFFFFFFFE000 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111110000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal incount25_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal kernel_mode_blk_n : STD_LOGIC;
    signal out_memory_blk_n : STD_LOGIC;
    signal even_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal even_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_349 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln34_fu_179_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln34_reg_365 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln34_fu_189_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln34_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln43_1_reg_375 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln34_2_fu_214_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln34_2_reg_380 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln5_fu_277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln5_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal final_s2m_len_V_3_fu_282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal final_s2m_len_V_3_reg_391 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_397 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_idle : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_ready : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_inbuf_read : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal out_memory_assign_fu_90 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_fu_309_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1073_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal final_s2m_len_V_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_sts_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s2m_buf_sts_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal icmp_ln1065_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_1_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln34_fu_175_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln34_fu_185_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln43_fu_195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln43_fu_229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln43_2_fu_238_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_fu_222_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln43_1_fu_232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln43_1_fu_247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln43_fu_251_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln42_fu_259_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_265_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal sext_ln5_fu_273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln56_fu_304_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component userdma_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inbuf_dout : IN STD_LOGIC_VECTOR (32 downto 0);
        inbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        inbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        inbuf_empty_n : IN STD_LOGIC;
        inbuf_read : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp : IN STD_LOGIC_VECTOR (31 downto 0);
        even : IN STD_LOGIC_VECTOR (0 downto 0);
        out_memory_assign : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln34_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        shl_ln34_1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123 : component userdma_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start,
        ap_done => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done,
        ap_idle => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_idle,
        ap_ready => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_ready,
        inbuf_dout => inbuf_dout,
        inbuf_num_data_valid => ap_const_lv7_0,
        inbuf_fifo_cap => ap_const_lv7_0,
        inbuf_empty_n => inbuf_empty_n,
        inbuf_read => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_inbuf_read,
        m_axi_gmem0_AWVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => m_axi_gmem0_BRESP,
        m_axi_gmem0_BID => m_axi_gmem0_BID,
        m_axi_gmem0_BUSER => m_axi_gmem0_BUSER,
        tmp => tmp_4_reg_357,
        even => even_reg_344,
        out_memory_assign => out_memory_assign_fu_90,
        zext_ln34_1 => shl_ln34_2_reg_380,
        shl_ln34_1 => shl_ln34_reg_370);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_ready = ap_const_logic_1)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    s2m_buf_sts_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                s2m_buf_sts_preg <= ap_const_lv1_0;
            else
                if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
                    s2m_buf_sts_preg <= out_sts_fu_298_p2;
                end if; 
            end if;
        end if;
    end process;


    final_s2m_len_V_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                final_s2m_len_V_fu_94 <= ap_const_lv32_0;
            elsif (((icmp_ln1073_fu_316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
                final_s2m_len_V_fu_94 <= final_s2m_len_V_3_reg_391;
            end if; 
        end if;
    end process;

    out_memory_assign_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                out_memory_assign_fu_90 <= out_memory_dout;
            elsif (((icmp_ln1073_fu_316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
                out_memory_assign_fu_90 <= select_ln55_fu_309_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln5_reg_385 <= add_ln5_fu_277_p2;
                final_s2m_len_V_3_reg_391 <= final_s2m_len_V_3_fu_282_p2;
                    shl_ln34_2_reg_380(5 downto 3) <= shl_ln34_2_fu_214_p3(5 downto 3);
                tmp_3_reg_397 <= final_s2m_len_V_3_fu_282_p2(31 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                even_reg_344 <= even_fu_148_p2;
                tmp_reg_349 <= kernel_mode_dout(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_reg_349 = ap_const_lv1_0))) then
                lshr_ln43_1_reg_375 <= sub_ln43_fu_195_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                shl_ln34_reg_370 <= shl_ln34_fu_189_p2;
                tmp_4_reg_357 <= incount25_dout;
                xor_ln34_reg_365 <= xor_ln34_fu_179_p2;
            end if;
        end if;
    end process;
    shl_ln34_2_reg_380(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, incount25_empty_n, kernel_mode_empty_n, out_memory_empty_n, ap_CS_fsm_state2, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done, ap_CS_fsm_state4, icmp_ln1073_fu_316_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((incount25_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln1073_fu_316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln56_fu_304_p2 <= std_logic_vector(unsigned(add_ln5_reg_385) + unsigned(ap_const_lv64_FFFFFFFFFFFFE000));
    add_ln5_fu_277_p2 <= std_logic_vector(unsigned(out_memory_assign_fu_90) + unsigned(sext_ln5_fu_273_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, kernel_mode_empty_n, out_memory_empty_n)
    begin
        if (((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(incount25_empty_n)
    begin
        if ((incount25_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done)
    begin
        if ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, kernel_mode_empty_n, out_memory_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done, ap_CS_fsm_state4, icmp_ln1073_fu_316_p2)
    begin
        if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done, ap_CS_fsm_state4, icmp_ln1073_fu_316_p2)
    begin
        if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    even_fu_148_p2 <= (icmp_ln1065_fu_136_p2 or icmp_ln1065_1_fu_142_p2);
    final_s2m_len_V_3_fu_282_p2 <= std_logic_vector(unsigned(select_ln42_fu_259_p3) + unsigned(final_s2m_len_V_fu_94));
    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_start_reg;
    icmp_ln1065_1_fu_142_p2 <= "1" when (kernel_mode_dout = ap_const_lv2_1) else "0";
    icmp_ln1065_fu_136_p2 <= "1" when (kernel_mode_dout = ap_const_lv2_0) else "0";
    icmp_ln1073_fu_316_p2 <= "1" when (tmp_3_reg_397 = ap_const_lv22_0) else "0";

    inbuf_read_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_inbuf_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            inbuf_read <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_inbuf_read;
        else 
            inbuf_read <= ap_const_logic_0;
        end if; 
    end process;


    incount25_blk_n_assign_proc : process(incount25_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            incount25_blk_n <= incount25_empty_n;
        else 
            incount25_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    incount25_read_assign_proc : process(incount25_empty_n, ap_CS_fsm_state2)
    begin
        if (((incount25_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            incount25_read <= ap_const_logic_1;
        else 
            incount25_read <= ap_const_logic_0;
        end if; 
    end process;


    kernel_mode_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, kernel_mode_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_mode_blk_n <= kernel_mode_empty_n;
        else 
            kernel_mode_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    kernel_mode_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, kernel_mode_empty_n, out_memory_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_mode_read <= ap_const_logic_1;
        else 
            kernel_mode_read <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln43_2_fu_238_p4 <= tmp_4_reg_357(31 downto 1);
    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWADDR;
    m_axi_gmem0_AWBURST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWBURST;
    m_axi_gmem0_AWCACHE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWCACHE;
    m_axi_gmem0_AWID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWID;
    m_axi_gmem0_AWLEN <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLEN;
    m_axi_gmem0_AWLOCK <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWLOCK;
    m_axi_gmem0_AWPROT <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWPROT;
    m_axi_gmem0_AWQOS <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWQOS;
    m_axi_gmem0_AWREGION <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWREGION;
    m_axi_gmem0_AWSIZE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWSIZE;
    m_axi_gmem0_AWUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWUSER;

    m_axi_gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWVALID, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_AWVALID;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_BREADY, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_BREADY <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_BREADY;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_RREADY <= ap_const_logic_0;
    m_axi_gmem0_WDATA <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WDATA;
    m_axi_gmem0_WID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WID;
    m_axi_gmem0_WLAST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WLAST;
    m_axi_gmem0_WSTRB <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WSTRB;
    m_axi_gmem0_WUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WUSER;

    m_axi_gmem0_WVALID_assign_proc : process(ap_CS_fsm_state3, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WVALID, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_WVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_m_axi_gmem0_WVALID;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    out_memory_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_memory_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_memory_blk_n <= out_memory_empty_n;
        else 
            out_memory_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_memory_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, kernel_mode_empty_n, out_memory_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (kernel_mode_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_memory_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_memory_read <= ap_const_logic_1;
        else 
            out_memory_read <= ap_const_logic_0;
        end if; 
    end process;

    out_sts_fu_298_p2 <= "1" when (final_s2m_len_V_3_reg_391 = ap_const_lv32_400) else "0";

    s2m_buf_sts_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done, ap_CS_fsm_state4, icmp_ln1073_fu_316_p2, out_sts_fu_298_p2, s2m_buf_sts_preg)
    begin
        if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
            s2m_buf_sts <= out_sts_fu_298_p2;
        else 
            s2m_buf_sts <= s2m_buf_sts_preg;
        end if; 
    end process;


    s2m_buf_sts_ap_vld_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done, ap_CS_fsm_state4, icmp_ln1073_fu_316_p2)
    begin
        if (((icmp_ln1073_fu_316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_29_2_fu_123_ap_done = ap_const_logic_1))) then 
            s2m_buf_sts_ap_vld <= ap_const_logic_1;
        else 
            s2m_buf_sts_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln42_fu_259_p3 <= 
        tmp_4_reg_357 when (tmp_reg_349(0) = '1') else 
        select_ln43_fu_251_p3;
    select_ln43_fu_251_p3 <= 
        sub_ln43_1_fu_232_p2 when (tmp_2_fu_222_p3(0) = '1') else 
        zext_ln43_1_fu_247_p1;
    select_ln55_fu_309_p3 <= 
        add_ln56_fu_304_p2 when (out_sts_fu_298_p2(0) = '1') else 
        add_ln5_reg_385;
        sext_ln5_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_265_p3),64));

    shl_ln34_2_fu_214_p3 <= (xor_ln34_reg_365 & ap_const_lv3_0);
    shl_ln34_fu_189_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln34_fu_185_p1(8-1 downto 0)))));
    shl_ln_fu_265_p3 <= (select_ln42_fu_259_p3 & ap_const_lv3_0);
    sub_ln43_1_fu_232_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln43_fu_229_p1));
    sub_ln43_fu_195_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(incount25_dout));
    tmp_2_fu_222_p3 <= tmp_4_reg_357(31 downto 31);
    trunc_ln34_fu_175_p1 <= out_memory_assign_fu_90(3 - 1 downto 0);
    xor_ln34_fu_179_p2 <= (trunc_ln34_fu_175_p1 xor ap_const_lv3_4);
    zext_ln34_fu_185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln34_fu_179_p2),8));
    zext_ln43_1_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln43_2_fu_238_p4),32));
    zext_ln43_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln43_1_reg_375),32));
end behav;
