-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity userdma_paralleltostreamwithburst is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_memory : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_mode : IN STD_LOGIC_VECTOR (1 downto 0);
    outbuf_din : OUT STD_LOGIC_VECTOR (34 downto 0);
    outbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    outbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    outbuf_full_n : IN STD_LOGIC;
    outbuf_write : OUT STD_LOGIC );
end;


architecture behav of userdma_paralleltostreamwithburst is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_400 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv36_FFFFFE000 : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111111111110000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal outbuf_blk_n : STD_LOGIC;
    signal xor_ln113_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln113_reg_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln111_cast_fu_146_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln111_cast_reg_372 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln125_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_reg_380 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_46_fu_242_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_46_reg_385 : STD_LOGIC_VECTOR (5 downto 0);
    signal count_3_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_3_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_fu_261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal final_m2s_len_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal final_m2s_len_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_286_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_reg_408 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln157_fu_303_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln157_reg_413 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln157_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_reg_418 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln158_fu_313_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln158_reg_423 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp_ln161_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_reg_428 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_idle : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_ready : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_din : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_write : STD_LOGIC;
    signal grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal in_memory_assign_fu_90 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln157_fu_338_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal count_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln111_cast_cast_fu_154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln174_fu_184_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_fu_132_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_val_data_filed_V_fu_162_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_176_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_4_fu_208_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_fu_224_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_45_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_232_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln131_fu_268_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln112_fu_278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln131_fu_272_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln2_fu_295_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal and_ln157_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln157_fu_328_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln157_1_fu_334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component userdma_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        outbuf_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        outbuf_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        outbuf_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        outbuf_full_n : IN STD_LOGIC;
        outbuf_write : OUT STD_LOGIC;
        final_m2s_len_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        count_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln111_cast : IN STD_LOGIC_VECTOR (11 downto 0);
        zext_ln131 : IN STD_LOGIC_VECTOR (5 downto 0);
        icmp_ln113 : IN STD_LOGIC_VECTOR (0 downto 0);
        in_memory_assign : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component userdma_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117 : component userdma_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start,
        ap_done => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done,
        ap_idle => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_idle,
        ap_ready => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_ready,
        m_axi_gmem1_AWVALID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM => m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        outbuf_din => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_din,
        outbuf_num_data_valid => ap_const_lv7_0,
        outbuf_fifo_cap => ap_const_lv7_0,
        outbuf_full_n => outbuf_full_n,
        outbuf_write => grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_write,
        final_m2s_len_4 => count_fu_94,
        count_1 => count_3_reg_393,
        sub => sub_reg_398,
        select_ln111_cast => select_ln111_cast_reg_372,
        zext_ln131 => shl_ln_reg_408,
        icmp_ln113 => xor_ln113_reg_366,
        in_memory_assign => in_memory_assign_fu_90);

    mux_42_32_1_1_U49 : component userdma_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_4,
        din1 => ap_const_lv32_5,
        din2 => ap_const_lv32_6,
        din3 => ap_const_lv32_7,
        din4 => kernel_mode,
        dout => out_val_data_filed_V_fu_162_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_ready = ap_const_logic_1)) then 
                    grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    count_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                count_fu_94 <= select_ln111_cast_cast_fu_154_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_0))) then 
                count_fu_94 <= final_m2s_len_reg_403;
            end if; 
        end if;
    end process;

    in_memory_assign_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                in_memory_assign_fu_90 <= in_memory;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_0))) then 
                in_memory_assign_fu_90 <= add_ln157_fu_338_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    add_ln158_reg_423(35 downto 3) <= add_ln158_fu_313_p2(35 downto 3);
                count_3_reg_393 <= count_3_fu_254_p3;
                final_m2s_len_reg_403 <= final_m2s_len_fu_281_p2;
                icmp_ln157_reg_418 <= icmp_ln157_fu_307_p2;
                icmp_ln161_reg_428 <= icmp_ln161_fu_319_p2;
                    sext_ln157_reg_413(35 downto 3) <= sext_ln157_fu_303_p1(35 downto 3);
                    shl_ln_reg_408(5 downto 3) <= shl_ln_fu_286_p3(5 downto 3);
                sub_reg_398 <= sub_fu_261_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_46_reg_385 <= empty_46_fu_242_p3;
                icmp_ln125_reg_380 <= icmp_ln125_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    select_ln111_cast_reg_372(11 downto 10) <= select_ln111_cast_fu_146_p3(11 downto 10);
                xor_ln113_reg_366 <= xor_ln113_fu_140_p2;
            end if;
        end if;
    end process;
    select_ln111_cast_reg_372(9 downto 0) <= "0000000000";
    shl_ln_reg_408(2 downto 0) <= "000";
    sext_ln157_reg_413(2 downto 0) <= "000";
    add_ln158_reg_423(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, outbuf_full_n, icmp_ln161_reg_428, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln157_fu_338_p2 <= std_logic_vector(signed(sext_ln157_1_fu_334_p1) + signed(in_memory_assign_fu_90));
    add_ln158_fu_313_p2 <= std_logic_vector(signed(sext_ln157_fu_303_p1) + signed(ap_const_lv36_FFFFFE000));
    and_ln157_fu_324_p2 <= (xor_ln113_reg_366 and icmp_ln157_reg_418);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, outbuf_full_n)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done)
    begin
        if ((grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, outbuf_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln161_reg_428, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    count_3_fu_254_p3 <= 
        ap_const_lv32_20 when (icmp_ln125_reg_380(0) = '1') else 
        count_fu_94;
    empty_45_fu_236_p2 <= "1" when (signed(select_ln131_fu_224_p3) > signed(ap_const_lv32_0)) else "0";
    empty_46_fu_242_p3 <= 
        empty_fu_232_p1 when (empty_45_fu_236_p2(0) = '1') else 
        ap_const_lv6_0;
    empty_fu_232_p1 <= select_ln131_fu_224_p3(6 - 1 downto 0);
    final_m2s_len_fu_281_p2 <= std_logic_vector(unsigned(count_fu_94) - unsigned(zext_ln112_fu_278_p1));
    grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_start_reg;
    icmp_fu_218_p2 <= "1" when (signed(tmp_4_fu_208_p4) < signed(ap_const_lv27_1)) else "0";
    icmp_ln125_fu_202_p2 <= "1" when (signed(count_fu_94) > signed(ap_const_lv32_20)) else "0";
    icmp_ln157_fu_307_p2 <= "1" when (final_m2s_len_fu_281_p2 = ap_const_lv32_400) else "0";
    icmp_ln161_fu_319_p2 <= "1" when (count_fu_94 = zext_ln112_fu_278_p1) else "0";

    internal_ap_ready_assign_proc : process(icmp_ln161_reg_428, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_ap_done = ap_const_logic_1) and (icmp_ln161_reg_428 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_ARADDR <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARUSER;

    m_axi_gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARVALID, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem1_ARVALID <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_ARVALID;
        else 
            m_axi_gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;

    m_axi_gmem1_RREADY_assign_proc : process(ap_CS_fsm_state3, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_RREADY, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem1_RREADY <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_m_axi_gmem1_RREADY;
        else 
            m_axi_gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem1_WDATA <= ap_const_lv64_0;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv8_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    or_ln_fu_176_p3 <= (ap_const_lv1_0 & out_val_data_filed_V_fu_162_p6);

    outbuf_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, outbuf_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outbuf_blk_n <= outbuf_full_n;
        else 
            outbuf_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outbuf_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, outbuf_full_n, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_din, ap_CS_fsm_state4, zext_ln174_fu_184_p1)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outbuf_din <= zext_ln174_fu_184_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outbuf_din <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_din;
        else 
            outbuf_din <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_din;
        end if; 
    end process;


    outbuf_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, outbuf_full_n, grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_write, ap_CS_fsm_state4)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (outbuf_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            outbuf_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            outbuf_write <= grp_paralleltostreamwithburst_Pipeline_VITIS_LOOP_131_2_fu_117_outbuf_write;
        else 
            outbuf_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln111_cast_cast_fu_154_p3 <= 
        ap_const_lv32_400 when (tmp_fu_132_p3(0) = '1') else 
        ap_const_lv32_800;
    select_ln111_cast_fu_146_p3 <= 
        ap_const_lv12_400 when (tmp_fu_132_p3(0) = '1') else 
        ap_const_lv12_800;
    select_ln131_fu_224_p3 <= 
        count_fu_94 when (icmp_fu_218_p2(0) = '1') else 
        ap_const_lv32_20;
    select_ln157_fu_328_p3 <= 
        add_ln158_reg_423 when (and_ln157_fu_324_p2(0) = '1') else 
        sext_ln157_reg_413;
        sext_ln157_1_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln157_fu_328_p3),64));

        sext_ln157_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_295_p3),36));

    shl_ln2_fu_295_p3 <= (count_3_fu_254_p3 & ap_const_lv3_0);
    shl_ln_fu_286_p3 <= (xor_ln131_fu_272_p2 & ap_const_lv3_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_fu_261_p2 <= std_logic_vector(unsigned(count_3_fu_254_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_4_fu_208_p4 <= count_fu_94(31 downto 5);
    tmp_fu_132_p3 <= kernel_mode(1 downto 1);
    trunc_ln131_fu_268_p1 <= in_memory_assign_fu_90(3 - 1 downto 0);
    xor_ln113_fu_140_p2 <= (tmp_fu_132_p3 xor ap_const_lv1_1);
    xor_ln131_fu_272_p2 <= (trunc_ln131_fu_268_p1 xor ap_const_lv3_4);
    zext_ln112_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_46_reg_385),32));
    zext_ln174_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_176_p3),35));
end behav;
