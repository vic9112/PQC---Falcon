// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module userdma_paralleltostreamwithburst_Pipeline_VITIS_LOOP_138_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        outbuf_din,
        outbuf_num_data_valid,
        outbuf_fifo_cap,
        outbuf_full_n,
        outbuf_write,
        final_m2s_len_4,
        count_1,
        even,
        sub50,
        select_ln119,
        in_memory_addr_0_idx,
        in_memory,
        zext_ln142
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [63:0] m_axi_gmem1_WDATA;
output  [7:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [63:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [9:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
output  [34:0] outbuf_din;
input  [6:0] outbuf_num_data_valid;
input  [6:0] outbuf_fifo_cap;
input   outbuf_full_n;
output   outbuf_write;
input  [31:0] final_m2s_len_4;
input  [31:0] count_1;
input  [0:0] even;
input  [31:0] sub50;
input  [11:0] select_ln119;
input  [60:0] in_memory_addr_0_idx;
input  [63:0] in_memory;
input  [5:0] zext_ln142;

reg ap_idle;
reg m_axi_gmem1_ARVALID;
reg[63:0] m_axi_gmem1_ARADDR;
reg m_axi_gmem1_RREADY;
reg outbuf_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln138_reg_507;
reg   [0:0] icmp_ln138_reg_507_pp0_iter2_reg;
reg   [0:0] high_reg_185;
reg   [0:0] high_reg_185_pp0_iter2_reg;
reg    ap_predicate_op76_readreq_state4;
reg    ap_predicate_op79_readreq_state4;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
reg   [0:0] icmp_ln138_reg_507_pp0_iter18_reg;
reg   [0:0] high_reg_185_pp0_iter18_reg;
reg    ap_predicate_op110_read_state20;
reg    ap_predicate_op111_read_state20;
reg    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg   [0:0] icmp_ln138_reg_507_pp0_iter20_reg;
reg    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln138_fu_236_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    outbuf_blk_n;
wire    ap_block_pp0_stage0;
reg    gmem1_blk_n_AR;
reg    gmem1_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] high_reg_185_pp0_iter3_reg;
reg   [0:0] high_reg_185_pp0_iter4_reg;
reg   [0:0] high_reg_185_pp0_iter5_reg;
reg   [0:0] high_reg_185_pp0_iter6_reg;
reg   [0:0] high_reg_185_pp0_iter7_reg;
reg   [0:0] high_reg_185_pp0_iter8_reg;
reg   [0:0] high_reg_185_pp0_iter9_reg;
reg   [0:0] high_reg_185_pp0_iter10_reg;
reg   [0:0] high_reg_185_pp0_iter11_reg;
reg   [0:0] high_reg_185_pp0_iter12_reg;
reg   [0:0] high_reg_185_pp0_iter13_reg;
reg   [0:0] high_reg_185_pp0_iter14_reg;
reg   [0:0] high_reg_185_pp0_iter15_reg;
reg   [0:0] high_reg_185_pp0_iter16_reg;
reg   [0:0] high_reg_185_pp0_iter17_reg;
reg   [0:0] high_reg_185_pp0_iter19_reg;
wire   [63:0] zext_ln142_cast_fu_206_p1;
reg   [63:0] zext_ln142_cast_reg_497;
wire   [31:0] select_ln119_cast_fu_210_p1;
reg   [31:0] select_ln119_cast_reg_502;
reg   [0:0] icmp_ln138_reg_507_pp0_iter3_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter4_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter5_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter6_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter7_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter8_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter9_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter10_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter11_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter12_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter13_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter14_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter15_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter16_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter17_reg;
reg   [0:0] icmp_ln138_reg_507_pp0_iter19_reg;
reg  signed [31:0] a_load_2_reg_511;
wire   [31:0] add_ln142_fu_250_p2;
reg   [31:0] add_ln142_reg_516;
reg   [0:0] ap_phi_mux_high_phi_fu_189_p4;
wire   [0:0] high_2_fu_265_p3;
reg   [0:0] high_2_reg_521;
wire   [0:0] icmp_ln150_1_fu_293_p2;
reg   [0:0] icmp_ln150_1_reg_526;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter2_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter3_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter4_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter5_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter6_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter7_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter8_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter9_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter10_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter11_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter12_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter13_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter14_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter15_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter16_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter17_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter18_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter19_reg;
reg   [0:0] icmp_ln150_1_reg_526_pp0_iter20_reg;
reg   [60:0] trunc_ln4_reg_531;
reg   [60:0] trunc_ln142_2_reg_536;
reg   [63:0] gmem1_addr_1_read_reg_553;
reg   [63:0] gmem1_addr_read_reg_558;
wire   [63:0] lshr_ln142_fu_396_p2;
wire    ap_loop_init;
wire   [63:0] ap_phi_reg_pp0_iter0_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter1_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter2_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter3_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter4_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter5_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter6_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter7_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter8_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter9_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter10_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter11_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter12_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter13_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter14_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter15_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter16_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter17_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter18_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter19_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter20_phi_ln112_reg_197;
reg   [63:0] ap_phi_reg_pp0_iter21_phi_ln112_reg_197;
wire  signed [63:0] sext_ln144_1_fu_376_p1;
wire  signed [63:0] sext_ln142_1_fu_386_p1;
reg   [31:0] final_m2s_len_fu_94;
wire   [31:0] final_m2s_len_1_fu_436_p2;
reg   [31:0] a_fu_98;
wire   [31:0] a_2_fu_286_p3;
reg   [5:0] i_fu_102;
wire   [5:0] i_2_fu_241_p2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln138_fu_232_p1;
wire  signed [31:0] add_ln142_fu_250_p0;
wire   [0:0] xor_ln145_fu_259_p2;
wire   [31:0] add_ln147_fu_272_p2;
wire   [31:0] select_ln147_fu_278_p3;
wire  signed [60:0] sext_ln144_fu_308_p1;
wire   [60:0] add_ln144_fu_311_p2;
wire   [63:0] shl_ln3_fu_316_p3;
wire   [63:0] add_ln144_1_fu_324_p2;
wire  signed [60:0] sext_ln142_fu_339_p1;
wire   [60:0] add_ln142_1_fu_342_p2;
wire   [63:0] shl_ln_fu_347_p3;
wire   [63:0] or_ln142_fu_355_p2;
wire   [63:0] add_ln142_2_fu_361_p2;
wire   [0:0] icmp_ln150_fu_407_p2;
wire   [0:0] out_val_last_V_fu_413_p2;
wire   [0:0] icmp_ln155_fu_418_p2;
wire   [31:0] out_val_data_filed_V_fu_403_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

userdma_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            a_fu_98 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln138_fu_236_p2 == 1'd1))) begin
            a_fu_98 <= a_2_fu_286_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln138_reg_507_pp0_iter19_reg == 1'd1) & (high_reg_185_pp0_iter19_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter21_phi_ln112_reg_197 <= gmem1_addr_1_read_reg_553;
        end else if (((icmp_ln138_reg_507_pp0_iter19_reg == 1'd1) & (high_reg_185_pp0_iter19_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter21_phi_ln112_reg_197 <= lshr_ln142_fu_396_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter21_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter20_phi_ln112_reg_197;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            final_m2s_len_fu_94 <= final_m2s_len_4;
        end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1))) begin
            final_m2s_len_fu_94 <= final_m2s_len_1_fu_436_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln138_reg_507 == 1'd1))) begin
        high_reg_185 <= high_2_reg_521;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        high_reg_185 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_102 <= 6'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln138_fu_236_p2 == 1'd1))) begin
            i_fu_102 <= i_2_fu_241_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_236_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_load_2_reg_511 <= a_fu_98;
        icmp_ln150_1_reg_526 <= icmp_ln150_1_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_high_phi_fu_189_p4 == 1'd1) & (icmp_ln138_fu_236_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln142_reg_516 <= add_ln142_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        high_reg_185_pp0_iter10_reg <= high_reg_185_pp0_iter9_reg;
        high_reg_185_pp0_iter11_reg <= high_reg_185_pp0_iter10_reg;
        high_reg_185_pp0_iter12_reg <= high_reg_185_pp0_iter11_reg;
        high_reg_185_pp0_iter13_reg <= high_reg_185_pp0_iter12_reg;
        high_reg_185_pp0_iter14_reg <= high_reg_185_pp0_iter13_reg;
        high_reg_185_pp0_iter15_reg <= high_reg_185_pp0_iter14_reg;
        high_reg_185_pp0_iter16_reg <= high_reg_185_pp0_iter15_reg;
        high_reg_185_pp0_iter17_reg <= high_reg_185_pp0_iter16_reg;
        high_reg_185_pp0_iter18_reg <= high_reg_185_pp0_iter17_reg;
        high_reg_185_pp0_iter19_reg <= high_reg_185_pp0_iter18_reg;
        high_reg_185_pp0_iter2_reg <= high_reg_185;
        high_reg_185_pp0_iter3_reg <= high_reg_185_pp0_iter2_reg;
        high_reg_185_pp0_iter4_reg <= high_reg_185_pp0_iter3_reg;
        high_reg_185_pp0_iter5_reg <= high_reg_185_pp0_iter4_reg;
        high_reg_185_pp0_iter6_reg <= high_reg_185_pp0_iter5_reg;
        high_reg_185_pp0_iter7_reg <= high_reg_185_pp0_iter6_reg;
        high_reg_185_pp0_iter8_reg <= high_reg_185_pp0_iter7_reg;
        high_reg_185_pp0_iter9_reg <= high_reg_185_pp0_iter8_reg;
        icmp_ln138_reg_507_pp0_iter10_reg <= icmp_ln138_reg_507_pp0_iter9_reg;
        icmp_ln138_reg_507_pp0_iter11_reg <= icmp_ln138_reg_507_pp0_iter10_reg;
        icmp_ln138_reg_507_pp0_iter12_reg <= icmp_ln138_reg_507_pp0_iter11_reg;
        icmp_ln138_reg_507_pp0_iter13_reg <= icmp_ln138_reg_507_pp0_iter12_reg;
        icmp_ln138_reg_507_pp0_iter14_reg <= icmp_ln138_reg_507_pp0_iter13_reg;
        icmp_ln138_reg_507_pp0_iter15_reg <= icmp_ln138_reg_507_pp0_iter14_reg;
        icmp_ln138_reg_507_pp0_iter16_reg <= icmp_ln138_reg_507_pp0_iter15_reg;
        icmp_ln138_reg_507_pp0_iter17_reg <= icmp_ln138_reg_507_pp0_iter16_reg;
        icmp_ln138_reg_507_pp0_iter18_reg <= icmp_ln138_reg_507_pp0_iter17_reg;
        icmp_ln138_reg_507_pp0_iter19_reg <= icmp_ln138_reg_507_pp0_iter18_reg;
        icmp_ln138_reg_507_pp0_iter20_reg <= icmp_ln138_reg_507_pp0_iter19_reg;
        icmp_ln138_reg_507_pp0_iter2_reg <= icmp_ln138_reg_507;
        icmp_ln138_reg_507_pp0_iter3_reg <= icmp_ln138_reg_507_pp0_iter2_reg;
        icmp_ln138_reg_507_pp0_iter4_reg <= icmp_ln138_reg_507_pp0_iter3_reg;
        icmp_ln138_reg_507_pp0_iter5_reg <= icmp_ln138_reg_507_pp0_iter4_reg;
        icmp_ln138_reg_507_pp0_iter6_reg <= icmp_ln138_reg_507_pp0_iter5_reg;
        icmp_ln138_reg_507_pp0_iter7_reg <= icmp_ln138_reg_507_pp0_iter6_reg;
        icmp_ln138_reg_507_pp0_iter8_reg <= icmp_ln138_reg_507_pp0_iter7_reg;
        icmp_ln138_reg_507_pp0_iter9_reg <= icmp_ln138_reg_507_pp0_iter8_reg;
        icmp_ln150_1_reg_526_pp0_iter10_reg <= icmp_ln150_1_reg_526_pp0_iter9_reg;
        icmp_ln150_1_reg_526_pp0_iter11_reg <= icmp_ln150_1_reg_526_pp0_iter10_reg;
        icmp_ln150_1_reg_526_pp0_iter12_reg <= icmp_ln150_1_reg_526_pp0_iter11_reg;
        icmp_ln150_1_reg_526_pp0_iter13_reg <= icmp_ln150_1_reg_526_pp0_iter12_reg;
        icmp_ln150_1_reg_526_pp0_iter14_reg <= icmp_ln150_1_reg_526_pp0_iter13_reg;
        icmp_ln150_1_reg_526_pp0_iter15_reg <= icmp_ln150_1_reg_526_pp0_iter14_reg;
        icmp_ln150_1_reg_526_pp0_iter16_reg <= icmp_ln150_1_reg_526_pp0_iter15_reg;
        icmp_ln150_1_reg_526_pp0_iter17_reg <= icmp_ln150_1_reg_526_pp0_iter16_reg;
        icmp_ln150_1_reg_526_pp0_iter18_reg <= icmp_ln150_1_reg_526_pp0_iter17_reg;
        icmp_ln150_1_reg_526_pp0_iter19_reg <= icmp_ln150_1_reg_526_pp0_iter18_reg;
        icmp_ln150_1_reg_526_pp0_iter20_reg <= icmp_ln150_1_reg_526_pp0_iter19_reg;
        icmp_ln150_1_reg_526_pp0_iter2_reg <= icmp_ln150_1_reg_526;
        icmp_ln150_1_reg_526_pp0_iter3_reg <= icmp_ln150_1_reg_526_pp0_iter2_reg;
        icmp_ln150_1_reg_526_pp0_iter4_reg <= icmp_ln150_1_reg_526_pp0_iter3_reg;
        icmp_ln150_1_reg_526_pp0_iter5_reg <= icmp_ln150_1_reg_526_pp0_iter4_reg;
        icmp_ln150_1_reg_526_pp0_iter6_reg <= icmp_ln150_1_reg_526_pp0_iter5_reg;
        icmp_ln150_1_reg_526_pp0_iter7_reg <= icmp_ln150_1_reg_526_pp0_iter6_reg;
        icmp_ln150_1_reg_526_pp0_iter8_reg <= icmp_ln150_1_reg_526_pp0_iter7_reg;
        icmp_ln150_1_reg_526_pp0_iter9_reg <= icmp_ln150_1_reg_526_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln138_reg_507 <= icmp_ln138_fu_236_p2;
        select_ln119_cast_reg_502[11 : 0] <= select_ln119_cast_fu_210_p1[11 : 0];
        zext_ln142_cast_reg_497[5 : 0] <= zext_ln142_cast_fu_206_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter9_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter10_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter11_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter12_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter13_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter14_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter15_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter16_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter17_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter18_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter0_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter19_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter1_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter2_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter3_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter4_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter5_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter6_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter7_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_phi_ln112_reg_197 <= ap_phi_reg_pp0_iter8_phi_ln112_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op110_read_state20 == 1'b1))) begin
        gmem1_addr_1_read_reg_553 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_read_state20 == 1'b1))) begin
        gmem1_addr_read_reg_558 <= m_axi_gmem1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln138_fu_236_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        high_2_reg_521 <= high_2_fu_265_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (high_reg_185 == 1'd1) & (icmp_ln138_reg_507 == 1'd1))) begin
        trunc_ln142_2_reg_536 <= {{add_ln142_2_fu_361_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (high_reg_185 == 1'd0) & (icmp_ln138_reg_507 == 1'd1))) begin
        trunc_ln4_reg_531 <= {{add_ln144_1_fu_324_p2[63:3]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln138_fu_236_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln138_reg_507 == 1'd1))) begin
        ap_phi_mux_high_phi_fu_189_p4 = high_2_reg_521;
    end else begin
        ap_phi_mux_high_phi_fu_189_p4 = high_reg_185;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op79_readreq_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op76_readreq_state4 == 1'b1)))) begin
        gmem1_blk_n_AR = m_axi_gmem1_ARREADY;
    end else begin
        gmem1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op111_read_state20 == 1'b1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op110_read_state20 == 1'b1)))) begin
        gmem1_blk_n_R = m_axi_gmem1_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_predicate_op79_readreq_state4 == 1'b1)) begin
            m_axi_gmem1_ARADDR = sext_ln142_1_fu_386_p1;
        end else if ((ap_predicate_op76_readreq_state4 == 1'b1)) begin
            m_axi_gmem1_ARADDR = sext_ln144_1_fu_376_p1;
        end else begin
            m_axi_gmem1_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op79_readreq_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op76_readreq_state4 == 1'b1)))) begin
        m_axi_gmem1_ARVALID = 1'b1;
    end else begin
        m_axi_gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_read_state20 == 1'b1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op110_read_state20 == 1'b1)))) begin
        m_axi_gmem1_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1))) begin
        outbuf_blk_n = outbuf_full_n;
    end else begin
        outbuf_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1))) begin
        outbuf_write = 1'b1;
    end else begin
        outbuf_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_2_fu_286_p3 = ((even[0:0] == 1'b1) ? select_ln147_fu_278_p3 : add_ln147_fu_272_p2);

assign add_ln142_1_fu_342_p2 = ($signed(in_memory_addr_0_idx) + $signed(sext_ln142_fu_339_p1));

assign add_ln142_2_fu_361_p2 = (or_ln142_fu_355_p2 + in_memory);

assign add_ln142_fu_250_p0 = a_fu_98;

assign add_ln142_fu_250_p2 = ($signed(add_ln142_fu_250_p0) + $signed(32'd4294967295));

assign add_ln144_1_fu_324_p2 = (shl_ln3_fu_316_p3 + in_memory);

assign add_ln144_fu_311_p2 = ($signed(in_memory_addr_0_idx) + $signed(sext_ln144_fu_308_p1));

assign add_ln147_fu_272_p2 = (a_fu_98 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1) & (outbuf_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((ap_predicate_op111_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op110_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1) & (outbuf_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((ap_predicate_op111_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op110_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln138_reg_507_pp0_iter20_reg == 1'd1) & (outbuf_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (((ap_predicate_op111_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op110_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage0_iter19 = (((ap_predicate_op111_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)) | ((ap_predicate_op110_read_state20 == 1'b1) & (m_axi_gmem1_RVALID == 1'b0)));
end

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21 = ((icmp_ln138_reg_507_pp0_iter20_reg == 1'd1) & (outbuf_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op79_readreq_state4 == 1'b1) & (m_axi_gmem1_ARREADY == 1'b0)) | ((ap_predicate_op76_readreq_state4 == 1'b1) & (m_axi_gmem1_ARREADY == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_phi_ln112_reg_197 = 'bx;

always @ (*) begin
    ap_predicate_op110_read_state20 = ((high_reg_185_pp0_iter18_reg == 1'd0) & (icmp_ln138_reg_507_pp0_iter18_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op111_read_state20 = ((high_reg_185_pp0_iter18_reg == 1'd1) & (icmp_ln138_reg_507_pp0_iter18_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op76_readreq_state4 = ((high_reg_185_pp0_iter2_reg == 1'd0) & (icmp_ln138_reg_507_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_readreq_state4 = ((high_reg_185_pp0_iter2_reg == 1'd1) & (icmp_ln138_reg_507_pp0_iter2_reg == 1'd1));
end

assign final_m2s_len_1_fu_436_p2 = ($signed(final_m2s_len_fu_94) + $signed(32'd4294967295));

assign high_2_fu_265_p3 = ((even[0:0] == 1'b1) ? xor_ln145_fu_259_p2 : ap_phi_mux_high_phi_fu_189_p4);

assign i_2_fu_241_p2 = (i_fu_102 + 6'd1);

assign icmp_ln138_fu_236_p2 = (($signed(zext_ln138_fu_232_p1) < $signed(count_1)) ? 1'b1 : 1'b0);

assign icmp_ln150_1_fu_293_p2 = ((zext_ln138_fu_232_p1 == sub50) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_407_p2 = (($signed(final_m2s_len_fu_94) < $signed(32'd33)) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_418_p2 = ((final_m2s_len_fu_94 == select_ln119_cast_reg_502) ? 1'b1 : 1'b0);

assign lshr_ln142_fu_396_p2 = gmem1_addr_read_reg_558 >> zext_ln142_cast_reg_497;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd1;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_WDATA = 64'd0;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 8'd0;

assign m_axi_gmem1_WUSER = 1'd0;

assign m_axi_gmem1_WVALID = 1'b0;

assign or_ln142_fu_355_p2 = (shl_ln_fu_347_p3 | 64'd4);

assign out_val_data_filed_V_fu_403_p1 = ap_phi_reg_pp0_iter21_phi_ln112_reg_197[31:0];

assign out_val_last_V_fu_413_p2 = (icmp_ln150_fu_407_p2 & icmp_ln150_1_reg_526_pp0_iter20_reg);

assign outbuf_din = {{{{out_val_last_V_fu_413_p2}, {1'd0}}, {icmp_ln155_fu_418_p2}}, {out_val_data_filed_V_fu_403_p1}};

assign select_ln119_cast_fu_210_p1 = select_ln119;

assign select_ln147_fu_278_p3 = ((high_2_fu_265_p3[0:0] == 1'b1) ? add_ln147_fu_272_p2 : a_fu_98);

assign sext_ln142_1_fu_386_p1 = $signed(trunc_ln142_2_reg_536);

assign sext_ln142_fu_339_p1 = $signed(add_ln142_reg_516);

assign sext_ln144_1_fu_376_p1 = $signed(trunc_ln4_reg_531);

assign sext_ln144_fu_308_p1 = a_load_2_reg_511;

assign shl_ln3_fu_316_p3 = {{add_ln144_fu_311_p2}, {3'd0}};

assign shl_ln_fu_347_p3 = {{add_ln142_1_fu_342_p2}, {3'd0}};

assign xor_ln145_fu_259_p2 = (ap_phi_mux_high_phi_fu_189_p4 ^ 1'd1);

assign zext_ln138_fu_232_p1 = i_fu_102;

assign zext_ln142_cast_fu_206_p1 = zext_ln142;

always @ (posedge ap_clk) begin
    zext_ln142_cast_reg_497[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    select_ln119_cast_reg_502[31:12] <= 20'b00000000000000000000;
end

endmodule //userdma_paralleltostreamwithburst_Pipeline_VITIS_LOOP_138_2
