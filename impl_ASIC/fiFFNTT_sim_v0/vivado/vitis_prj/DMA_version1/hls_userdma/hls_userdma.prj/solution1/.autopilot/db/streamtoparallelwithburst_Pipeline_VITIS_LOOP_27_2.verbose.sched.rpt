

================================================================
== Vitis HLS Report for 'streamtoparallelwithburst_Pipeline_VITIS_LOOP_27_2'
================================================================
* Date:           Fri May 24 01:07:41 2024

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        hls_userdma.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_27_2  |        ?|        ?|        18|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 18


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 1
  Pipeline-0 : II = 1, D = 18, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.14>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 21 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%brmerge_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %brmerge"   --->   Operation 22 'read' 'brmerge_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%out_memory_assign_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %out_memory_assign"   --->   Operation 23 'read' 'out_memory_assign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%shl_ln32_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %shl_ln32"   --->   Operation 24 'read' 'shl_ln32_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln27_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln27"   --->   Operation 25 'read' 'zext_ln27_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %tmp"   --->   Operation 26 'read' 'tmp_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln27_cast = zext i6 %zext_ln27_read"   --->   Operation 27 'zext' 'zext_ln27_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %gmem0, void @empty_4, i32 0, i32 0, void @empty_3, i32 10, i32 1024, void @empty_2, void @empty_1, void @empty_3, i32 16, i32 16, i32 16, i32 32, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i33 %inbuf, void @empty_16, i32 0, i32 0, void @empty_3, i32 0, i32 0, void @empty_3, void @empty_3, void @empty_3, i32 0, i32 0, i32 0, i32 0, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %i"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 31 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%i_1 = load i32 %i" [userdma.cpp:27]   --->   Operation 32 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (2.47ns)   --->   "%icmp_ln27 = icmp_eq  i32 %i_1, i32 %tmp_read" [userdma.cpp:27]   --->   Operation 33 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (2.55ns)   --->   "%add_ln27 = add i32 %i_1, i32 1" [userdma.cpp:27]   --->   Operation 34 'add' 'add_ln27' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln27 = br i1 %icmp_ln27, void %for.body.split, void %for.end.loopexit.exitStub" [userdma.cpp:27]   --->   Operation 35 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %brmerge_read, void %if.then, void %if.else" [userdma.cpp:31]   --->   Operation 36 'br' 'br_ln31' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln27 = store i32 %add_ln27, i32 %i" [userdma.cpp:27]   --->   Operation 37 'store' 'store_ln27' <Predicate = (!icmp_ln27)> <Delay = 1.58>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln27 = br void %for.body" [userdma.cpp:27]   --->   Operation 38 'br' 'br_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.04>
ST_2 : Operation 39 [1/1] (3.56ns)   --->   "%inbuf_read = read i33 @_ssdm_op_Read.ap_fifo.volatile.i33P0A, i33 %inbuf" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 39 'read' 'inbuf_read' <Predicate = true> <Delay = 3.56> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 3.56> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 33> <Depth = 64> <FIFO>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%in_val_data_filed_V = trunc i33 %inbuf_read" [/tools/Xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 40 'trunc' 'in_val_data_filed_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i35 @_ssdm_op_BitConcatenate.i35.i32.i3, i32 %i_1, i3 0" [userdma.cpp:34]   --->   Operation 41 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i35 %shl_ln1" [userdma.cpp:34]   --->   Operation 42 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (3.52ns)   --->   "%add_ln34 = add i64 %out_memory_assign_read, i64 %zext_ln34" [userdma.cpp:34]   --->   Operation 43 'add' 'add_ln34' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (3.52ns)   --->   "%add_ln32 = add i64 %add_ln34, i64 4" [userdma.cpp:32]   --->   Operation 44 'add' 'add_ln32' <Predicate = (!brmerge_read)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln32, i32 3, i32 63" [userdma.cpp:32]   --->   Operation 45 'partselect' 'trunc_ln2' <Predicate = (!brmerge_read)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i61 @_ssdm_op_PartSelect.i61.i64.i32.i32, i64 %add_ln34, i32 3, i32 63" [userdma.cpp:34]   --->   Operation 46 'partselect' 'trunc_ln1' <Predicate = (brmerge_read)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%specpipeline_ln28 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_3" [userdma.cpp:28]   --->   Operation 47 'specpipeline' 'specpipeline_ln28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln27 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [userdma.cpp:27]   --->   Operation 48 'specloopname' 'specloopname_ln27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i32 %in_val_data_filed_V" [userdma.cpp:32]   --->   Operation 49 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (4.42ns)   --->   "%shl_ln32_1 = shl i64 %zext_ln32, i64 %zext_ln27_cast" [userdma.cpp:32]   --->   Operation 50 'shl' 'shl_ln32_1' <Predicate = (!brmerge_read)> <Delay = 4.42> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%sext_ln32 = sext i61 %trunc_ln2" [userdma.cpp:32]   --->   Operation 51 'sext' 'sext_ln32' <Predicate = (!brmerge_read)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%gmem0_addr_1 = getelementptr i64 %gmem0, i64 %sext_ln32" [userdma.cpp:32]   --->   Operation 52 'getelementptr' 'gmem0_addr_1' <Predicate = (!brmerge_read)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (7.30ns)   --->   "%empty = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %gmem0_addr_1, i32 1" [userdma.cpp:32]   --->   Operation 53 'writereq' 'empty' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln34 = sext i61 %trunc_ln1" [userdma.cpp:34]   --->   Operation 54 'sext' 'sext_ln34' <Predicate = (brmerge_read)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%gmem0_addr = getelementptr i64 %gmem0, i64 %sext_ln34" [userdma.cpp:34]   --->   Operation 55 'getelementptr' 'gmem0_addr' <Predicate = (brmerge_read)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (7.30ns)   --->   "%empty_43 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i64, i64 %gmem0_addr, i32 1" [userdma.cpp:34]   --->   Operation 56 'writereq' 'empty_43' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 57 [1/1] (7.30ns)   --->   "%write_ln32 = write void @_ssdm_op_Write.m_axi.p1i64, i64 %gmem0_addr_1, i64 %shl_ln32_1, i8 %shl_ln32_read" [userdma.cpp:32]   --->   Operation 57 'write' 'write_ln32' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 58 [1/1] (7.30ns)   --->   "%write_ln34 = write void @_ssdm_op_Write.m_axi.p1i64, i64 %gmem0_addr, i64 %zext_ln32, i8 15" [userdma.cpp:34]   --->   Operation 58 'write' 'write_ln34' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 59 [14/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 59 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 60 [14/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 60 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 61 [13/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 61 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 62 [13/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 62 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 63 [12/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 63 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 64 [12/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 64 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 65 [11/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 65 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 66 [11/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 66 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 67 [10/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 67 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 68 [10/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 68 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 69 [9/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 69 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 70 [9/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 70 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 71 [8/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 71 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 72 [8/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 72 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 73 [7/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 73 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 74 [7/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 74 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 75 [6/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 75 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 76 [6/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 76 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 77 [5/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 77 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 78 [5/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 78 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 79 [4/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 79 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 80 [4/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 80 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 81 [3/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 81 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 82 [3/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 82 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 83 [2/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 83 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 84 [2/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 84 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 89 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 89 'ret' 'ret_ln0' <Predicate = (icmp_ln27)> <Delay = 0.00>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 85 [1/14] (7.30ns)   --->   "%empty_42 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr_1" [userdma.cpp:32]   --->   Operation 85 'writeresp' 'empty_42' <Predicate = (!brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln32 = br void %for.inc" [userdma.cpp:32]   --->   Operation 86 'br' 'br_ln32' <Predicate = (!brmerge_read)> <Delay = 0.00>
ST_18 : Operation 87 [1/14] (7.30ns)   --->   "%empty_44 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i64, i64 %gmem0_addr" [userdma.cpp:34]   --->   Operation 87 'writeresp' 'empty_44' <Predicate = (brmerge_read)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 88 'br' 'br_ln0' <Predicate = (brmerge_read)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.14ns
The critical path consists of the following:
	'alloca' operation ('i') [8]  (0 ns)
	'load' operation ('i', userdma.cpp:27) on local variable 'i' [20]  (0 ns)
	'add' operation ('add_ln27', userdma.cpp:27) [22]  (2.55 ns)
	'store' operation ('store_ln27', userdma.cpp:27) of variable 'add_ln27', userdma.cpp:27 on local variable 'i' [53]  (1.59 ns)

 <State 2>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln34', userdma.cpp:34) [31]  (3.52 ns)
	'add' operation ('add_ln32', userdma.cpp:32) [35]  (3.52 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem0_addr', userdma.cpp:34) [47]  (0 ns)
	bus request operation ('empty_43', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [48]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln34', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [49]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 13>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 14>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 15>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 17>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)

 <State 18>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_44', userdma.cpp:34) on port 'gmem0' (userdma.cpp:34) [50]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
