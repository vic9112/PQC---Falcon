// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fiFFNTT_PE_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_buf_address0,
        in_buf_ce0,
        in_buf_q0,
        in_buf_address1,
        in_buf_ce1,
        in_buf_q1,
        stage0_address0,
        stage0_ce0,
        stage0_we0,
        stage0_d0,
        stage0_address1,
        stage0_ce1,
        stage0_we1,
        stage0_d1,
        in_t,
        in_m,
        mode,
        inverse
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] in_buf_address0;
output   in_buf_ce0;
input  [63:0] in_buf_q0;
output  [9:0] in_buf_address1;
output   in_buf_ce1;
input  [63:0] in_buf_q1;
output  [9:0] stage0_address0;
output   stage0_ce0;
output  [7:0] stage0_we0;
output  [63:0] stage0_d0;
output  [9:0] stage0_address1;
output   stage0_ce1;
output  [7:0] stage0_we1;
output  [63:0] stage0_d1;
input  [10:0] in_t;
input  [9:0] in_m;
input  [0:0] mode;
input  [0:0] inverse;

reg ap_idle;
reg[9:0] in_buf_address0;
reg in_buf_ce0;
reg[9:0] in_buf_address1;
reg in_buf_ce1;
reg[9:0] stage0_address0;
reg stage0_ce0;
reg[7:0] stage0_we0;
reg[63:0] stage0_d0;
reg[9:0] stage0_address1;
reg stage0_ce1;
reg[7:0] stage0_we1;
reg[63:0] stage0_d1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln168_reg_981;
reg   [0:0] icmp_ln118_reg_977;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [9:0] gm_im_tab_address0;
reg    gm_im_tab_ce0;
wire   [63:0] gm_im_tab_q0;
wire   [9:0] iGMb_address0;
reg    iGMb_ce0;
wire   [13:0] iGMb_q0;
wire   [9:0] GMb_address0;
reg    GMb_ce0;
wire   [13:0] GMb_q0;
wire   [9:0] gm_re_tab_address0;
reg    gm_re_tab_ce0;
wire   [63:0] gm_re_tab_q0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_state41_pp0_stage0_iter20;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] mode_read_read_fu_114_p2;
wire   [9:0] trunc_ln103_fu_464_p1;
reg   [9:0] trunc_ln103_reg_945;
wire   [9:0] trunc_ln103_1_fu_468_p4;
reg   [9:0] trunc_ln103_1_reg_950;
wire   [9:0] trunc_ln105_fu_478_p1;
reg   [9:0] trunc_ln105_reg_955;
wire  signed [9:0] index_const_fu_482_p3;
reg  signed [9:0] index_const_reg_960;
reg   [9:0] hm_cast_reg_966;
reg   [9:0] n_1_reg_971;
reg   [9:0] n_1_reg_971_pp0_iter1_reg;
reg   [9:0] n_1_reg_971_pp0_iter2_reg;
reg   [9:0] n_1_reg_971_pp0_iter3_reg;
reg   [9:0] n_1_reg_971_pp0_iter4_reg;
reg   [9:0] n_1_reg_971_pp0_iter5_reg;
reg   [9:0] n_1_reg_971_pp0_iter6_reg;
reg   [9:0] n_1_reg_971_pp0_iter7_reg;
wire   [0:0] icmp_ln118_fu_508_p2;
reg   [0:0] icmp_ln118_reg_977_pp0_iter1_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter2_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter3_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter4_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter5_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter6_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter7_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter8_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter9_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter10_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter11_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter12_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter13_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter14_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter15_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter16_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter17_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter18_reg;
reg   [0:0] icmp_ln118_reg_977_pp0_iter19_reg;
wire   [0:0] icmp_ln168_fu_526_p2;
reg   [0:0] icmp_ln168_reg_981_pp0_iter1_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter2_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter3_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter4_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter5_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter6_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter7_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter8_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter9_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter10_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter11_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter12_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter13_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter14_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter15_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter16_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter17_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter18_reg;
reg   [0:0] icmp_ln168_reg_981_pp0_iter19_reg;
wire  signed [9:0] grp_fu_520_p2;
reg  signed [9:0] i_gm_reg_985;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] zext_ln128_fu_551_p1;
reg   [63:0] zext_ln128_reg_1002;
wire   [9:0] grp_fu_919_p3;
reg  signed [9:0] i_reg_1017;
reg   [63:0] gm_im_tab_load_reg_1023;
reg   [63:0] gm_re_reg_1033;
reg   [63:0] gm_re_reg_1033_pp0_iter9_reg;
reg   [63:0] gm_re_reg_1033_pp0_iter10_reg;
reg   [63:0] gm_re_reg_1033_pp0_iter11_reg;
wire   [13:0] gm_fu_568_p3;
reg   [13:0] gm_reg_1038;
wire   [63:0] zext_ln184_fu_575_p1;
reg   [63:0] zext_ln184_reg_1043;
reg   [63:0] zext_ln184_reg_1043_pp0_iter9_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter10_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter11_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter12_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter13_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter14_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter15_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter16_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter17_reg;
reg   [63:0] zext_ln184_reg_1043_pp0_iter18_reg;
wire   [63:0] zext_ln173_fu_580_p1;
reg   [63:0] zext_ln173_reg_1053;
reg   [63:0] zext_ln173_reg_1053_pp0_iter9_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter10_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter11_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter12_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter13_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter14_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter15_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter16_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter17_reg;
reg   [63:0] zext_ln173_reg_1053_pp0_iter18_reg;
wire   [63:0] zext_ln151_fu_585_p1;
reg   [63:0] zext_ln151_reg_1063;
reg   [63:0] zext_ln151_reg_1063_pp0_iter9_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter10_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter11_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter12_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter13_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter14_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter15_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter16_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter17_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter18_reg;
reg   [63:0] zext_ln151_reg_1063_pp0_iter19_reg;
wire   [63:0] zext_ln152_fu_596_p1;
reg   [63:0] zext_ln152_reg_1073;
reg   [63:0] zext_ln152_reg_1073_pp0_iter9_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter10_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter11_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter12_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter13_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter14_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter15_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter16_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter17_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter18_reg;
reg   [63:0] zext_ln152_reg_1073_pp0_iter19_reg;
wire   [63:0] zext_ln138_fu_601_p1;
reg   [63:0] zext_ln138_reg_1083;
reg   [63:0] zext_ln138_reg_1083_pp0_iter9_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter10_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter11_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter12_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter13_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter14_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter15_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter16_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter17_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter18_reg;
reg   [63:0] zext_ln138_reg_1083_pp0_iter19_reg;
wire   [63:0] zext_ln139_fu_612_p1;
reg   [63:0] zext_ln139_reg_1093;
reg   [63:0] zext_ln139_reg_1093_pp0_iter9_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter10_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter11_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter12_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter13_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter14_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter15_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter16_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter17_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter18_reg;
reg   [63:0] zext_ln139_reg_1093_pp0_iter19_reg;
wire   [63:0] gm_im_2_fu_630_p3;
reg   [63:0] gm_im_2_reg_1103;
reg   [63:0] gm_im_2_reg_1103_pp0_iter9_reg;
reg   [63:0] gm_im_2_reg_1103_pp0_iter10_reg;
reg   [63:0] gm_im_2_reg_1103_pp0_iter11_reg;
wire   [63:0] zext_ln172_fu_638_p1;
reg   [63:0] zext_ln172_reg_1108;
reg   [63:0] zext_ln172_reg_1108_pp0_iter9_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter10_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter11_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter12_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter13_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter14_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter15_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter16_reg;
reg   [63:0] zext_ln172_reg_1108_pp0_iter17_reg;
wire   [17:0] zext_ln184_1_fu_646_p1;
wire   [15:0] v_fu_651_p1;
reg   [15:0] v_reg_1126;
reg   [15:0] v_reg_1126_pp0_iter9_reg;
reg   [15:0] v_reg_1126_pp0_iter10_reg;
reg   [15:0] v_reg_1126_pp0_iter11_reg;
reg   [15:0] v_reg_1126_pp0_iter12_reg;
wire   [63:0] zext_ln135_fu_660_p1;
reg   [63:0] zext_ln135_reg_1132;
reg   [63:0] zext_ln135_reg_1132_pp0_iter9_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter10_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter11_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter12_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter13_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter14_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter15_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter16_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter17_reg;
reg   [63:0] zext_ln135_reg_1132_pp0_iter18_reg;
wire   [63:0] tmp_re_3_fu_665_p1;
wire   [63:0] tmp_im_3_fu_670_p1;
wire   [63:0] tmp_re_fu_675_p1;
reg   [63:0] tmp_re_reg_1153;
wire   [63:0] tmp_im_fu_679_p1;
reg   [63:0] tmp_im_reg_1159;
wire   [15:0] u_fu_683_p1;
reg   [15:0] u_reg_1165;
reg   [15:0] u_reg_1165_pp0_iter10_reg;
reg   [15:0] u_reg_1165_pp0_iter11_reg;
reg   [15:0] u_reg_1165_pp0_iter12_reg;
reg   [15:0] u_reg_1165_pp0_iter13_reg;
wire   [16:0] zext_ln171_fu_687_p1;
reg   [16:0] zext_ln171_reg_1172;
reg   [16:0] zext_ln171_reg_1172_pp0_iter10_reg;
reg   [16:0] zext_ln171_reg_1172_pp0_iter11_reg;
reg   [16:0] zext_ln171_reg_1172_pp0_iter12_reg;
reg   [16:0] zext_ln171_reg_1172_pp0_iter13_reg;
wire   [16:0] zext_ln173_1_fu_691_p1;
reg   [16:0] zext_ln173_1_reg_1177;
reg   [16:0] zext_ln173_1_reg_1177_pp0_iter10_reg;
reg   [16:0] zext_ln173_1_reg_1177_pp0_iter11_reg;
reg   [16:0] zext_ln173_1_reg_1177_pp0_iter12_reg;
reg   [16:0] zext_ln173_1_reg_1177_pp0_iter13_reg;
wire   [17:0] tmp1_5_fu_720_p2;
wire   [63:0] x_re_fu_727_p1;
reg   [63:0] x_re_reg_1187;
reg   [63:0] x_re_reg_1187_pp0_iter10_reg;
reg   [63:0] x_re_reg_1187_pp0_iter11_reg;
reg   [63:0] x_re_reg_1187_pp0_iter12_reg;
reg   [63:0] x_re_reg_1187_pp0_iter13_reg;
reg   [63:0] x_re_reg_1187_pp0_iter14_reg;
reg   [63:0] x_re_reg_1187_pp0_iter15_reg;
reg   [63:0] x_re_reg_1187_pp0_iter16_reg;
wire   [63:0] x_im_fu_733_p1;
reg   [63:0] x_im_reg_1193;
reg   [63:0] x_im_reg_1193_pp0_iter10_reg;
reg   [63:0] x_im_reg_1193_pp0_iter11_reg;
reg   [63:0] x_im_reg_1193_pp0_iter12_reg;
reg   [63:0] x_im_reg_1193_pp0_iter13_reg;
reg   [63:0] x_im_reg_1193_pp0_iter14_reg;
reg   [63:0] x_im_reg_1193_pp0_iter15_reg;
reg   [63:0] x_im_reg_1193_pp0_iter16_reg;
wire   [63:0] grp_fu_372_p2;
reg   [63:0] add_reg_1199;
reg   [63:0] add_reg_1199_pp0_iter12_reg;
reg   [63:0] add_reg_1199_pp0_iter13_reg;
reg   [63:0] add_reg_1199_pp0_iter14_reg;
reg   [63:0] add_reg_1199_pp0_iter15_reg;
reg   [63:0] add_reg_1199_pp0_iter16_reg;
reg   [63:0] add_reg_1199_pp0_iter17_reg;
reg   [63:0] add_reg_1199_pp0_iter18_reg;
wire   [63:0] grp_fu_376_p2;
reg   [63:0] add1_reg_1204;
reg   [63:0] add1_reg_1204_pp0_iter12_reg;
reg   [63:0] add1_reg_1204_pp0_iter13_reg;
reg   [63:0] add1_reg_1204_pp0_iter14_reg;
reg   [63:0] add1_reg_1204_pp0_iter15_reg;
reg   [63:0] add1_reg_1204_pp0_iter16_reg;
reg   [63:0] add1_reg_1204_pp0_iter17_reg;
reg   [63:0] add1_reg_1204_pp0_iter18_reg;
wire   [63:0] grp_fu_380_p2;
reg   [63:0] x_re_2_reg_1209;
wire   [63:0] grp_fu_384_p2;
reg   [63:0] x_im_2_reg_1214;
wire   [15:0] add_ln194_fu_786_p2;
reg   [15:0] add_ln194_reg_1219;
reg   [15:0] add_ln194_reg_1219_pp0_iter14_reg;
reg   [15:0] add_ln194_reg_1219_pp0_iter15_reg;
reg   [15:0] add_ln194_reg_1219_pp0_iter16_reg;
reg   [15:0] add_ln194_reg_1219_pp0_iter17_reg;
wire   [15:0] add_ln198_fu_818_p2;
reg   [15:0] add_ln198_reg_1224;
reg   [15:0] add_ln198_reg_1224_pp0_iter14_reg;
reg   [15:0] add_ln198_reg_1224_pp0_iter15_reg;
reg   [15:0] add_ln198_reg_1224_pp0_iter16_reg;
reg   [15:0] add_ln198_reg_1224_pp0_iter17_reg;
reg   [15:0] add_ln198_reg_1224_pp0_iter18_reg;
wire   [15:0] add_ln177_fu_859_p2;
reg   [15:0] add_ln177_reg_1229;
reg   [15:0] add_ln177_reg_1229_pp0_iter14_reg;
reg   [15:0] add_ln177_reg_1229_pp0_iter15_reg;
reg   [15:0] add_ln177_reg_1229_pp0_iter16_reg;
reg   [15:0] add_ln177_reg_1229_pp0_iter17_reg;
wire   [15:0] trunc_ln189_fu_865_p1;
reg   [15:0] trunc_ln189_reg_1234;
reg   [15:0] trunc_ln189_reg_1234_pp0_iter15_reg;
reg   [15:0] trunc_ln189_reg_1234_pp0_iter16_reg;
reg   [15:0] trunc_ln189_reg_1234_pp0_iter17_reg;
reg   [15:0] trunc_ln189_reg_1234_pp0_iter18_reg;
reg   [63:0] tmp_re1_2_reg_1239;
reg   [63:0] tmp_im1_2_reg_1245;
reg   [63:0] add3_reg_1251;
reg   [63:0] sub_reg_1256;
reg   [63:0] sub1_reg_1261;
reg   [63:0] sub1_reg_1261_pp0_iter19_reg;
reg   [63:0] tmp_im1_reg_1266;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg   [17:0] grp_monty_mul_fu_358_x;
wire   [16:0] grp_monty_mul_fu_358_ap_return;
reg    grp_monty_mul_fu_358_ap_ce;
reg    ap_predicate_op154_call_state18;
reg    ap_predicate_op183_call_state19;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call6;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call6;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call6;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call6;
wire    ap_block_state10_pp0_stage1_iter4_ignore_call6;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call6;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call6;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call6;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call6;
wire    ap_block_state20_pp0_stage1_iter9_ignore_call6;
wire    ap_block_state22_pp0_stage1_iter10_ignore_call6;
wire    ap_block_state24_pp0_stage1_iter11_ignore_call6;
wire    ap_block_state26_pp0_stage1_iter12_ignore_call6;
wire    ap_block_state28_pp0_stage1_iter13_ignore_call6;
wire    ap_block_state30_pp0_stage1_iter14_ignore_call6;
wire    ap_block_state32_pp0_stage1_iter15_ignore_call6;
wire    ap_block_state34_pp0_stage1_iter16_ignore_call6;
wire    ap_block_state36_pp0_stage1_iter17_ignore_call6;
wire    ap_block_state38_pp0_stage1_iter18_ignore_call6;
wire    ap_block_state40_pp0_stage1_iter19_ignore_call6;
wire    ap_block_pp0_stage1_11001_ignoreCallOp154;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call6;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call6;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call6;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call6;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call6;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call6;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call6;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call6;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call6;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call6;
wire    ap_block_state21_pp0_stage0_iter10_ignore_call6;
wire    ap_block_state23_pp0_stage0_iter11_ignore_call6;
wire    ap_block_state25_pp0_stage0_iter12_ignore_call6;
wire    ap_block_state27_pp0_stage0_iter13_ignore_call6;
wire    ap_block_state29_pp0_stage0_iter14_ignore_call6;
wire    ap_block_state31_pp0_stage0_iter15_ignore_call6;
wire    ap_block_state33_pp0_stage0_iter16_ignore_call6;
wire    ap_block_state35_pp0_stage0_iter17_ignore_call6;
wire    ap_block_state37_pp0_stage0_iter18_ignore_call6;
wire    ap_block_state39_pp0_stage0_iter19_ignore_call6;
wire    ap_block_state41_pp0_stage0_iter20_ignore_call6;
wire    ap_block_pp0_stage0_11001_ignoreCallOp176;
reg   [63:0] grp_complex_mul_fu_364_x_re;
reg   [63:0] grp_complex_mul_fu_364_x_im;
reg   [63:0] grp_complex_mul_fu_364_y_re;
reg   [63:0] grp_complex_mul_fu_364_y_im;
wire   [63:0] grp_complex_mul_fu_364_ap_return_0;
wire   [63:0] grp_complex_mul_fu_364_ap_return_1;
reg    grp_complex_mul_fu_364_ap_ce;
reg    ap_predicate_op166_call_state18;
reg    ap_predicate_op226_call_state25;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call10;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call10;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call10;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call10;
wire    ap_block_state10_pp0_stage1_iter4_ignore_call10;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call10;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call10;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call10;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call10;
wire    ap_block_state20_pp0_stage1_iter9_ignore_call10;
wire    ap_block_state22_pp0_stage1_iter10_ignore_call10;
wire    ap_block_state24_pp0_stage1_iter11_ignore_call10;
wire    ap_block_state26_pp0_stage1_iter12_ignore_call10;
wire    ap_block_state28_pp0_stage1_iter13_ignore_call10;
wire    ap_block_state30_pp0_stage1_iter14_ignore_call10;
wire    ap_block_state32_pp0_stage1_iter15_ignore_call10;
wire    ap_block_state34_pp0_stage1_iter16_ignore_call10;
wire    ap_block_state36_pp0_stage1_iter17_ignore_call10;
wire    ap_block_state38_pp0_stage1_iter18_ignore_call10;
wire    ap_block_state40_pp0_stage1_iter19_ignore_call10;
wire    ap_block_pp0_stage1_11001_ignoreCallOp166;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call10;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call10;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call10;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call10;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call10;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call10;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call10;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call10;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call10;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call10;
wire    ap_block_state21_pp0_stage0_iter10_ignore_call10;
wire    ap_block_state23_pp0_stage0_iter11_ignore_call10;
wire    ap_block_state25_pp0_stage0_iter12_ignore_call10;
wire    ap_block_state27_pp0_stage0_iter13_ignore_call10;
wire    ap_block_state29_pp0_stage0_iter14_ignore_call10;
wire    ap_block_state31_pp0_stage0_iter15_ignore_call10;
wire    ap_block_state33_pp0_stage0_iter16_ignore_call10;
wire    ap_block_state35_pp0_stage0_iter17_ignore_call10;
wire    ap_block_state37_pp0_stage0_iter18_ignore_call10;
wire    ap_block_state39_pp0_stage0_iter19_ignore_call10;
wire    ap_block_state41_pp0_stage0_iter20_ignore_call10;
wire    ap_block_pp0_stage0_11001_ignoreCallOp187;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln124_fu_541_p1;
wire   [63:0] zext_ln124_1_fu_563_p1;
wire   [9:0] stage0_addr_8_gep_fu_281_p3;
wire   [9:0] stage0_addr_4_gep_fu_288_p3;
wire   [9:0] stage0_addr_gep_fu_295_p3;
wire   [9:0] stage0_addr_1_gep_fu_323_p3;
reg   [9:0] n_fu_104;
wire   [9:0] n_2_fu_514_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_n_1;
wire   [63:0] zext_ln194_fu_869_p1;
wire   [63:0] zext_ln177_fu_873_p1;
wire   [63:0] bitcast_ln162_fu_877_p1;
wire   [63:0] bitcast_ln141_fu_882_p1;
wire   [63:0] zext_ln198_fu_886_p1;
wire   [63:0] zext_ln189_fu_890_p1;
wire   [63:0] bitcast_ln163_fu_894_p1;
wire   [63:0] bitcast_ln142_fu_898_p1;
wire   [63:0] bitcast_ln165_fu_902_p1;
wire   [63:0] bitcast_ln156_fu_906_p1;
wire   [63:0] bitcast_ln166_fu_911_p1;
wire   [63:0] bitcast_ln157_fu_915_p1;
reg   [63:0] grp_fu_372_p0;
reg   [63:0] grp_fu_372_p1;
reg   [63:0] grp_fu_376_p0;
reg   [63:0] grp_fu_376_p1;
reg   [63:0] grp_fu_380_p0;
reg   [63:0] grp_fu_380_p1;
reg   [63:0] grp_fu_384_p0;
reg   [63:0] grp_fu_384_p1;
wire  signed [9:0] grp_fu_388_p0;
wire  signed [9:0] grp_fu_392_p0;
wire   [8:0] t_fu_408_p4;
wire   [10:0] m_fu_422_p2;
wire   [9:0] zext_ln96_fu_418_p1;
wire   [9:0] t_1_fu_436_p3;
wire   [10:0] m_1_fu_428_p3;
wire   [10:0] in_m_cast_fu_404_p1;
wire   [10:0] zext_ln90_fu_444_p1;
wire   [10:0] t_2_fu_456_p3;
wire   [10:0] m_2_fu_448_p3;
wire  signed [9:0] grp_fu_520_p1;
wire   [9:0] add_ln124_fu_537_p2;
wire   [9:0] add_ln128_fu_547_p2;
wire   [9:0] select_ln171_fu_556_p3;
(* use_dsp48 = "no" *) wire   [9:0] grp_fu_388_p2;
(* use_dsp48 = "no" *) wire   [9:0] grp_fu_392_p2;
wire   [9:0] xor_ln152_fu_590_p2;
wire   [9:0] xor_ln139_fu_606_p2;
wire   [63:0] bitcast_ln125_fu_617_p1;
wire   [63:0] xor_ln125_fu_620_p2;
wire   [63:0] gm_im_fu_626_p1;
wire   [15:0] w_2_fu_642_p1;
wire   [9:0] xor_ln135_fu_655_p2;
wire  signed [16:0] tmp1_1_fu_694_p2;
wire   [0:0] tmp_1_fu_704_p3;
wire   [17:0] select_ln180_fu_712_p3;
wire  signed [17:0] sext_ln117_fu_700_p1;
wire  signed [16:0] sext_ln187_fu_742_p0;
wire  signed [16:0] trunc_ln192_fu_746_p0;
wire   [16:0] add_ln192_fu_750_p2;
wire  signed [17:0] sext_ln192_fu_755_p1;
wire  signed [17:0] sext_ln187_fu_742_p1;
wire   [17:0] tmp1_3_fu_759_p2;
wire   [15:0] trunc_ln192_fu_746_p1;
wire   [0:0] tmp_2_fu_765_p3;
wire   [15:0] select_ln194_fu_778_p3;
wire   [15:0] add_ln194_1_fu_773_p2;
wire   [17:0] zext_ln171_1_fu_739_p1;
wire   [17:0] tmp1_4_fu_792_p2;
wire   [0:0] tmp_3_fu_798_p3;
wire   [15:0] select_ln198_fu_810_p3;
wire   [15:0] trunc_ln197_fu_806_p1;
wire   [16:0] add_ln175_fu_824_p2;
wire  signed [17:0] sext_ln175_fu_829_p1;
wire   [17:0] tmp1_fu_833_p2;
wire   [0:0] tmp_fu_839_p3;
wire   [15:0] select_ln177_fu_851_p3;
wire   [15:0] add_ln177_1_fu_847_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter20_stage0;
reg    ap_idle_pp0_0to19;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to20;
reg    ap_done_pending_pp0;
reg    ap_block_pp0;
reg    ap_predicate_op297_store_state38;
reg    ap_enable_operation_297;
reg    ap_enable_state38_pp0_iter18_stage1;
reg    ap_predicate_op300_store_state38;
reg    ap_enable_operation_300;
reg    ap_predicate_op304_store_state38;
reg    ap_enable_operation_304;
reg    ap_predicate_op310_store_state38;
reg    ap_enable_operation_310;
reg    ap_predicate_op314_store_state39;
reg    ap_enable_operation_314;
reg    ap_enable_state39_pp0_iter19_stage0;
reg    ap_predicate_op318_store_state39;
reg    ap_enable_operation_318;
reg    ap_predicate_op322_store_state39;
reg    ap_enable_operation_322;
reg    ap_predicate_op325_store_state39;
reg    ap_enable_operation_325;
reg    ap_predicate_op329_store_state40;
reg    ap_enable_operation_329;
reg    ap_enable_state40_pp0_iter19_stage1;
reg    ap_predicate_op335_store_state40;
reg    ap_enable_operation_335;
reg    ap_predicate_op338_store_state41;
reg    ap_enable_operation_338;
reg    ap_enable_state41_pp0_iter20_stage0;
reg    ap_predicate_op342_store_state41;
reg    ap_enable_operation_342;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1811;
reg    ap_condition_1816;
reg    ap_condition_1820;
reg    ap_condition_1824;
reg    ap_condition_1828;
reg    ap_condition_1832;
reg    ap_condition_1836;
reg    ap_condition_1840;
reg    ap_condition_1844;
reg    ap_condition_1849;
reg    ap_condition_1854;
reg    ap_condition_1858;
reg    ap_condition_1862;
reg    ap_condition_1867;
reg    ap_condition_1872;
reg    ap_condition_1876;
reg    ap_condition_1880;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

fiFFNTT_PE_1_gm_im_tab_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
gm_im_tab_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gm_im_tab_address0),
    .ce0(gm_im_tab_ce0),
    .q0(gm_im_tab_q0)
);

fiFFNTT_PE_1_iGMb_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iGMb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(iGMb_address0),
    .ce0(iGMb_ce0),
    .q0(iGMb_q0)
);

fiFFNTT_PE_1_GMb_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
GMb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(GMb_address0),
    .ce0(GMb_ce0),
    .q0(GMb_q0)
);

fiFFNTT_PE_1_gm_re_tab_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
gm_re_tab_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gm_re_tab_address0),
    .ce0(gm_re_tab_ce0),
    .q0(gm_re_tab_q0)
);

fiFFNTT_monty_mul grp_monty_mul_fu_358(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_monty_mul_fu_358_x),
    .y(gm_reg_1038),
    .ap_return(grp_monty_mul_fu_358_ap_return),
    .ap_ce(grp_monty_mul_fu_358_ap_ce)
);

fiFFNTT_complex_mul grp_complex_mul_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_re(grp_complex_mul_fu_364_x_re),
    .x_im(grp_complex_mul_fu_364_x_im),
    .y_re(grp_complex_mul_fu_364_y_re),
    .y_im(grp_complex_mul_fu_364_y_im),
    .ap_return_0(grp_complex_mul_fu_364_ap_return_0),
    .ap_return_1(grp_complex_mul_fu_364_ap_return_1),
    .ap_ce(grp_complex_mul_fu_364_ap_ce)
);

fiFFNTT_dadd_64ns_64ns_64_5_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_0_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_372_p0),
    .din1(grp_fu_372_p1),
    .ce(1'b1),
    .dout(grp_fu_372_p2)
);

fiFFNTT_dadd_64ns_64ns_64_5_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_0_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_376_p0),
    .din1(grp_fu_376_p1),
    .ce(1'b1),
    .dout(grp_fu_376_p2)
);

fiFFNTT_dsub_64ns_64ns_64_5_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_5_full_dsp_0_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_380_p0),
    .din1(grp_fu_380_p1),
    .ce(1'b1),
    .dout(grp_fu_380_p2)
);

fiFFNTT_dsub_64ns_64ns_64_5_full_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_5_full_dsp_0_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_384_p0),
    .din1(grp_fu_384_p1),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

fiFFNTT_udiv_10ns_10s_10_14_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
udiv_10ns_10s_10_14_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_n_1),
    .din1(grp_fu_520_p1),
    .ce(1'b1),
    .dout(grp_fu_520_p2)
);

fiFFNTT_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_520_p2),
    .din1(index_const_reg_960),
    .din2(n_1_reg_971_pp0_iter7_reg),
    .ce(1'b1),
    .dout(grp_fu_919_p3)
);

fiFFNTT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter20 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter19_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_1828)) begin
            n_fu_104 <= n_2_fu_514_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_104 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln118_reg_977_pp0_iter10_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add1_reg_1204 <= grp_fu_376_p2;
        add_reg_1199 <= grp_fu_372_p2;
        x_im_2_reg_1214 <= grp_fu_384_p2;
        x_re_2_reg_1209 <= grp_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add1_reg_1204_pp0_iter12_reg <= add1_reg_1204;
        add1_reg_1204_pp0_iter13_reg <= add1_reg_1204_pp0_iter12_reg;
        add1_reg_1204_pp0_iter14_reg <= add1_reg_1204_pp0_iter13_reg;
        add1_reg_1204_pp0_iter15_reg <= add1_reg_1204_pp0_iter14_reg;
        add1_reg_1204_pp0_iter16_reg <= add1_reg_1204_pp0_iter15_reg;
        add1_reg_1204_pp0_iter17_reg <= add1_reg_1204_pp0_iter16_reg;
        add1_reg_1204_pp0_iter18_reg <= add1_reg_1204_pp0_iter17_reg;
        add_reg_1199_pp0_iter12_reg <= add_reg_1199;
        add_reg_1199_pp0_iter13_reg <= add_reg_1199_pp0_iter12_reg;
        add_reg_1199_pp0_iter14_reg <= add_reg_1199_pp0_iter13_reg;
        add_reg_1199_pp0_iter15_reg <= add_reg_1199_pp0_iter14_reg;
        add_reg_1199_pp0_iter16_reg <= add_reg_1199_pp0_iter15_reg;
        add_reg_1199_pp0_iter17_reg <= add_reg_1199_pp0_iter16_reg;
        add_reg_1199_pp0_iter18_reg <= add_reg_1199_pp0_iter17_reg;
        gm_re_reg_1033_pp0_iter10_reg <= gm_re_reg_1033_pp0_iter9_reg;
        gm_re_reg_1033_pp0_iter11_reg <= gm_re_reg_1033_pp0_iter10_reg;
        gm_re_reg_1033_pp0_iter9_reg <= gm_re_reg_1033;
        hm_cast_reg_966 <= {{m_2_fu_448_p3[10:1]}};
        icmp_ln118_reg_977 <= icmp_ln118_fu_508_p2;
        icmp_ln118_reg_977_pp0_iter10_reg <= icmp_ln118_reg_977_pp0_iter9_reg;
        icmp_ln118_reg_977_pp0_iter11_reg <= icmp_ln118_reg_977_pp0_iter10_reg;
        icmp_ln118_reg_977_pp0_iter12_reg <= icmp_ln118_reg_977_pp0_iter11_reg;
        icmp_ln118_reg_977_pp0_iter13_reg <= icmp_ln118_reg_977_pp0_iter12_reg;
        icmp_ln118_reg_977_pp0_iter14_reg <= icmp_ln118_reg_977_pp0_iter13_reg;
        icmp_ln118_reg_977_pp0_iter15_reg <= icmp_ln118_reg_977_pp0_iter14_reg;
        icmp_ln118_reg_977_pp0_iter16_reg <= icmp_ln118_reg_977_pp0_iter15_reg;
        icmp_ln118_reg_977_pp0_iter17_reg <= icmp_ln118_reg_977_pp0_iter16_reg;
        icmp_ln118_reg_977_pp0_iter18_reg <= icmp_ln118_reg_977_pp0_iter17_reg;
        icmp_ln118_reg_977_pp0_iter19_reg <= icmp_ln118_reg_977_pp0_iter18_reg;
        icmp_ln118_reg_977_pp0_iter1_reg <= icmp_ln118_reg_977;
        icmp_ln118_reg_977_pp0_iter2_reg <= icmp_ln118_reg_977_pp0_iter1_reg;
        icmp_ln118_reg_977_pp0_iter3_reg <= icmp_ln118_reg_977_pp0_iter2_reg;
        icmp_ln118_reg_977_pp0_iter4_reg <= icmp_ln118_reg_977_pp0_iter3_reg;
        icmp_ln118_reg_977_pp0_iter5_reg <= icmp_ln118_reg_977_pp0_iter4_reg;
        icmp_ln118_reg_977_pp0_iter6_reg <= icmp_ln118_reg_977_pp0_iter5_reg;
        icmp_ln118_reg_977_pp0_iter7_reg <= icmp_ln118_reg_977_pp0_iter6_reg;
        icmp_ln118_reg_977_pp0_iter8_reg <= icmp_ln118_reg_977_pp0_iter7_reg;
        icmp_ln118_reg_977_pp0_iter9_reg <= icmp_ln118_reg_977_pp0_iter8_reg;
        icmp_ln168_reg_981_pp0_iter10_reg <= icmp_ln168_reg_981_pp0_iter9_reg;
        icmp_ln168_reg_981_pp0_iter11_reg <= icmp_ln168_reg_981_pp0_iter10_reg;
        icmp_ln168_reg_981_pp0_iter12_reg <= icmp_ln168_reg_981_pp0_iter11_reg;
        icmp_ln168_reg_981_pp0_iter13_reg <= icmp_ln168_reg_981_pp0_iter12_reg;
        icmp_ln168_reg_981_pp0_iter14_reg <= icmp_ln168_reg_981_pp0_iter13_reg;
        icmp_ln168_reg_981_pp0_iter15_reg <= icmp_ln168_reg_981_pp0_iter14_reg;
        icmp_ln168_reg_981_pp0_iter16_reg <= icmp_ln168_reg_981_pp0_iter15_reg;
        icmp_ln168_reg_981_pp0_iter17_reg <= icmp_ln168_reg_981_pp0_iter16_reg;
        icmp_ln168_reg_981_pp0_iter18_reg <= icmp_ln168_reg_981_pp0_iter17_reg;
        icmp_ln168_reg_981_pp0_iter19_reg <= icmp_ln168_reg_981_pp0_iter18_reg;
        icmp_ln168_reg_981_pp0_iter1_reg <= icmp_ln168_reg_981;
        icmp_ln168_reg_981_pp0_iter2_reg <= icmp_ln168_reg_981_pp0_iter1_reg;
        icmp_ln168_reg_981_pp0_iter3_reg <= icmp_ln168_reg_981_pp0_iter2_reg;
        icmp_ln168_reg_981_pp0_iter4_reg <= icmp_ln168_reg_981_pp0_iter3_reg;
        icmp_ln168_reg_981_pp0_iter5_reg <= icmp_ln168_reg_981_pp0_iter4_reg;
        icmp_ln168_reg_981_pp0_iter6_reg <= icmp_ln168_reg_981_pp0_iter5_reg;
        icmp_ln168_reg_981_pp0_iter7_reg <= icmp_ln168_reg_981_pp0_iter6_reg;
        icmp_ln168_reg_981_pp0_iter8_reg <= icmp_ln168_reg_981_pp0_iter7_reg;
        icmp_ln168_reg_981_pp0_iter9_reg <= icmp_ln168_reg_981_pp0_iter8_reg;
        index_const_reg_960 <= index_const_fu_482_p3;
        n_1_reg_971 <= ap_sig_allocacmp_n_1;
        n_1_reg_971_pp0_iter1_reg <= n_1_reg_971;
        n_1_reg_971_pp0_iter2_reg <= n_1_reg_971_pp0_iter1_reg;
        n_1_reg_971_pp0_iter3_reg <= n_1_reg_971_pp0_iter2_reg;
        n_1_reg_971_pp0_iter4_reg <= n_1_reg_971_pp0_iter3_reg;
        n_1_reg_971_pp0_iter5_reg <= n_1_reg_971_pp0_iter4_reg;
        n_1_reg_971_pp0_iter6_reg <= n_1_reg_971_pp0_iter5_reg;
        n_1_reg_971_pp0_iter7_reg <= n_1_reg_971_pp0_iter6_reg;
        trunc_ln103_1_reg_950 <= {{t_2_fu_456_p3[10:1]}};
        trunc_ln103_reg_945 <= trunc_ln103_fu_464_p1;
        trunc_ln105_reg_955 <= trunc_ln105_fu_478_p1;
        trunc_ln189_reg_1234_pp0_iter15_reg <= trunc_ln189_reg_1234;
        trunc_ln189_reg_1234_pp0_iter16_reg <= trunc_ln189_reg_1234_pp0_iter15_reg;
        trunc_ln189_reg_1234_pp0_iter17_reg <= trunc_ln189_reg_1234_pp0_iter16_reg;
        trunc_ln189_reg_1234_pp0_iter18_reg <= trunc_ln189_reg_1234_pp0_iter17_reg;
        u_reg_1165_pp0_iter10_reg <= u_reg_1165;
        u_reg_1165_pp0_iter11_reg <= u_reg_1165_pp0_iter10_reg;
        u_reg_1165_pp0_iter12_reg <= u_reg_1165_pp0_iter11_reg;
        u_reg_1165_pp0_iter13_reg <= u_reg_1165_pp0_iter12_reg;
        x_im_reg_1193_pp0_iter10_reg <= x_im_reg_1193;
        x_im_reg_1193_pp0_iter11_reg <= x_im_reg_1193_pp0_iter10_reg;
        x_im_reg_1193_pp0_iter12_reg <= x_im_reg_1193_pp0_iter11_reg;
        x_im_reg_1193_pp0_iter13_reg <= x_im_reg_1193_pp0_iter12_reg;
        x_im_reg_1193_pp0_iter14_reg <= x_im_reg_1193_pp0_iter13_reg;
        x_im_reg_1193_pp0_iter15_reg <= x_im_reg_1193_pp0_iter14_reg;
        x_im_reg_1193_pp0_iter16_reg <= x_im_reg_1193_pp0_iter15_reg;
        x_re_reg_1187_pp0_iter10_reg <= x_re_reg_1187;
        x_re_reg_1187_pp0_iter11_reg <= x_re_reg_1187_pp0_iter10_reg;
        x_re_reg_1187_pp0_iter12_reg <= x_re_reg_1187_pp0_iter11_reg;
        x_re_reg_1187_pp0_iter13_reg <= x_re_reg_1187_pp0_iter12_reg;
        x_re_reg_1187_pp0_iter14_reg <= x_re_reg_1187_pp0_iter13_reg;
        x_re_reg_1187_pp0_iter15_reg <= x_re_reg_1187_pp0_iter14_reg;
        x_re_reg_1187_pp0_iter16_reg <= x_re_reg_1187_pp0_iter15_reg;
        zext_ln138_reg_1083_pp0_iter10_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter9_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter11_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter10_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter12_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter11_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter13_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter12_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter14_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter13_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter15_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter14_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter16_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter15_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter17_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter16_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter18_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter17_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter19_reg[9 : 0] <= zext_ln138_reg_1083_pp0_iter18_reg[9 : 0];
        zext_ln138_reg_1083_pp0_iter9_reg[9 : 0] <= zext_ln138_reg_1083[9 : 0];
        zext_ln139_reg_1093_pp0_iter10_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter9_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter11_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter10_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter12_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter11_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter13_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter12_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter14_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter13_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter15_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter14_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter16_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter15_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter17_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter16_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter18_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter17_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter19_reg[9 : 0] <= zext_ln139_reg_1093_pp0_iter18_reg[9 : 0];
        zext_ln139_reg_1093_pp0_iter9_reg[9 : 0] <= zext_ln139_reg_1093[9 : 0];
        zext_ln151_reg_1063_pp0_iter10_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter9_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter11_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter10_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter12_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter11_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter13_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter12_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter14_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter13_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter15_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter14_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter16_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter15_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter17_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter16_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter18_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter17_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter19_reg[9 : 0] <= zext_ln151_reg_1063_pp0_iter18_reg[9 : 0];
        zext_ln151_reg_1063_pp0_iter9_reg[9 : 0] <= zext_ln151_reg_1063[9 : 0];
        zext_ln152_reg_1073_pp0_iter10_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter9_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter11_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter10_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter12_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter11_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter13_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter12_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter14_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter13_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter15_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter14_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter16_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter15_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter17_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter16_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter18_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter17_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter19_reg[9 : 0] <= zext_ln152_reg_1073_pp0_iter18_reg[9 : 0];
        zext_ln152_reg_1073_pp0_iter9_reg[9 : 0] <= zext_ln152_reg_1073[9 : 0];
        zext_ln171_reg_1172_pp0_iter10_reg[15 : 0] <= zext_ln171_reg_1172[15 : 0];
        zext_ln171_reg_1172_pp0_iter11_reg[15 : 0] <= zext_ln171_reg_1172_pp0_iter10_reg[15 : 0];
        zext_ln171_reg_1172_pp0_iter12_reg[15 : 0] <= zext_ln171_reg_1172_pp0_iter11_reg[15 : 0];
        zext_ln171_reg_1172_pp0_iter13_reg[15 : 0] <= zext_ln171_reg_1172_pp0_iter12_reg[15 : 0];
        zext_ln173_1_reg_1177_pp0_iter10_reg[15 : 0] <= zext_ln173_1_reg_1177[15 : 0];
        zext_ln173_1_reg_1177_pp0_iter11_reg[15 : 0] <= zext_ln173_1_reg_1177_pp0_iter10_reg[15 : 0];
        zext_ln173_1_reg_1177_pp0_iter12_reg[15 : 0] <= zext_ln173_1_reg_1177_pp0_iter11_reg[15 : 0];
        zext_ln173_1_reg_1177_pp0_iter13_reg[15 : 0] <= zext_ln173_1_reg_1177_pp0_iter12_reg[15 : 0];
        zext_ln173_reg_1053_pp0_iter10_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter9_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter11_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter10_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter12_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter11_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter13_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter12_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter14_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter13_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter15_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter14_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter16_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter15_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter17_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter16_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter18_reg[9 : 0] <= zext_ln173_reg_1053_pp0_iter17_reg[9 : 0];
        zext_ln173_reg_1053_pp0_iter9_reg[9 : 0] <= zext_ln173_reg_1053[9 : 0];
        zext_ln184_reg_1043_pp0_iter10_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter9_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter11_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter10_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter12_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter11_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter13_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter12_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter14_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter13_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter15_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter14_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter16_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter15_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter17_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter16_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter18_reg[9 : 0] <= zext_ln184_reg_1043_pp0_iter17_reg[9 : 0];
        zext_ln184_reg_1043_pp0_iter9_reg[9 : 0] <= zext_ln184_reg_1043[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add3_reg_1251 <= grp_fu_376_p2;
        sub1_reg_1261 <= grp_fu_384_p2;
        sub_reg_1256 <= grp_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter13_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln177_reg_1229 <= add_ln177_fu_859_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln177_reg_1229_pp0_iter14_reg <= add_ln177_reg_1229;
        add_ln177_reg_1229_pp0_iter15_reg <= add_ln177_reg_1229_pp0_iter14_reg;
        add_ln177_reg_1229_pp0_iter16_reg <= add_ln177_reg_1229_pp0_iter15_reg;
        add_ln177_reg_1229_pp0_iter17_reg <= add_ln177_reg_1229_pp0_iter16_reg;
        add_ln194_reg_1219_pp0_iter14_reg <= add_ln194_reg_1219;
        add_ln194_reg_1219_pp0_iter15_reg <= add_ln194_reg_1219_pp0_iter14_reg;
        add_ln194_reg_1219_pp0_iter16_reg <= add_ln194_reg_1219_pp0_iter15_reg;
        add_ln194_reg_1219_pp0_iter17_reg <= add_ln194_reg_1219_pp0_iter16_reg;
        add_ln198_reg_1224_pp0_iter14_reg <= add_ln198_reg_1224;
        add_ln198_reg_1224_pp0_iter15_reg <= add_ln198_reg_1224_pp0_iter14_reg;
        add_ln198_reg_1224_pp0_iter16_reg <= add_ln198_reg_1224_pp0_iter15_reg;
        add_ln198_reg_1224_pp0_iter17_reg <= add_ln198_reg_1224_pp0_iter16_reg;
        add_ln198_reg_1224_pp0_iter18_reg <= add_ln198_reg_1224_pp0_iter17_reg;
        gm_im_2_reg_1103_pp0_iter10_reg <= gm_im_2_reg_1103_pp0_iter9_reg;
        gm_im_2_reg_1103_pp0_iter11_reg <= gm_im_2_reg_1103_pp0_iter10_reg;
        gm_im_2_reg_1103_pp0_iter9_reg <= gm_im_2_reg_1103;
        sub1_reg_1261_pp0_iter19_reg <= sub1_reg_1261;
        v_reg_1126_pp0_iter10_reg <= v_reg_1126_pp0_iter9_reg;
        v_reg_1126_pp0_iter11_reg <= v_reg_1126_pp0_iter10_reg;
        v_reg_1126_pp0_iter12_reg <= v_reg_1126_pp0_iter11_reg;
        v_reg_1126_pp0_iter9_reg <= v_reg_1126;
        zext_ln135_reg_1132_pp0_iter10_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter9_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter11_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter10_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter12_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter11_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter13_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter12_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter14_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter13_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter15_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter14_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter16_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter15_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter17_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter16_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter18_reg[9 : 0] <= zext_ln135_reg_1132_pp0_iter17_reg[9 : 0];
        zext_ln135_reg_1132_pp0_iter9_reg[9 : 0] <= zext_ln135_reg_1132[9 : 0];
        zext_ln172_reg_1108_pp0_iter10_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter9_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter11_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter10_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter12_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter11_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter13_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter12_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter14_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter13_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter15_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter14_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter16_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter15_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter17_reg[9 : 0] <= zext_ln172_reg_1108_pp0_iter16_reg[9 : 0];
        zext_ln172_reg_1108_pp0_iter9_reg[9 : 0] <= zext_ln172_reg_1108[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter13_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln194_reg_1219 <= add_ln194_fu_786_p2;
        add_ln198_reg_1224 <= add_ln198_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gm_im_2_reg_1103 <= gm_im_2_fu_630_p3;
        zext_ln172_reg_1108[9 : 0] <= zext_ln172_fu_638_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gm_im_tab_load_reg_1023 <= gm_im_tab_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gm_re_reg_1033 <= gm_re_tab_q0;
        gm_reg_1038 <= gm_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_gm_reg_985 <= grp_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_1017 <= grp_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_fu_508_p2 == 1'd0) & (mode_read_read_fu_114_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln168_reg_981 <= icmp_ln168_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln118_reg_977_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_im1_2_reg_1245 <= grp_complex_mul_fu_364_ap_return_1;
        tmp_re1_2_reg_1239 <= grp_complex_mul_fu_364_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_im1_reg_1266 <= grp_complex_mul_fu_364_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_im_reg_1159 <= tmp_im_fu_679_p1;
        tmp_re_reg_1153 <= tmp_re_fu_675_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter13_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln189_reg_1234 <= trunc_ln189_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        u_reg_1165 <= u_fu_683_p1;
        zext_ln171_reg_1172[15 : 0] <= zext_ln171_fu_687_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        v_reg_1126 <= v_fu_651_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_im_reg_1193 <= x_im_fu_733_p1;
        x_re_reg_1187 <= x_re_fu_727_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        zext_ln128_reg_1002[9 : 0] <= zext_ln128_fu_551_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        zext_ln135_reg_1132[9 : 0] <= zext_ln135_fu_660_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln138_reg_1083[9 : 0] <= zext_ln138_fu_601_p1[9 : 0];
        zext_ln139_reg_1093[9 : 0] <= zext_ln139_fu_612_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln151_reg_1063[9 : 0] <= zext_ln151_fu_585_p1[9 : 0];
        zext_ln152_reg_1073[9 : 0] <= zext_ln152_fu_596_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln173_1_reg_1177[15 : 0] <= zext_ln173_1_fu_691_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln173_reg_1053[9 : 0] <= zext_ln173_fu_580_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln184_reg_1043[9 : 0] <= zext_ln184_fu_575_p1[9 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        GMb_ce0 = 1'b1;
    end else begin
        GMb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & ((icmp_ln118_reg_977 == 1'd1) | ((icmp_ln168_reg_981 == 1'd1) & (mode == 1'd1))))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & ((icmp_ln118_reg_977_pp0_iter19_reg == 1'd1) | ((icmp_ln168_reg_981_pp0_iter19_reg == 1'd1) & (mode == 1'd1))))) begin
        ap_condition_exit_pp0_iter20_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter20_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter20_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter19_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to19 = 1'b1;
    end else begin
        ap_idle_pp0_0to19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to20 = 1'b1;
    end else begin
        ap_idle_pp0_1to20 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_n_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_n_1 = n_fu_104;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gm_im_tab_address0 = zext_ln128_reg_1002;
    end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        gm_im_tab_address0 = zext_ln124_fu_541_p1;
    end else begin
        gm_im_tab_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        gm_im_tab_ce0 = 1'b1;
    end else begin
        gm_im_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gm_re_tab_ce0 = 1'b1;
    end else begin
        gm_re_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp166)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp187)))) begin
        grp_complex_mul_fu_364_ap_ce = 1'b1;
    end else begin
        grp_complex_mul_fu_364_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op226_call_state25 == 1'b1))) begin
        grp_complex_mul_fu_364_x_im = x_im_2_reg_1214;
    end else if (((ap_predicate_op166_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_complex_mul_fu_364_x_im = tmp_im_3_fu_670_p1;
    end else begin
        grp_complex_mul_fu_364_x_im = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op226_call_state25 == 1'b1))) begin
        grp_complex_mul_fu_364_x_re = x_re_2_reg_1209;
    end else if (((ap_predicate_op166_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_complex_mul_fu_364_x_re = tmp_re_3_fu_665_p1;
    end else begin
        grp_complex_mul_fu_364_x_re = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op226_call_state25 == 1'b1))) begin
        grp_complex_mul_fu_364_y_im = gm_im_2_reg_1103_pp0_iter11_reg;
    end else if (((ap_predicate_op166_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_complex_mul_fu_364_y_im = gm_im_2_fu_630_p3;
    end else begin
        grp_complex_mul_fu_364_y_im = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op226_call_state25 == 1'b1))) begin
        grp_complex_mul_fu_364_y_re = gm_re_reg_1033_pp0_iter11_reg;
    end else if (((ap_predicate_op166_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_complex_mul_fu_364_y_re = gm_re_reg_1033;
    end else begin
        grp_complex_mul_fu_364_y_re = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_372_p0 = x_re_reg_1187_pp0_iter16_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_372_p0 = x_re_fu_727_p1;
    end else begin
        grp_fu_372_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_372_p1 = tmp_re1_2_reg_1239;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_372_p1 = tmp_re_reg_1153;
    end else begin
        grp_fu_372_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_376_p0 = x_im_reg_1193_pp0_iter16_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_376_p0 = x_im_fu_733_p1;
    end else begin
        grp_fu_376_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_376_p1 = tmp_im1_2_reg_1245;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_376_p1 = tmp_im_reg_1159;
    end else begin
        grp_fu_376_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_380_p0 = x_re_reg_1187_pp0_iter16_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_380_p0 = x_re_fu_727_p1;
    end else begin
        grp_fu_380_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_380_p1 = tmp_re1_2_reg_1239;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_380_p1 = tmp_re_reg_1153;
    end else begin
        grp_fu_380_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_384_p0 = x_im_reg_1193_pp0_iter16_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_384_p0 = x_im_fu_733_p1;
    end else begin
        grp_fu_384_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_384_p1 = tmp_im1_2_reg_1245;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_384_p1 = tmp_im_reg_1159;
    end else begin
        grp_fu_384_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp154)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp176)))) begin
        grp_monty_mul_fu_358_ap_ce = 1'b1;
    end else begin
        grp_monty_mul_fu_358_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op183_call_state19 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_monty_mul_fu_358_x = tmp1_5_fu_720_p2;
    end else if (((ap_predicate_op154_call_state18 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_monty_mul_fu_358_x = zext_ln184_1_fu_646_p1;
    end else begin
        grp_monty_mul_fu_358_x = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        iGMb_ce0 = 1'b1;
    end else begin
        iGMb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            in_buf_address0 = zext_ln172_fu_638_p1;
        end else if ((1'b1 == ap_condition_1824)) begin
            in_buf_address0 = zext_ln139_fu_612_p1;
        end else if ((1'b1 == ap_condition_1820)) begin
            in_buf_address0 = zext_ln152_fu_596_p1;
        end else if ((1'b1 == ap_condition_1816)) begin
            in_buf_address0 = zext_ln173_fu_580_p1;
        end else if ((1'b1 == ap_condition_1811)) begin
            in_buf_address0 = zext_ln184_fu_575_p1;
        end else begin
            in_buf_address0 = 'bx;
        end
    end else begin
        in_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            in_buf_address1 = zext_ln135_fu_660_p1;
        end else if ((1'b1 == ap_condition_1824)) begin
            in_buf_address1 = zext_ln138_fu_601_p1;
        end else if ((1'b1 == ap_condition_1820)) begin
            in_buf_address1 = zext_ln151_fu_585_p1;
        end else begin
            in_buf_address1 = 'bx;
        end
    end else begin
        in_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_buf_ce0 = 1'b1;
    end else begin
        in_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_buf_ce1 = 1'b1;
    end else begin
        in_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (mode == 1'd1))) begin
        if ((1'b1 == ap_condition_1844)) begin
            stage0_address0 = zext_ln139_reg_1093_pp0_iter19_reg;
        end else if ((1'b1 == ap_condition_1840)) begin
            stage0_address0 = zext_ln152_reg_1073_pp0_iter19_reg;
        end else if ((1'b1 == ap_condition_1836)) begin
            stage0_address0 = zext_ln138_reg_1083_pp0_iter19_reg;
        end else if ((1'b1 == ap_condition_1832)) begin
            stage0_address0 = zext_ln151_reg_1063_pp0_iter19_reg;
        end else begin
            stage0_address0 = 'bx;
        end
    end else begin
        stage0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1880)) begin
            stage0_address1 = stage0_addr_1_gep_fu_323_p3;
        end else if ((1'b1 == ap_condition_1876)) begin
            stage0_address1 = zext_ln135_reg_1132_pp0_iter18_reg;
        end else if ((1'b1 == ap_condition_1872)) begin
            stage0_address1 = zext_ln173_reg_1053_pp0_iter18_reg;
        end else if ((1'b1 == ap_condition_1867)) begin
            stage0_address1 = zext_ln184_reg_1043_pp0_iter18_reg;
        end else if ((1'b1 == ap_condition_1862)) begin
            stage0_address1 = stage0_addr_gep_fu_295_p3;
        end else if ((1'b1 == ap_condition_1858)) begin
            stage0_address1 = stage0_addr_4_gep_fu_288_p3;
        end else if ((1'b1 == ap_condition_1854)) begin
            stage0_address1 = stage0_addr_8_gep_fu_281_p3;
        end else if ((1'b1 == ap_condition_1849)) begin
            stage0_address1 = zext_ln172_reg_1108_pp0_iter17_reg;
        end else begin
            stage0_address1 = 'bx;
        end
    end else begin
        stage0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        stage0_ce0 = 1'b1;
    end else begin
        stage0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        stage0_ce1 = 1'b1;
    end else begin
        stage0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (mode == 1'd1))) begin
        if ((1'b1 == ap_condition_1844)) begin
            stage0_d0 = bitcast_ln157_fu_915_p1;
        end else if ((1'b1 == ap_condition_1840)) begin
            stage0_d0 = bitcast_ln166_fu_911_p1;
        end else if ((1'b1 == ap_condition_1836)) begin
            stage0_d0 = bitcast_ln156_fu_906_p1;
        end else if ((1'b1 == ap_condition_1832)) begin
            stage0_d0 = bitcast_ln165_fu_902_p1;
        end else begin
            stage0_d0 = 'bx;
        end
    end else begin
        stage0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1880)) begin
            stage0_d1 = bitcast_ln142_fu_898_p1;
        end else if ((1'b1 == ap_condition_1876)) begin
            stage0_d1 = bitcast_ln163_fu_894_p1;
        end else if ((1'b1 == ap_condition_1872)) begin
            stage0_d1 = zext_ln189_fu_890_p1;
        end else if ((1'b1 == ap_condition_1867)) begin
            stage0_d1 = zext_ln198_fu_886_p1;
        end else if ((1'b1 == ap_condition_1862)) begin
            stage0_d1 = bitcast_ln141_fu_882_p1;
        end else if ((1'b1 == ap_condition_1858)) begin
            stage0_d1 = bitcast_ln162_fu_877_p1;
        end else if ((1'b1 == ap_condition_1854)) begin
            stage0_d1 = zext_ln177_fu_873_p1;
        end else if ((1'b1 == ap_condition_1849)) begin
            stage0_d1 = zext_ln194_fu_869_p1;
        end else begin
            stage0_d1 = 'bx;
        end
    end else begin
        stage0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        stage0_we0 = 8'd255;
    end else begin
        stage0_we0 = 8'd0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        stage0_we1 = 8'd255;
    end else if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        stage0_we1 = 8'd3;
    end else begin
        stage0_we1 = 8'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter20_stage0) & (ap_idle_pp0_0to19 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to20 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GMb_address0 = zext_ln128_fu_551_p1;

assign add_ln124_fu_537_p2 = ($signed(i_gm_reg_985) + $signed(hm_cast_reg_966));

assign add_ln128_fu_547_p2 = ($signed(i_gm_reg_985) + $signed(trunc_ln105_reg_955));

assign add_ln175_fu_824_p2 = ($signed(zext_ln173_1_reg_1177_pp0_iter13_reg) + $signed(17'd118783));

assign add_ln177_1_fu_847_p2 = (u_reg_1165_pp0_iter13_reg + v_reg_1126_pp0_iter12_reg);

assign add_ln177_fu_859_p2 = (select_ln177_fu_851_p3 + add_ln177_1_fu_847_p2);

assign add_ln192_fu_750_p2 = ($signed(zext_ln171_reg_1172_pp0_iter13_reg) + $signed(17'd118783));

assign add_ln194_1_fu_773_p2 = (u_reg_1165_pp0_iter13_reg + trunc_ln192_fu_746_p1);

assign add_ln194_fu_786_p2 = (select_ln194_fu_778_p3 + add_ln194_1_fu_773_p2);

assign add_ln198_fu_818_p2 = (select_ln198_fu_810_p3 + trunc_ln197_fu_806_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp176 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp187 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp154 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp166 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call10 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1811 = ((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1816 = ((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1820 = ((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1824 = ((icmp_ln118_reg_977_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1828 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln118_fu_508_p2 == 1'd0) & (mode_read_read_fu_114_p2 == 1'd0)) | ((icmp_ln168_fu_526_p2 == 1'd0) & (icmp_ln118_fu_508_p2 == 1'd0))));
end

always @ (*) begin
    ap_condition_1832 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1836 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1840 = ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1844 = ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1849 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1854 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1858 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1862 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_1867 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1872 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1876 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd0) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1880 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (inverse == 1'd1) & (mode == 1'd1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_297 = (ap_predicate_op297_store_state38 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_300 = (ap_predicate_op300_store_state38 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_304 = (ap_predicate_op304_store_state38 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_310 = (ap_predicate_op310_store_state38 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_314 = (ap_predicate_op314_store_state39 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_318 = (ap_predicate_op318_store_state39 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_322 = (ap_predicate_op322_store_state39 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_325 = (ap_predicate_op325_store_state39 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_329 = (ap_predicate_op329_store_state40 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_335 = (ap_predicate_op335_store_state40 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_338 = (ap_predicate_op338_store_state41 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_342 = (ap_predicate_op342_store_state41 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state38_pp0_iter18_stage1 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state39_pp0_iter19_stage0 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state40_pp0_iter19_stage1 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state41_pp0_iter20_stage0 = ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op154_call_state18 = ((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_call_state18 = ((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op183_call_state19 = ((icmp_ln118_reg_977_pp0_iter8_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op226_call_state25 = ((icmp_ln118_reg_977_pp0_iter11_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op297_store_state38 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op300_store_state38 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op304_store_state38 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op310_store_state38 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op314_store_state39 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op318_store_state39 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd0));
end

always @ (*) begin
    ap_predicate_op322_store_state39 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op325_store_state39 = ((icmp_ln118_reg_977_pp0_iter18_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op329_store_state40 = ((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op335_store_state40 = ((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op338_store_state41 = ((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (inverse == 1'd0) & (mode == 1'd1));
end

always @ (*) begin
    ap_predicate_op342_store_state41 = ((icmp_ln118_reg_977_pp0_iter19_reg == 1'd0) & (inverse == 1'd1) & (mode == 1'd1));
end

assign bitcast_ln125_fu_617_p1 = gm_im_tab_load_reg_1023;

assign bitcast_ln141_fu_882_p1 = add_reg_1199_pp0_iter18_reg;

assign bitcast_ln142_fu_898_p1 = add1_reg_1204_pp0_iter18_reg;

assign bitcast_ln156_fu_906_p1 = grp_complex_mul_fu_364_ap_return_0;

assign bitcast_ln157_fu_915_p1 = tmp_im1_reg_1266;

assign bitcast_ln162_fu_877_p1 = grp_fu_372_p2;

assign bitcast_ln163_fu_894_p1 = add3_reg_1251;

assign bitcast_ln165_fu_902_p1 = sub_reg_1256;

assign bitcast_ln166_fu_911_p1 = sub1_reg_1261_pp0_iter19_reg;

assign gm_fu_568_p3 = ((inverse[0:0] == 1'b1) ? iGMb_q0 : GMb_q0);

assign gm_im_2_fu_630_p3 = ((inverse[0:0] == 1'b1) ? gm_im_fu_626_p1 : gm_im_tab_q0);

assign gm_im_fu_626_p1 = xor_ln125_fu_620_p2;

assign gm_re_tab_address0 = zext_ln124_1_fu_563_p1;

assign grp_fu_388_p0 = grp_fu_919_p3;

assign grp_fu_388_p2 = ($signed(grp_fu_388_p0) + $signed(trunc_ln103_1_reg_950));

assign grp_fu_392_p0 = grp_fu_919_p3;

assign grp_fu_392_p2 = ($signed(grp_fu_392_p0) + $signed(trunc_ln103_reg_945));

assign grp_fu_520_p1 = ((inverse[0:0] == 1'b1) ? t_1_fu_436_p3 : trunc_ln103_1_fu_468_p4);

assign iGMb_address0 = zext_ln124_fu_541_p1;

assign icmp_ln118_fu_508_p2 = ((ap_sig_allocacmp_n_1 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_526_p2 = ((ap_sig_allocacmp_n_1 == 10'd255) ? 1'b1 : 1'b0);

assign in_m_cast_fu_404_p1 = in_m;

assign index_const_fu_482_p3 = ((inverse[0:0] == 1'b1) ? t_1_fu_436_p3 : trunc_ln103_1_fu_468_p4);

assign m_1_fu_428_p3 = ((mode[0:0] == 1'b1) ? m_fu_422_p2 : in_t);

assign m_2_fu_448_p3 = ((inverse[0:0] == 1'b1) ? m_1_fu_428_p3 : in_m_cast_fu_404_p1);

assign m_fu_422_p2 = in_t << 11'd1;

assign mode_read_read_fu_114_p2 = mode;

assign n_2_fu_514_p2 = (ap_sig_allocacmp_n_1 + 10'd1);

assign select_ln171_fu_556_p3 = ((inverse[0:0] == 1'b1) ? add_ln124_fu_537_p2 : add_ln128_fu_547_p2);

assign select_ln177_fu_851_p3 = ((tmp_fu_839_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln180_fu_712_p3 = ((tmp_1_fu_704_p3[0:0] == 1'b1) ? 18'd12289 : 18'd0);

assign select_ln194_fu_778_p3 = ((tmp_2_fu_765_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln198_fu_810_p3 = ((tmp_3_fu_798_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign sext_ln117_fu_700_p1 = tmp1_1_fu_694_p2;

assign sext_ln175_fu_829_p1 = $signed(add_ln175_fu_824_p2);

assign sext_ln187_fu_742_p0 = grp_monty_mul_fu_358_ap_return;

assign sext_ln187_fu_742_p1 = sext_ln187_fu_742_p0;

assign sext_ln192_fu_755_p1 = $signed(add_ln192_fu_750_p2);

assign stage0_addr_1_gep_fu_323_p3 = zext_ln135_reg_1132_pp0_iter18_reg;

assign stage0_addr_4_gep_fu_288_p3 = zext_ln172_reg_1108_pp0_iter17_reg;

assign stage0_addr_8_gep_fu_281_p3 = zext_ln172_reg_1108_pp0_iter17_reg;

assign stage0_addr_gep_fu_295_p3 = zext_ln172_reg_1108_pp0_iter17_reg;

assign t_1_fu_436_p3 = ((mode[0:0] == 1'b1) ? zext_ln96_fu_418_p1 : in_m);

assign t_2_fu_456_p3 = ((inverse[0:0] == 1'b1) ? zext_ln90_fu_444_p1 : in_t);

assign t_fu_408_p4 = {{in_m[9:1]}};

assign tmp1_1_fu_694_p2 = (zext_ln171_fu_687_p1 - zext_ln173_1_fu_691_p1);

assign tmp1_3_fu_759_p2 = ($signed(sext_ln192_fu_755_p1) + $signed(sext_ln187_fu_742_p1));

assign tmp1_4_fu_792_p2 = ($signed(zext_ln171_1_fu_739_p1) - $signed(sext_ln187_fu_742_p1));

assign tmp1_5_fu_720_p2 = ($signed(select_ln180_fu_712_p3) + $signed(sext_ln117_fu_700_p1));

assign tmp1_fu_833_p2 = ($signed(sext_ln175_fu_829_p1) + $signed(zext_ln171_1_fu_739_p1));

assign tmp_1_fu_704_p3 = tmp1_1_fu_694_p2[32'd16];

assign tmp_2_fu_765_p3 = tmp1_3_fu_759_p2[32'd17];

assign tmp_3_fu_798_p3 = tmp1_4_fu_792_p2[32'd17];

assign tmp_fu_839_p3 = tmp1_fu_833_p2[32'd17];

assign tmp_im_3_fu_670_p1 = in_buf_q0;

assign tmp_im_fu_679_p1 = in_buf_q0;

assign tmp_re_3_fu_665_p1 = in_buf_q1;

assign tmp_re_fu_675_p1 = in_buf_q1;

assign trunc_ln103_1_fu_468_p4 = {{t_2_fu_456_p3[10:1]}};

assign trunc_ln103_fu_464_p1 = t_2_fu_456_p3[9:0];

assign trunc_ln105_fu_478_p1 = m_2_fu_448_p3[9:0];

assign trunc_ln189_fu_865_p1 = grp_monty_mul_fu_358_ap_return[15:0];

assign trunc_ln192_fu_746_p0 = grp_monty_mul_fu_358_ap_return;

assign trunc_ln192_fu_746_p1 = trunc_ln192_fu_746_p0[15:0];

assign trunc_ln197_fu_806_p1 = tmp1_4_fu_792_p2[15:0];

assign u_fu_683_p1 = in_buf_q0[15:0];

assign v_fu_651_p1 = in_buf_q0[15:0];

assign w_2_fu_642_p1 = in_buf_q0[15:0];

assign x_im_fu_733_p1 = in_buf_q1;

assign x_re_fu_727_p1 = in_buf_q0;

assign xor_ln125_fu_620_p2 = (bitcast_ln125_fu_617_p1 ^ 64'd9223372036854775808);

assign xor_ln135_fu_655_p2 = (i_reg_1017 ^ 10'd512);

assign xor_ln139_fu_606_p2 = (grp_fu_392_p2 ^ 10'd512);

assign xor_ln152_fu_590_p2 = (grp_fu_388_p2 ^ 10'd512);

assign zext_ln124_1_fu_563_p1 = select_ln171_fu_556_p3;

assign zext_ln124_fu_541_p1 = add_ln124_fu_537_p2;

assign zext_ln128_fu_551_p1 = add_ln128_fu_547_p2;

assign zext_ln135_fu_660_p1 = xor_ln135_fu_655_p2;

assign zext_ln138_fu_601_p1 = grp_fu_392_p2;

assign zext_ln139_fu_612_p1 = xor_ln139_fu_606_p2;

assign zext_ln151_fu_585_p1 = grp_fu_388_p2;

assign zext_ln152_fu_596_p1 = xor_ln152_fu_590_p2;

assign zext_ln171_1_fu_739_p1 = u_reg_1165_pp0_iter13_reg;

assign zext_ln171_fu_687_p1 = u_fu_683_p1;

assign zext_ln172_fu_638_p1 = $unsigned(i_reg_1017);

assign zext_ln173_1_fu_691_p1 = v_reg_1126;

assign zext_ln173_fu_580_p1 = grp_fu_392_p2;

assign zext_ln177_fu_873_p1 = add_ln177_reg_1229_pp0_iter17_reg;

assign zext_ln184_1_fu_646_p1 = w_2_fu_642_p1;

assign zext_ln184_fu_575_p1 = grp_fu_388_p2;

assign zext_ln189_fu_890_p1 = trunc_ln189_reg_1234_pp0_iter18_reg;

assign zext_ln194_fu_869_p1 = add_ln194_reg_1219_pp0_iter17_reg;

assign zext_ln198_fu_886_p1 = add_ln198_reg_1224_pp0_iter18_reg;

assign zext_ln90_fu_444_p1 = t_1_fu_436_p3;

assign zext_ln96_fu_418_p1 = t_fu_408_p4;

always @ (posedge ap_clk) begin
    zext_ln128_reg_1002[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln184_reg_1043_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln173_reg_1053_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln151_reg_1063_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln152_reg_1073_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln138_reg_1083_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln139_reg_1093_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln172_reg_1108_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln135_reg_1132_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln171_reg_1172[16] <= 1'b0;
    zext_ln171_reg_1172_pp0_iter10_reg[16] <= 1'b0;
    zext_ln171_reg_1172_pp0_iter11_reg[16] <= 1'b0;
    zext_ln171_reg_1172_pp0_iter12_reg[16] <= 1'b0;
    zext_ln171_reg_1172_pp0_iter13_reg[16] <= 1'b0;
    zext_ln173_1_reg_1177[16] <= 1'b0;
    zext_ln173_1_reg_1177_pp0_iter10_reg[16] <= 1'b0;
    zext_ln173_1_reg_1177_pp0_iter11_reg[16] <= 1'b0;
    zext_ln173_1_reg_1177_pp0_iter12_reg[16] <= 1'b0;
    zext_ln173_1_reg_1177_pp0_iter13_reg[16] <= 1'b0;
end

endmodule //fiFFNTT_PE_1
