-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fiFFNTT_PE_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_buf_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_buf_ce0 : OUT STD_LOGIC;
    in_buf_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_buf_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_buf_ce1 : OUT STD_LOGIC;
    in_buf_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    stage0_ce0 : OUT STD_LOGIC;
    stage0_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    stage0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    stage0_ce1 : OUT STD_LOGIC;
    stage0_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    stage0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    in_t : IN STD_LOGIC_VECTOR (10 downto 0);
    in_m : IN STD_LOGIC_VECTOR (9 downto 0);
    mode : IN STD_LOGIC_VECTOR (0 downto 0);
    inverse : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of fiFFNTT_PE_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_FF : STD_LOGIC_VECTOR (9 downto 0) := "0011111111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_3001 : STD_LOGIC_VECTOR (17 downto 0) := "000011000000000001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv17_1CFFF : STD_LOGIC_VECTOR (16 downto 0) := "11100111111111111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_CFFF : STD_LOGIC_VECTOR (15 downto 0) := "1100111111111111";
    constant ap_const_lv16_3001 : STD_LOGIC_VECTOR (15 downto 0) := "0011000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state40_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln168_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gm_im_tab_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal gm_im_tab_ce0 : STD_LOGIC;
    signal gm_im_tab_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iGMb_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iGMb_ce0 : STD_LOGIC;
    signal iGMb_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal GMb_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal GMb_ce0 : STD_LOGIC;
    signal GMb_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal gm_re_tab_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal gm_re_tab_ce0 : STD_LOGIC;
    signal gm_re_tab_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal mode_read_read_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln103_fu_464_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln103_reg_945 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln103_1_fu_468_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln103_1_reg_950 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln105_fu_478_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln105_reg_955 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_const_fu_482_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_const_reg_960 : STD_LOGIC_VECTOR (9 downto 0);
    signal hm_cast_reg_966 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal n_1_reg_971_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln118_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_977_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_981_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_520_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_gm_reg_985 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal zext_ln128_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln128_reg_1002 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_919_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_1017 : STD_LOGIC_VECTOR (9 downto 0);
    signal gm_im_tab_load_reg_1023 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_1033 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_1033_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_1033_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_1033_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_fu_568_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal gm_reg_1038 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln184_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1043_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1053_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_reg_1063_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_reg_1073_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_reg_1083_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_reg_1093_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_2_fu_630_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_2_reg_1103 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_2_reg_1103_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_2_reg_1103_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_2_reg_1103_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_reg_1108_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_1_fu_646_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal v_fu_651_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal v_reg_1126 : STD_LOGIC_VECTOR (15 downto 0);
    signal v_reg_1126_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal v_reg_1126_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal v_reg_1126_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal v_reg_1126_pp0_iter12_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln135_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_reg_1132_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_3_fu_665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_3_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_reg_1153 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_reg_1159 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal u_reg_1165 : STD_LOGIC_VECTOR (15 downto 0);
    signal u_reg_1165_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal u_reg_1165_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal u_reg_1165_pp0_iter12_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal u_reg_1165_pp0_iter13_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln171_fu_687_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_reg_1172 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_reg_1172_pp0_iter10_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_reg_1172_pp0_iter11_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_reg_1172_pp0_iter12_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln171_reg_1172_pp0_iter13_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_fu_691_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_reg_1177 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_reg_1177_pp0_iter10_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_reg_1177_pp0_iter11_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_reg_1177_pp0_iter12_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_1_reg_1177_pp0_iter13_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_5_fu_720_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_re_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1187_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1193_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_372_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1199_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_376_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204 : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1204_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_2_reg_1209 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_384_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_2_reg_1214 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln194_fu_786_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_reg_1219 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_reg_1219_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_reg_1219_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_reg_1219_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_reg_1219_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_fu_818_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln198_reg_1224_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_fu_859_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_reg_1229 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_reg_1229_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_reg_1229_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_reg_1229_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_reg_1229_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_fu_865_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_reg_1234 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_reg_1234_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_reg_1234_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_reg_1234_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln189_reg_1234_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_re1_2_reg_1239 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im1_2_reg_1245 : STD_LOGIC_VECTOR (63 downto 0);
    signal add3_reg_1251 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_reg_1256 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub1_reg_1261 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub1_reg_1261_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im1_reg_1266 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_monty_mul_fu_358_x : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_monty_mul_fu_358_ap_return : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_monty_mul_fu_358_ap_ce : STD_LOGIC;
    signal ap_predicate_op154_call_state18 : BOOLEAN;
    signal ap_predicate_op183_call_state19 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1_ignore_call6 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2_ignore_call6 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3_ignore_call6 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call6 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5_ignore_call6 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6_ignore_call6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7_ignore_call6 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8_ignore_call6 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9_ignore_call6 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10_ignore_call6 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11_ignore_call6 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12_ignore_call6 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter13_ignore_call6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter14_ignore_call6 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter15_ignore_call6 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter16_ignore_call6 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter17_ignore_call6 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter18_ignore_call6 : BOOLEAN;
    signal ap_block_state40_pp0_stage1_iter19_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp154 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call6 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call6 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4_ignore_call6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call6 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6_ignore_call6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7_ignore_call6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8_ignore_call6 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9_ignore_call6 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10_ignore_call6 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11_ignore_call6 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12_ignore_call6 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13_ignore_call6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter14_ignore_call6 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter15_ignore_call6 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16_ignore_call6 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter17_ignore_call6 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter18_ignore_call6 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter19_ignore_call6 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter20_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp176 : BOOLEAN;
    signal grp_complex_mul_fu_364_x_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_x_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_y_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_y_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_364_ap_ce : STD_LOGIC;
    signal ap_predicate_op166_call_state18 : BOOLEAN;
    signal ap_predicate_op226_call_state25 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call10 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5_ignore_call10 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6_ignore_call10 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7_ignore_call10 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8_ignore_call10 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9_ignore_call10 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10_ignore_call10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11_ignore_call10 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12_ignore_call10 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter13_ignore_call10 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter14_ignore_call10 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter15_ignore_call10 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter16_ignore_call10 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter17_ignore_call10 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter18_ignore_call10 : BOOLEAN;
    signal ap_block_state40_pp0_stage1_iter19_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp166 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call10 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call10 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call10 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call10 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4_ignore_call10 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6_ignore_call10 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7_ignore_call10 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8_ignore_call10 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9_ignore_call10 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10_ignore_call10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11_ignore_call10 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12_ignore_call10 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13_ignore_call10 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter14_ignore_call10 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter15_ignore_call10 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16_ignore_call10 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter17_ignore_call10 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter18_ignore_call10 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter19_ignore_call10 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter20_ignore_call10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp187 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln124_fu_541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_1_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_addr_8_gep_fu_281_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal stage0_addr_4_gep_fu_288_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal stage0_addr_gep_fu_295_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal stage0_addr_1_gep_fu_323_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_fu_104 : STD_LOGIC_VECTOR (9 downto 0);
    signal n_2_fu_514_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln194_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln177_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln162_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln141_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln163_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln142_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln165_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln156_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln166_fu_911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln157_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_372_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_376_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_384_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_388_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_392_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_fu_408_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal m_fu_422_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln96_fu_418_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_1_fu_436_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal m_1_fu_428_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal in_m_cast_fu_404_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln90_fu_444_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_2_fu_456_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_2_fu_448_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_520_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln124_fu_537_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln128_fu_547_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln171_fu_556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_388_p2 : STD_LOGIC_VECTOR (9 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of grp_fu_388_p2 : signal is "no";
    signal grp_fu_392_p2 : STD_LOGIC_VECTOR (9 downto 0);
    attribute use_dsp48 of grp_fu_392_p2 : signal is "no";
    signal xor_ln152_fu_590_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln139_fu_606_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln125_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln125_fu_620_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_2_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln135_fu_655_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp1_1_fu_694_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln180_fu_712_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln117_fu_700_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln187_fu_742_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln192_fu_746_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln192_fu_750_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln192_fu_755_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln187_fu_742_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp1_3_fu_759_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln192_fu_746_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln194_fu_778_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln194_1_fu_773_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln171_1_fu_739_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp1_4_fu_792_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_3_fu_798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln198_fu_810_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln197_fu_806_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln175_fu_824_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln175_fu_829_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp1_fu_833_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_839_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln177_fu_851_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln177_1_fu_847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter20_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to19 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to20 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op297_store_state38 : BOOLEAN;
    signal ap_enable_operation_297 : BOOLEAN;
    signal ap_enable_state38_pp0_iter18_stage1 : BOOLEAN;
    signal ap_predicate_op300_store_state38 : BOOLEAN;
    signal ap_enable_operation_300 : BOOLEAN;
    signal ap_predicate_op304_store_state38 : BOOLEAN;
    signal ap_enable_operation_304 : BOOLEAN;
    signal ap_predicate_op310_store_state38 : BOOLEAN;
    signal ap_enable_operation_310 : BOOLEAN;
    signal ap_predicate_op314_store_state39 : BOOLEAN;
    signal ap_enable_operation_314 : BOOLEAN;
    signal ap_enable_state39_pp0_iter19_stage0 : BOOLEAN;
    signal ap_predicate_op318_store_state39 : BOOLEAN;
    signal ap_enable_operation_318 : BOOLEAN;
    signal ap_predicate_op322_store_state39 : BOOLEAN;
    signal ap_enable_operation_322 : BOOLEAN;
    signal ap_predicate_op325_store_state39 : BOOLEAN;
    signal ap_enable_operation_325 : BOOLEAN;
    signal ap_predicate_op329_store_state40 : BOOLEAN;
    signal ap_enable_operation_329 : BOOLEAN;
    signal ap_enable_state40_pp0_iter19_stage1 : BOOLEAN;
    signal ap_predicate_op335_store_state40 : BOOLEAN;
    signal ap_enable_operation_335 : BOOLEAN;
    signal ap_predicate_op338_store_state41 : BOOLEAN;
    signal ap_enable_operation_338 : BOOLEAN;
    signal ap_enable_state41_pp0_iter20_stage0 : BOOLEAN;
    signal ap_predicate_op342_store_state41 : BOOLEAN;
    signal ap_enable_operation_342 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1811 : BOOLEAN;
    signal ap_condition_1816 : BOOLEAN;
    signal ap_condition_1820 : BOOLEAN;
    signal ap_condition_1824 : BOOLEAN;
    signal ap_condition_1828 : BOOLEAN;
    signal ap_condition_1832 : BOOLEAN;
    signal ap_condition_1836 : BOOLEAN;
    signal ap_condition_1840 : BOOLEAN;
    signal ap_condition_1844 : BOOLEAN;
    signal ap_condition_1849 : BOOLEAN;
    signal ap_condition_1854 : BOOLEAN;
    signal ap_condition_1858 : BOOLEAN;
    signal ap_condition_1862 : BOOLEAN;
    signal ap_condition_1867 : BOOLEAN;
    signal ap_condition_1872 : BOOLEAN;
    signal ap_condition_1876 : BOOLEAN;
    signal ap_condition_1880 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component fiFFNTT_monty_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (17 downto 0);
        y : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (16 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component fiFFNTT_complex_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_re : IN STD_LOGIC_VECTOR (63 downto 0);
        x_im : IN STD_LOGIC_VECTOR (63 downto 0);
        y_re : IN STD_LOGIC_VECTOR (63 downto 0);
        y_im : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component fiFFNTT_dadd_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiFFNTT_dsub_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiFFNTT_udiv_10ns_10s_10_14_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component fiFFNTT_mac_muladd_10s_10s_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component fiFFNTT_PE_1_gm_im_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiFFNTT_PE_1_iGMb_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component fiFFNTT_PE_1_GMb_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component fiFFNTT_PE_1_gm_re_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fiFFNTT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    gm_im_tab_U : component fiFFNTT_PE_1_gm_im_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gm_im_tab_address0,
        ce0 => gm_im_tab_ce0,
        q0 => gm_im_tab_q0);

    iGMb_U : component fiFFNTT_PE_1_iGMb_ROM_AUTO_1R
    generic map (
        DataWidth => 14,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iGMb_address0,
        ce0 => iGMb_ce0,
        q0 => iGMb_q0);

    GMb_U : component fiFFNTT_PE_1_GMb_ROM_AUTO_1R
    generic map (
        DataWidth => 14,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => GMb_address0,
        ce0 => GMb_ce0,
        q0 => GMb_q0);

    gm_re_tab_U : component fiFFNTT_PE_1_gm_re_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gm_re_tab_address0,
        ce0 => gm_re_tab_ce0,
        q0 => gm_re_tab_q0);

    grp_monty_mul_fu_358 : component fiFFNTT_monty_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x => grp_monty_mul_fu_358_x,
        y => gm_reg_1038,
        ap_return => grp_monty_mul_fu_358_ap_return,
        ap_ce => grp_monty_mul_fu_358_ap_ce);

    grp_complex_mul_fu_364 : component fiFFNTT_complex_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_re => grp_complex_mul_fu_364_x_re,
        x_im => grp_complex_mul_fu_364_x_im,
        y_re => grp_complex_mul_fu_364_y_re,
        y_im => grp_complex_mul_fu_364_y_im,
        ap_return_0 => grp_complex_mul_fu_364_ap_return_0,
        ap_return_1 => grp_complex_mul_fu_364_ap_return_1,
        ap_ce => grp_complex_mul_fu_364_ap_ce);

    dadd_64ns_64ns_64_5_full_dsp_0_U28 : component fiFFNTT_dadd_64ns_64ns_64_5_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_372_p0,
        din1 => grp_fu_372_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_372_p2);

    dadd_64ns_64ns_64_5_full_dsp_0_U29 : component fiFFNTT_dadd_64ns_64ns_64_5_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_376_p0,
        din1 => grp_fu_376_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_376_p2);

    dsub_64ns_64ns_64_5_full_dsp_0_U30 : component fiFFNTT_dsub_64ns_64ns_64_5_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_380_p0,
        din1 => grp_fu_380_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_380_p2);

    dsub_64ns_64ns_64_5_full_dsp_0_U31 : component fiFFNTT_dsub_64ns_64ns_64_5_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_384_p0,
        din1 => grp_fu_384_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_384_p2);

    udiv_10ns_10s_10_14_1_U32 : component fiFFNTT_udiv_10ns_10s_10_14_1
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_sig_allocacmp_n_1,
        din1 => grp_fu_520_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_520_p2);

    mac_muladd_10s_10s_10ns_10_4_1_U33 : component fiFFNTT_mac_muladd_10s_10s_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_520_p2,
        din1 => index_const_reg_960,
        din2 => n_1_reg_971_pp0_iter7_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_919_p3);

    flow_control_loop_pipe_sequential_init_U : component fiFFNTT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter20_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter16_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter17_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter18_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter19_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter20_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter19_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    n_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_1828)) then 
                    n_fu_104 <= n_2_fu_514_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_104 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add1_reg_1204 <= grp_fu_376_p2;
                add_reg_1199 <= grp_fu_372_p2;
                x_im_2_reg_1214 <= grp_fu_384_p2;
                x_re_2_reg_1209 <= grp_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add1_reg_1204_pp0_iter12_reg <= add1_reg_1204;
                add1_reg_1204_pp0_iter13_reg <= add1_reg_1204_pp0_iter12_reg;
                add1_reg_1204_pp0_iter14_reg <= add1_reg_1204_pp0_iter13_reg;
                add1_reg_1204_pp0_iter15_reg <= add1_reg_1204_pp0_iter14_reg;
                add1_reg_1204_pp0_iter16_reg <= add1_reg_1204_pp0_iter15_reg;
                add1_reg_1204_pp0_iter17_reg <= add1_reg_1204_pp0_iter16_reg;
                add1_reg_1204_pp0_iter18_reg <= add1_reg_1204_pp0_iter17_reg;
                add_reg_1199_pp0_iter12_reg <= add_reg_1199;
                add_reg_1199_pp0_iter13_reg <= add_reg_1199_pp0_iter12_reg;
                add_reg_1199_pp0_iter14_reg <= add_reg_1199_pp0_iter13_reg;
                add_reg_1199_pp0_iter15_reg <= add_reg_1199_pp0_iter14_reg;
                add_reg_1199_pp0_iter16_reg <= add_reg_1199_pp0_iter15_reg;
                add_reg_1199_pp0_iter17_reg <= add_reg_1199_pp0_iter16_reg;
                add_reg_1199_pp0_iter18_reg <= add_reg_1199_pp0_iter17_reg;
                gm_re_reg_1033_pp0_iter10_reg <= gm_re_reg_1033_pp0_iter9_reg;
                gm_re_reg_1033_pp0_iter11_reg <= gm_re_reg_1033_pp0_iter10_reg;
                gm_re_reg_1033_pp0_iter9_reg <= gm_re_reg_1033;
                hm_cast_reg_966 <= m_2_fu_448_p3(10 downto 1);
                icmp_ln118_reg_977 <= icmp_ln118_fu_508_p2;
                icmp_ln118_reg_977_pp0_iter10_reg <= icmp_ln118_reg_977_pp0_iter9_reg;
                icmp_ln118_reg_977_pp0_iter11_reg <= icmp_ln118_reg_977_pp0_iter10_reg;
                icmp_ln118_reg_977_pp0_iter12_reg <= icmp_ln118_reg_977_pp0_iter11_reg;
                icmp_ln118_reg_977_pp0_iter13_reg <= icmp_ln118_reg_977_pp0_iter12_reg;
                icmp_ln118_reg_977_pp0_iter14_reg <= icmp_ln118_reg_977_pp0_iter13_reg;
                icmp_ln118_reg_977_pp0_iter15_reg <= icmp_ln118_reg_977_pp0_iter14_reg;
                icmp_ln118_reg_977_pp0_iter16_reg <= icmp_ln118_reg_977_pp0_iter15_reg;
                icmp_ln118_reg_977_pp0_iter17_reg <= icmp_ln118_reg_977_pp0_iter16_reg;
                icmp_ln118_reg_977_pp0_iter18_reg <= icmp_ln118_reg_977_pp0_iter17_reg;
                icmp_ln118_reg_977_pp0_iter19_reg <= icmp_ln118_reg_977_pp0_iter18_reg;
                icmp_ln118_reg_977_pp0_iter1_reg <= icmp_ln118_reg_977;
                icmp_ln118_reg_977_pp0_iter2_reg <= icmp_ln118_reg_977_pp0_iter1_reg;
                icmp_ln118_reg_977_pp0_iter3_reg <= icmp_ln118_reg_977_pp0_iter2_reg;
                icmp_ln118_reg_977_pp0_iter4_reg <= icmp_ln118_reg_977_pp0_iter3_reg;
                icmp_ln118_reg_977_pp0_iter5_reg <= icmp_ln118_reg_977_pp0_iter4_reg;
                icmp_ln118_reg_977_pp0_iter6_reg <= icmp_ln118_reg_977_pp0_iter5_reg;
                icmp_ln118_reg_977_pp0_iter7_reg <= icmp_ln118_reg_977_pp0_iter6_reg;
                icmp_ln118_reg_977_pp0_iter8_reg <= icmp_ln118_reg_977_pp0_iter7_reg;
                icmp_ln118_reg_977_pp0_iter9_reg <= icmp_ln118_reg_977_pp0_iter8_reg;
                icmp_ln168_reg_981_pp0_iter10_reg <= icmp_ln168_reg_981_pp0_iter9_reg;
                icmp_ln168_reg_981_pp0_iter11_reg <= icmp_ln168_reg_981_pp0_iter10_reg;
                icmp_ln168_reg_981_pp0_iter12_reg <= icmp_ln168_reg_981_pp0_iter11_reg;
                icmp_ln168_reg_981_pp0_iter13_reg <= icmp_ln168_reg_981_pp0_iter12_reg;
                icmp_ln168_reg_981_pp0_iter14_reg <= icmp_ln168_reg_981_pp0_iter13_reg;
                icmp_ln168_reg_981_pp0_iter15_reg <= icmp_ln168_reg_981_pp0_iter14_reg;
                icmp_ln168_reg_981_pp0_iter16_reg <= icmp_ln168_reg_981_pp0_iter15_reg;
                icmp_ln168_reg_981_pp0_iter17_reg <= icmp_ln168_reg_981_pp0_iter16_reg;
                icmp_ln168_reg_981_pp0_iter18_reg <= icmp_ln168_reg_981_pp0_iter17_reg;
                icmp_ln168_reg_981_pp0_iter19_reg <= icmp_ln168_reg_981_pp0_iter18_reg;
                icmp_ln168_reg_981_pp0_iter1_reg <= icmp_ln168_reg_981;
                icmp_ln168_reg_981_pp0_iter2_reg <= icmp_ln168_reg_981_pp0_iter1_reg;
                icmp_ln168_reg_981_pp0_iter3_reg <= icmp_ln168_reg_981_pp0_iter2_reg;
                icmp_ln168_reg_981_pp0_iter4_reg <= icmp_ln168_reg_981_pp0_iter3_reg;
                icmp_ln168_reg_981_pp0_iter5_reg <= icmp_ln168_reg_981_pp0_iter4_reg;
                icmp_ln168_reg_981_pp0_iter6_reg <= icmp_ln168_reg_981_pp0_iter5_reg;
                icmp_ln168_reg_981_pp0_iter7_reg <= icmp_ln168_reg_981_pp0_iter6_reg;
                icmp_ln168_reg_981_pp0_iter8_reg <= icmp_ln168_reg_981_pp0_iter7_reg;
                icmp_ln168_reg_981_pp0_iter9_reg <= icmp_ln168_reg_981_pp0_iter8_reg;
                index_const_reg_960 <= index_const_fu_482_p3;
                n_1_reg_971 <= ap_sig_allocacmp_n_1;
                n_1_reg_971_pp0_iter1_reg <= n_1_reg_971;
                n_1_reg_971_pp0_iter2_reg <= n_1_reg_971_pp0_iter1_reg;
                n_1_reg_971_pp0_iter3_reg <= n_1_reg_971_pp0_iter2_reg;
                n_1_reg_971_pp0_iter4_reg <= n_1_reg_971_pp0_iter3_reg;
                n_1_reg_971_pp0_iter5_reg <= n_1_reg_971_pp0_iter4_reg;
                n_1_reg_971_pp0_iter6_reg <= n_1_reg_971_pp0_iter5_reg;
                n_1_reg_971_pp0_iter7_reg <= n_1_reg_971_pp0_iter6_reg;
                trunc_ln103_1_reg_950 <= t_2_fu_456_p3(10 downto 1);
                trunc_ln103_reg_945 <= trunc_ln103_fu_464_p1;
                trunc_ln105_reg_955 <= trunc_ln105_fu_478_p1;
                trunc_ln189_reg_1234_pp0_iter15_reg <= trunc_ln189_reg_1234;
                trunc_ln189_reg_1234_pp0_iter16_reg <= trunc_ln189_reg_1234_pp0_iter15_reg;
                trunc_ln189_reg_1234_pp0_iter17_reg <= trunc_ln189_reg_1234_pp0_iter16_reg;
                trunc_ln189_reg_1234_pp0_iter18_reg <= trunc_ln189_reg_1234_pp0_iter17_reg;
                u_reg_1165_pp0_iter10_reg <= u_reg_1165;
                u_reg_1165_pp0_iter11_reg <= u_reg_1165_pp0_iter10_reg;
                u_reg_1165_pp0_iter12_reg <= u_reg_1165_pp0_iter11_reg;
                u_reg_1165_pp0_iter13_reg <= u_reg_1165_pp0_iter12_reg;
                x_im_reg_1193_pp0_iter10_reg <= x_im_reg_1193;
                x_im_reg_1193_pp0_iter11_reg <= x_im_reg_1193_pp0_iter10_reg;
                x_im_reg_1193_pp0_iter12_reg <= x_im_reg_1193_pp0_iter11_reg;
                x_im_reg_1193_pp0_iter13_reg <= x_im_reg_1193_pp0_iter12_reg;
                x_im_reg_1193_pp0_iter14_reg <= x_im_reg_1193_pp0_iter13_reg;
                x_im_reg_1193_pp0_iter15_reg <= x_im_reg_1193_pp0_iter14_reg;
                x_im_reg_1193_pp0_iter16_reg <= x_im_reg_1193_pp0_iter15_reg;
                x_re_reg_1187_pp0_iter10_reg <= x_re_reg_1187;
                x_re_reg_1187_pp0_iter11_reg <= x_re_reg_1187_pp0_iter10_reg;
                x_re_reg_1187_pp0_iter12_reg <= x_re_reg_1187_pp0_iter11_reg;
                x_re_reg_1187_pp0_iter13_reg <= x_re_reg_1187_pp0_iter12_reg;
                x_re_reg_1187_pp0_iter14_reg <= x_re_reg_1187_pp0_iter13_reg;
                x_re_reg_1187_pp0_iter15_reg <= x_re_reg_1187_pp0_iter14_reg;
                x_re_reg_1187_pp0_iter16_reg <= x_re_reg_1187_pp0_iter15_reg;
                    zext_ln138_reg_1083_pp0_iter10_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter9_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter11_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter10_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter12_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter11_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter13_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter12_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter14_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter13_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter15_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter14_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter16_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter15_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter17_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter16_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter18_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter17_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter19_reg(9 downto 0) <= zext_ln138_reg_1083_pp0_iter18_reg(9 downto 0);
                    zext_ln138_reg_1083_pp0_iter9_reg(9 downto 0) <= zext_ln138_reg_1083(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter10_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter9_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter11_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter10_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter12_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter11_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter13_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter12_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter14_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter13_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter15_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter14_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter16_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter15_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter17_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter16_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter18_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter17_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter19_reg(9 downto 0) <= zext_ln139_reg_1093_pp0_iter18_reg(9 downto 0);
                    zext_ln139_reg_1093_pp0_iter9_reg(9 downto 0) <= zext_ln139_reg_1093(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter10_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter9_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter11_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter10_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter12_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter11_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter13_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter12_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter14_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter13_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter15_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter14_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter16_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter15_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter17_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter16_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter18_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter17_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter19_reg(9 downto 0) <= zext_ln151_reg_1063_pp0_iter18_reg(9 downto 0);
                    zext_ln151_reg_1063_pp0_iter9_reg(9 downto 0) <= zext_ln151_reg_1063(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter10_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter9_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter11_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter10_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter12_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter11_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter13_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter12_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter14_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter13_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter15_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter14_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter16_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter15_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter17_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter16_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter18_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter17_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter19_reg(9 downto 0) <= zext_ln152_reg_1073_pp0_iter18_reg(9 downto 0);
                    zext_ln152_reg_1073_pp0_iter9_reg(9 downto 0) <= zext_ln152_reg_1073(9 downto 0);
                    zext_ln171_reg_1172_pp0_iter10_reg(15 downto 0) <= zext_ln171_reg_1172(15 downto 0);
                    zext_ln171_reg_1172_pp0_iter11_reg(15 downto 0) <= zext_ln171_reg_1172_pp0_iter10_reg(15 downto 0);
                    zext_ln171_reg_1172_pp0_iter12_reg(15 downto 0) <= zext_ln171_reg_1172_pp0_iter11_reg(15 downto 0);
                    zext_ln171_reg_1172_pp0_iter13_reg(15 downto 0) <= zext_ln171_reg_1172_pp0_iter12_reg(15 downto 0);
                    zext_ln173_1_reg_1177_pp0_iter10_reg(15 downto 0) <= zext_ln173_1_reg_1177(15 downto 0);
                    zext_ln173_1_reg_1177_pp0_iter11_reg(15 downto 0) <= zext_ln173_1_reg_1177_pp0_iter10_reg(15 downto 0);
                    zext_ln173_1_reg_1177_pp0_iter12_reg(15 downto 0) <= zext_ln173_1_reg_1177_pp0_iter11_reg(15 downto 0);
                    zext_ln173_1_reg_1177_pp0_iter13_reg(15 downto 0) <= zext_ln173_1_reg_1177_pp0_iter12_reg(15 downto 0);
                    zext_ln173_reg_1053_pp0_iter10_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter9_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter11_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter10_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter12_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter11_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter13_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter12_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter14_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter13_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter15_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter14_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter16_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter15_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter17_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter16_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter18_reg(9 downto 0) <= zext_ln173_reg_1053_pp0_iter17_reg(9 downto 0);
                    zext_ln173_reg_1053_pp0_iter9_reg(9 downto 0) <= zext_ln173_reg_1053(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter10_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter9_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter11_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter10_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter12_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter11_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter13_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter12_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter14_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter13_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter15_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter14_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter16_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter15_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter17_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter16_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter18_reg(9 downto 0) <= zext_ln184_reg_1043_pp0_iter17_reg(9 downto 0);
                    zext_ln184_reg_1043_pp0_iter9_reg(9 downto 0) <= zext_ln184_reg_1043(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add3_reg_1251 <= grp_fu_376_p2;
                sub1_reg_1261 <= grp_fu_384_p2;
                sub_reg_1256 <= grp_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln177_reg_1229 <= add_ln177_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln177_reg_1229_pp0_iter14_reg <= add_ln177_reg_1229;
                add_ln177_reg_1229_pp0_iter15_reg <= add_ln177_reg_1229_pp0_iter14_reg;
                add_ln177_reg_1229_pp0_iter16_reg <= add_ln177_reg_1229_pp0_iter15_reg;
                add_ln177_reg_1229_pp0_iter17_reg <= add_ln177_reg_1229_pp0_iter16_reg;
                add_ln194_reg_1219_pp0_iter14_reg <= add_ln194_reg_1219;
                add_ln194_reg_1219_pp0_iter15_reg <= add_ln194_reg_1219_pp0_iter14_reg;
                add_ln194_reg_1219_pp0_iter16_reg <= add_ln194_reg_1219_pp0_iter15_reg;
                add_ln194_reg_1219_pp0_iter17_reg <= add_ln194_reg_1219_pp0_iter16_reg;
                add_ln198_reg_1224_pp0_iter14_reg <= add_ln198_reg_1224;
                add_ln198_reg_1224_pp0_iter15_reg <= add_ln198_reg_1224_pp0_iter14_reg;
                add_ln198_reg_1224_pp0_iter16_reg <= add_ln198_reg_1224_pp0_iter15_reg;
                add_ln198_reg_1224_pp0_iter17_reg <= add_ln198_reg_1224_pp0_iter16_reg;
                add_ln198_reg_1224_pp0_iter18_reg <= add_ln198_reg_1224_pp0_iter17_reg;
                gm_im_2_reg_1103_pp0_iter10_reg <= gm_im_2_reg_1103_pp0_iter9_reg;
                gm_im_2_reg_1103_pp0_iter11_reg <= gm_im_2_reg_1103_pp0_iter10_reg;
                gm_im_2_reg_1103_pp0_iter9_reg <= gm_im_2_reg_1103;
                sub1_reg_1261_pp0_iter19_reg <= sub1_reg_1261;
                v_reg_1126_pp0_iter10_reg <= v_reg_1126_pp0_iter9_reg;
                v_reg_1126_pp0_iter11_reg <= v_reg_1126_pp0_iter10_reg;
                v_reg_1126_pp0_iter12_reg <= v_reg_1126_pp0_iter11_reg;
                v_reg_1126_pp0_iter9_reg <= v_reg_1126;
                    zext_ln135_reg_1132_pp0_iter10_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter9_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter11_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter10_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter12_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter11_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter13_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter12_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter14_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter13_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter15_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter14_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter16_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter15_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter17_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter16_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter18_reg(9 downto 0) <= zext_ln135_reg_1132_pp0_iter17_reg(9 downto 0);
                    zext_ln135_reg_1132_pp0_iter9_reg(9 downto 0) <= zext_ln135_reg_1132(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter10_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter9_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter11_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter10_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter12_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter11_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter13_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter12_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter14_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter13_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter15_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter14_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter16_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter15_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter17_reg(9 downto 0) <= zext_ln172_reg_1108_pp0_iter16_reg(9 downto 0);
                    zext_ln172_reg_1108_pp0_iter9_reg(9 downto 0) <= zext_ln172_reg_1108(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln194_reg_1219 <= add_ln194_fu_786_p2;
                add_ln198_reg_1224 <= add_ln198_fu_818_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gm_im_2_reg_1103 <= gm_im_2_fu_630_p3;
                    zext_ln172_reg_1108(9 downto 0) <= zext_ln172_fu_638_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gm_im_tab_load_reg_1023 <= gm_im_tab_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gm_re_reg_1033 <= gm_re_tab_q0;
                gm_reg_1038 <= gm_fu_568_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                i_gm_reg_985 <= grp_fu_520_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_1017 <= grp_fu_919_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_fu_508_p2 = ap_const_lv1_0) and (mode_read_read_fu_114_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln168_reg_981 <= icmp_ln168_fu_526_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_im1_2_reg_1245 <= grp_complex_mul_fu_364_ap_return_1;
                tmp_re1_2_reg_1239 <= grp_complex_mul_fu_364_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_im1_reg_1266 <= grp_complex_mul_fu_364_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_im_reg_1159 <= tmp_im_fu_679_p1;
                tmp_re_reg_1153 <= tmp_re_fu_675_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln189_reg_1234 <= trunc_ln189_fu_865_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                u_reg_1165 <= u_fu_683_p1;
                    zext_ln171_reg_1172(15 downto 0) <= zext_ln171_fu_687_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                v_reg_1126 <= v_fu_651_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_im_reg_1193 <= x_im_fu_733_p1;
                x_re_reg_1187 <= x_re_fu_727_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    zext_ln128_reg_1002(9 downto 0) <= zext_ln128_fu_551_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    zext_ln135_reg_1132(9 downto 0) <= zext_ln135_fu_660_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln138_reg_1083(9 downto 0) <= zext_ln138_fu_601_p1(9 downto 0);
                    zext_ln139_reg_1093(9 downto 0) <= zext_ln139_fu_612_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln151_reg_1063(9 downto 0) <= zext_ln151_fu_585_p1(9 downto 0);
                    zext_ln152_reg_1073(9 downto 0) <= zext_ln152_fu_596_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln173_1_reg_1177(15 downto 0) <= zext_ln173_1_fu_691_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln173_reg_1053(9 downto 0) <= zext_ln173_fu_580_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln184_reg_1043(9 downto 0) <= zext_ln184_fu_575_p1(9 downto 0);
            end if;
        end if;
    end process;
    zext_ln128_reg_1002(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln184_reg_1043_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln173_reg_1053_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln151_reg_1063_pp0_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1073_pp0_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln138_reg_1083_pp0_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln139_reg_1093_pp0_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln172_reg_1108_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter9_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter10_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter11_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter12_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter13_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter14_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter15_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter16_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln135_reg_1132_pp0_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln171_reg_1172(16) <= '0';
    zext_ln171_reg_1172_pp0_iter10_reg(16) <= '0';
    zext_ln171_reg_1172_pp0_iter11_reg(16) <= '0';
    zext_ln171_reg_1172_pp0_iter12_reg(16) <= '0';
    zext_ln171_reg_1172_pp0_iter13_reg(16) <= '0';
    zext_ln173_1_reg_1177(16) <= '0';
    zext_ln173_1_reg_1177_pp0_iter10_reg(16) <= '0';
    zext_ln173_1_reg_1177_pp0_iter11_reg(16) <= '0';
    zext_ln173_1_reg_1177_pp0_iter12_reg(16) <= '0';
    zext_ln173_1_reg_1177_pp0_iter13_reg(16) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter20_stage0, ap_idle_pp0_0to19, ap_idle_pp0_1to20, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter20_stage0) and (ap_idle_pp0_0to19 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to20 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    GMb_address0 <= zext_ln128_fu_551_p1(10 - 1 downto 0);

    GMb_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            GMb_ce0 <= ap_const_logic_1;
        else 
            GMb_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln124_fu_537_p2 <= std_logic_vector(signed(i_gm_reg_985) + signed(hm_cast_reg_966));
    add_ln128_fu_547_p2 <= std_logic_vector(signed(i_gm_reg_985) + signed(trunc_ln105_reg_955));
    add_ln175_fu_824_p2 <= std_logic_vector(unsigned(zext_ln173_1_reg_1177_pp0_iter13_reg) + unsigned(ap_const_lv17_1CFFF));
    add_ln177_1_fu_847_p2 <= std_logic_vector(unsigned(u_reg_1165_pp0_iter13_reg) + unsigned(v_reg_1126_pp0_iter12_reg));
    add_ln177_fu_859_p2 <= std_logic_vector(unsigned(select_ln177_fu_851_p3) + unsigned(add_ln177_1_fu_847_p2));
    add_ln192_fu_750_p2 <= std_logic_vector(unsigned(zext_ln171_reg_1172_pp0_iter13_reg) + unsigned(ap_const_lv17_1CFFF));
    add_ln194_1_fu_773_p2 <= std_logic_vector(unsigned(u_reg_1165_pp0_iter13_reg) + unsigned(trunc_ln192_fu_746_p1));
    add_ln194_fu_786_p2 <= std_logic_vector(unsigned(select_ln194_fu_778_p3) + unsigned(add_ln194_1_fu_773_p2));
    add_ln198_fu_818_p2 <= std_logic_vector(unsigned(select_ln198_fu_810_p3) + unsigned(trunc_ln197_fu_806_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= (((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)) or ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp154 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter13_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter13_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter14_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter14_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter14_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter14_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter15_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter15_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter15_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter15_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter16_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter16_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter17_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter17_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter17_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter17_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter18_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter18_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter18_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter18_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter19_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter19_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage1_iter19_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage1_iter19_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter20_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter20_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4_ignore_call10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1811_assign_proc : process(ap_CS_fsm_pp0_stage0, mode, inverse, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
                ap_condition_1811 <= ((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1816_assign_proc : process(ap_CS_fsm_pp0_stage0, mode, inverse, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
                ap_condition_1816 <= ((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1820_assign_proc : process(ap_CS_fsm_pp0_stage0, mode, inverse, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
                ap_condition_1820 <= ((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1824_assign_proc : process(ap_CS_fsm_pp0_stage0, mode, inverse, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
                ap_condition_1824 <= ((icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1828_assign_proc : process(ap_enable_reg_pp0_iter0, mode_read_read_fu_114_p2, icmp_ln118_fu_508_p2, icmp_ln168_fu_526_p2)
    begin
                ap_condition_1828 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln118_fu_508_p2 = ap_const_lv1_0) and (mode_read_read_fu_114_p2 = ap_const_lv1_0)) or ((icmp_ln168_fu_526_p2 = ap_const_lv1_0) and (icmp_ln118_fu_508_p2 = ap_const_lv1_0))));
    end process;


    ap_condition_1832_assign_proc : process(ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1832 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1836_assign_proc : process(ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1836 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1840_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter20, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1840 <= ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1844_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter20, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1844 <= ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1849_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1849 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1854_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1854 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1858_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1858 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1862_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage1)
    begin
                ap_condition_1862 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1));
    end process;


    ap_condition_1867_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, mode, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1867 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1872_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, mode, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1872 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1876_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, mode, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1876 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1880_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, mode, inverse, ap_block_pp0_stage0)
    begin
                ap_condition_1880 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln168_reg_981, icmp_ln118_reg_977, mode)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and ((icmp_ln118_reg_977 = ap_const_lv1_1) or ((icmp_ln168_reg_981 = ap_const_lv1_1) and (mode = ap_const_lv1_1))))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter20_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter20, mode, icmp_ln118_reg_977_pp0_iter19_reg, icmp_ln168_reg_981_pp0_iter19_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and ((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_1) or ((icmp_ln168_reg_981_pp0_iter19_reg = ap_const_lv1_1) and (mode = ap_const_lv1_1))))) then 
            ap_condition_exit_pp0_iter20_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter20_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter20_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter20_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg, ap_loop_exit_ready_pp0_iter11_reg, ap_loop_exit_ready_pp0_iter12_reg, ap_loop_exit_ready_pp0_iter13_reg, ap_loop_exit_ready_pp0_iter14_reg, ap_loop_exit_ready_pp0_iter15_reg, ap_loop_exit_ready_pp0_iter16_reg, ap_loop_exit_ready_pp0_iter17_reg, ap_loop_exit_ready_pp0_iter18_reg, ap_loop_exit_ready_pp0_iter19_reg, ap_loop_exit_ready_pp0_iter20_reg)
    begin
        if (not(((ap_loop_exit_ready_pp0_iter20_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter19_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter18_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter17_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter12_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0) and (ap_loop_exit_ready = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_297_assign_proc : process(ap_predicate_op297_store_state38)
    begin
                ap_enable_operation_297 <= (ap_predicate_op297_store_state38 = ap_const_boolean_1);
    end process;


    ap_enable_operation_300_assign_proc : process(ap_predicate_op300_store_state38)
    begin
                ap_enable_operation_300 <= (ap_predicate_op300_store_state38 = ap_const_boolean_1);
    end process;


    ap_enable_operation_304_assign_proc : process(ap_predicate_op304_store_state38)
    begin
                ap_enable_operation_304 <= (ap_predicate_op304_store_state38 = ap_const_boolean_1);
    end process;


    ap_enable_operation_310_assign_proc : process(ap_predicate_op310_store_state38)
    begin
                ap_enable_operation_310 <= (ap_predicate_op310_store_state38 = ap_const_boolean_1);
    end process;


    ap_enable_operation_314_assign_proc : process(ap_predicate_op314_store_state39)
    begin
                ap_enable_operation_314 <= (ap_predicate_op314_store_state39 = ap_const_boolean_1);
    end process;


    ap_enable_operation_318_assign_proc : process(ap_predicate_op318_store_state39)
    begin
                ap_enable_operation_318 <= (ap_predicate_op318_store_state39 = ap_const_boolean_1);
    end process;


    ap_enable_operation_322_assign_proc : process(ap_predicate_op322_store_state39)
    begin
                ap_enable_operation_322 <= (ap_predicate_op322_store_state39 = ap_const_boolean_1);
    end process;


    ap_enable_operation_325_assign_proc : process(ap_predicate_op325_store_state39)
    begin
                ap_enable_operation_325 <= (ap_predicate_op325_store_state39 = ap_const_boolean_1);
    end process;


    ap_enable_operation_329_assign_proc : process(ap_predicate_op329_store_state40)
    begin
                ap_enable_operation_329 <= (ap_predicate_op329_store_state40 = ap_const_boolean_1);
    end process;


    ap_enable_operation_335_assign_proc : process(ap_predicate_op335_store_state40)
    begin
                ap_enable_operation_335 <= (ap_predicate_op335_store_state40 = ap_const_boolean_1);
    end process;


    ap_enable_operation_338_assign_proc : process(ap_predicate_op338_store_state41)
    begin
                ap_enable_operation_338 <= (ap_predicate_op338_store_state41 = ap_const_boolean_1);
    end process;


    ap_enable_operation_342_assign_proc : process(ap_predicate_op342_store_state41)
    begin
                ap_enable_operation_342 <= (ap_predicate_op342_store_state41 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_enable_state38_pp0_iter18_stage1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1)
    begin
                ap_enable_state38_pp0_iter18_stage1 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state39_pp0_iter19_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19)
    begin
                ap_enable_state39_pp0_iter19_stage0 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state40_pp0_iter19_stage1_assign_proc : process(ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1)
    begin
                ap_enable_state40_pp0_iter19_stage1 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state41_pp0_iter20_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter20)
    begin
                ap_enable_state41_pp0_iter20_stage0 <= ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to19_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to19 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to20_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to20 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to20 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_predicate_op154_call_state18_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter8_reg)
    begin
                ap_predicate_op154_call_state18 <= ((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op166_call_state18_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter8_reg)
    begin
                ap_predicate_op166_call_state18 <= ((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op183_call_state19_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter8_reg)
    begin
                ap_predicate_op183_call_state19 <= ((icmp_ln118_reg_977_pp0_iter8_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op226_call_state25_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter11_reg)
    begin
                ap_predicate_op226_call_state25 <= ((icmp_ln118_reg_977_pp0_iter11_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op297_store_state38_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op297_store_state38 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op300_store_state38_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op300_store_state38 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op304_store_state38_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op304_store_state38 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op310_store_state38_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op310_store_state38 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op314_store_state39_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op314_store_state39 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op318_store_state39_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op318_store_state39 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0));
    end process;


    ap_predicate_op322_store_state39_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op322_store_state39 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op325_store_state39_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter18_reg)
    begin
                ap_predicate_op325_store_state39 <= ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op329_store_state40_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter19_reg)
    begin
                ap_predicate_op329_store_state40 <= ((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op335_store_state40_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter19_reg)
    begin
                ap_predicate_op335_store_state40 <= ((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op338_store_state41_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter19_reg)
    begin
                ap_predicate_op338_store_state41 <= ((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1));
    end process;


    ap_predicate_op342_store_state41_assign_proc : process(mode, inverse, icmp_ln118_reg_977_pp0_iter19_reg)
    begin
                ap_predicate_op342_store_state41 <= ((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_104, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_n_1 <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_n_1 <= n_fu_104;
        end if; 
    end process;

    bitcast_ln125_fu_617_p1 <= gm_im_tab_load_reg_1023;
    bitcast_ln141_fu_882_p1 <= add_reg_1199_pp0_iter18_reg;
    bitcast_ln142_fu_898_p1 <= add1_reg_1204_pp0_iter18_reg;
    bitcast_ln156_fu_906_p1 <= grp_complex_mul_fu_364_ap_return_0;
    bitcast_ln157_fu_915_p1 <= tmp_im1_reg_1266;
    bitcast_ln162_fu_877_p1 <= grp_fu_372_p2;
    bitcast_ln163_fu_894_p1 <= add3_reg_1251;
    bitcast_ln165_fu_902_p1 <= sub_reg_1256;
    bitcast_ln166_fu_911_p1 <= sub1_reg_1261_pp0_iter19_reg;
    gm_fu_568_p3 <= 
        iGMb_q0 when (inverse(0) = '1') else 
        GMb_q0;
    gm_im_2_fu_630_p3 <= 
        gm_im_fu_626_p1 when (inverse(0) = '1') else 
        gm_im_tab_q0;
    gm_im_fu_626_p1 <= xor_ln125_fu_620_p2;

    gm_im_tab_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, zext_ln128_reg_1002, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln124_fu_541_p1)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gm_im_tab_address0 <= zext_ln128_reg_1002(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            gm_im_tab_address0 <= zext_ln124_fu_541_p1(10 - 1 downto 0);
        else 
            gm_im_tab_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gm_im_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            gm_im_tab_ce0 <= ap_const_logic_1;
        else 
            gm_im_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    gm_re_tab_address0 <= zext_ln124_1_fu_563_p1(10 - 1 downto 0);

    gm_re_tab_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            gm_re_tab_ce0 <= ap_const_logic_1;
        else 
            gm_re_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_364_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp166, ap_block_pp0_stage0_11001_ignoreCallOp187)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp166)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp187)))) then 
            grp_complex_mul_fu_364_ap_ce <= ap_const_logic_1;
        else 
            grp_complex_mul_fu_364_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_364_x_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, tmp_im_3_fu_670_p1, x_im_2_reg_1214, ap_predicate_op166_call_state18, ap_predicate_op226_call_state25, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op226_call_state25 = ap_const_boolean_1))) then 
            grp_complex_mul_fu_364_x_im <= x_im_2_reg_1214;
        elsif (((ap_predicate_op166_call_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_complex_mul_fu_364_x_im <= tmp_im_3_fu_670_p1;
        else 
            grp_complex_mul_fu_364_x_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_364_x_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, tmp_re_3_fu_665_p1, x_re_2_reg_1209, ap_predicate_op166_call_state18, ap_predicate_op226_call_state25, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op226_call_state25 = ap_const_boolean_1))) then 
            grp_complex_mul_fu_364_x_re <= x_re_2_reg_1209;
        elsif (((ap_predicate_op166_call_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_complex_mul_fu_364_x_re <= tmp_re_3_fu_665_p1;
        else 
            grp_complex_mul_fu_364_x_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_364_y_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, gm_im_2_fu_630_p3, gm_im_2_reg_1103_pp0_iter11_reg, ap_predicate_op166_call_state18, ap_predicate_op226_call_state25, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op226_call_state25 = ap_const_boolean_1))) then 
            grp_complex_mul_fu_364_y_im <= gm_im_2_reg_1103_pp0_iter11_reg;
        elsif (((ap_predicate_op166_call_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_complex_mul_fu_364_y_im <= gm_im_2_fu_630_p3;
        else 
            grp_complex_mul_fu_364_y_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_364_y_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, gm_re_reg_1033, gm_re_reg_1033_pp0_iter11_reg, ap_predicate_op166_call_state18, ap_predicate_op226_call_state25, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op226_call_state25 = ap_const_boolean_1))) then 
            grp_complex_mul_fu_364_y_re <= gm_re_reg_1033_pp0_iter11_reg;
        elsif (((ap_predicate_op166_call_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_complex_mul_fu_364_y_re <= gm_re_reg_1033;
        else 
            grp_complex_mul_fu_364_y_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, x_re_fu_727_p1, x_re_reg_1187_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_372_p0 <= x_re_reg_1187_pp0_iter16_reg;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_372_p0 <= x_re_fu_727_p1;
        else 
            grp_fu_372_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, tmp_re_reg_1153, tmp_re1_2_reg_1239, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_372_p1 <= tmp_re1_2_reg_1239;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_372_p1 <= tmp_re_reg_1153;
        else 
            grp_fu_372_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_376_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, x_im_fu_733_p1, x_im_reg_1193_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_376_p0 <= x_im_reg_1193_pp0_iter16_reg;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_376_p0 <= x_im_fu_733_p1;
        else 
            grp_fu_376_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_376_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, tmp_im_reg_1159, tmp_im1_2_reg_1245, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_376_p1 <= tmp_im1_2_reg_1245;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_376_p1 <= tmp_im_reg_1159;
        else 
            grp_fu_376_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_380_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, x_re_fu_727_p1, x_re_reg_1187_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_380_p0 <= x_re_reg_1187_pp0_iter16_reg;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_380_p0 <= x_re_fu_727_p1;
        else 
            grp_fu_380_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_380_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, tmp_re_reg_1153, tmp_re1_2_reg_1239, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_380_p1 <= tmp_re1_2_reg_1239;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_380_p1 <= tmp_re_reg_1153;
        else 
            grp_fu_380_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_384_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, x_im_fu_733_p1, x_im_reg_1193_pp0_iter16_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_384_p0 <= x_im_reg_1193_pp0_iter16_reg;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_384_p0 <= x_im_fu_733_p1;
        else 
            grp_fu_384_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_384_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter16, ap_CS_fsm_pp0_stage1, tmp_im_reg_1159, tmp_im1_2_reg_1245, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_384_p1 <= tmp_im1_2_reg_1245;
        elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_384_p1 <= tmp_im_reg_1159;
        else 
            grp_fu_384_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_388_p0 <= grp_fu_919_p3;
    grp_fu_388_p2 <= std_logic_vector(signed(grp_fu_388_p0) + signed(trunc_ln103_1_reg_950));
    grp_fu_392_p0 <= grp_fu_919_p3;
    grp_fu_392_p2 <= std_logic_vector(signed(grp_fu_392_p0) + signed(trunc_ln103_reg_945));
    grp_fu_520_p1 <= 
        t_1_fu_436_p3 when (inverse(0) = '1') else 
        trunc_ln103_1_fu_468_p4;

    grp_monty_mul_fu_358_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp154, ap_block_pp0_stage0_11001_ignoreCallOp176)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp154)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp176)))) then 
            grp_monty_mul_fu_358_ap_ce <= ap_const_logic_1;
        else 
            grp_monty_mul_fu_358_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_monty_mul_fu_358_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, zext_ln184_1_fu_646_p1, tmp1_5_fu_720_p2, ap_predicate_op154_call_state18, ap_predicate_op183_call_state19, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op183_call_state19 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_monty_mul_fu_358_x <= tmp1_5_fu_720_p2;
        elsif (((ap_predicate_op154_call_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_monty_mul_fu_358_x <= zext_ln184_1_fu_646_p1;
        else 
            grp_monty_mul_fu_358_x <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    iGMb_address0 <= zext_ln124_fu_541_p1(10 - 1 downto 0);

    iGMb_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            iGMb_ce0 <= ap_const_logic_1;
        else 
            iGMb_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln118_fu_508_p2 <= "1" when (ap_sig_allocacmp_n_1 = ap_const_lv10_200) else "0";
    icmp_ln168_fu_526_p2 <= "1" when (ap_sig_allocacmp_n_1 = ap_const_lv10_FF) else "0";

    in_buf_address0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, zext_ln184_fu_575_p1, zext_ln173_fu_580_p1, zext_ln152_fu_596_p1, zext_ln139_fu_612_p1, zext_ln172_fu_638_p1, ap_block_pp0_stage1, ap_condition_1811, ap_condition_1816, ap_condition_1820, ap_condition_1824)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                in_buf_address0 <= zext_ln172_fu_638_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1824)) then 
                in_buf_address0 <= zext_ln139_fu_612_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1820)) then 
                in_buf_address0 <= zext_ln152_fu_596_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1816)) then 
                in_buf_address0 <= zext_ln173_fu_580_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1811)) then 
                in_buf_address0 <= zext_ln184_fu_575_p1(10 - 1 downto 0);
            else 
                in_buf_address0 <= "XXXXXXXXXX";
            end if;
        else 
            in_buf_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_buf_address1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, zext_ln151_fu_585_p1, zext_ln138_fu_601_p1, zext_ln135_fu_660_p1, ap_block_pp0_stage1, ap_condition_1820, ap_condition_1824)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                in_buf_address1 <= zext_ln135_fu_660_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1824)) then 
                in_buf_address1 <= zext_ln138_fu_601_p1(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1820)) then 
                in_buf_address1 <= zext_ln151_fu_585_p1(10 - 1 downto 0);
            else 
                in_buf_address1 <= "XXXXXXXXXX";
            end if;
        else 
            in_buf_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            in_buf_ce0 <= ap_const_logic_1;
        else 
            in_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_buf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter7_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            in_buf_ce1 <= ap_const_logic_1;
        else 
            in_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_m_cast_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_m),11));
    index_const_fu_482_p3 <= 
        t_1_fu_436_p3 when (inverse(0) = '1') else 
        trunc_ln103_1_fu_468_p4;
    m_1_fu_428_p3 <= 
        m_fu_422_p2 when (mode(0) = '1') else 
        in_t;
    m_2_fu_448_p3 <= 
        m_1_fu_428_p3 when (inverse(0) = '1') else 
        in_m_cast_fu_404_p1;
    m_fu_422_p2 <= std_logic_vector(shift_left(unsigned(in_t),to_integer(unsigned('0' & ap_const_lv11_1(11-1 downto 0)))));
    mode_read_read_fu_114_p2 <= mode;
    n_2_fu_514_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_1) + unsigned(ap_const_lv10_1));
    select_ln171_fu_556_p3 <= 
        add_ln124_fu_537_p2 when (inverse(0) = '1') else 
        add_ln128_fu_547_p2;
    select_ln177_fu_851_p3 <= 
        ap_const_lv16_0 when (tmp_fu_839_p3(0) = '1') else 
        ap_const_lv16_CFFF;
    select_ln180_fu_712_p3 <= 
        ap_const_lv18_3001 when (tmp_1_fu_704_p3(0) = '1') else 
        ap_const_lv18_0;
    select_ln194_fu_778_p3 <= 
        ap_const_lv16_0 when (tmp_2_fu_765_p3(0) = '1') else 
        ap_const_lv16_CFFF;
    select_ln198_fu_810_p3 <= 
        ap_const_lv16_3001 when (tmp_3_fu_798_p3(0) = '1') else 
        ap_const_lv16_0;
        sext_ln117_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_1_fu_694_p2),18));

        sext_ln175_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln175_fu_824_p2),18));

    sext_ln187_fu_742_p0 <= grp_monty_mul_fu_358_ap_return;
        sext_ln187_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln187_fu_742_p0),18));

        sext_ln192_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln192_fu_750_p2),18));

    stage0_addr_1_gep_fu_323_p3 <= zext_ln135_reg_1132_pp0_iter18_reg(10 - 1 downto 0);
    stage0_addr_4_gep_fu_288_p3 <= zext_ln172_reg_1108_pp0_iter17_reg(10 - 1 downto 0);
    stage0_addr_8_gep_fu_281_p3 <= zext_ln172_reg_1108_pp0_iter17_reg(10 - 1 downto 0);
    stage0_addr_gep_fu_295_p3 <= zext_ln172_reg_1108_pp0_iter17_reg(10 - 1 downto 0);

    stage0_address0_assign_proc : process(mode, icmp_ln118_reg_977_pp0_iter19_reg, zext_ln151_reg_1063_pp0_iter19_reg, zext_ln152_reg_1073_pp0_iter19_reg, zext_ln138_reg_1083_pp0_iter19_reg, zext_ln139_reg_1093_pp0_iter19_reg, ap_condition_1832, ap_condition_1836, ap_condition_1840, ap_condition_1844)
    begin
        if (((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (mode = ap_const_lv1_1))) then
            if ((ap_const_boolean_1 = ap_condition_1844)) then 
                stage0_address0 <= zext_ln139_reg_1093_pp0_iter19_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1840)) then 
                stage0_address0 <= zext_ln152_reg_1073_pp0_iter19_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1836)) then 
                stage0_address0 <= zext_ln138_reg_1083_pp0_iter19_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1832)) then 
                stage0_address0 <= zext_ln151_reg_1063_pp0_iter19_reg(10 - 1 downto 0);
            else 
                stage0_address0 <= "XXXXXXXXXX";
            end if;
        else 
            stage0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    stage0_address1_assign_proc : process(icmp_ln118_reg_977_pp0_iter18_reg, zext_ln184_reg_1043_pp0_iter18_reg, zext_ln173_reg_1053_pp0_iter18_reg, zext_ln172_reg_1108_pp0_iter17_reg, zext_ln135_reg_1132_pp0_iter18_reg, stage0_addr_8_gep_fu_281_p3, stage0_addr_4_gep_fu_288_p3, stage0_addr_gep_fu_295_p3, stage0_addr_1_gep_fu_323_p3, ap_condition_1849, ap_condition_1854, ap_condition_1858, ap_condition_1862, ap_condition_1867, ap_condition_1872, ap_condition_1876, ap_condition_1880)
    begin
        if ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_1880)) then 
                stage0_address1 <= stage0_addr_1_gep_fu_323_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1876)) then 
                stage0_address1 <= zext_ln135_reg_1132_pp0_iter18_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1872)) then 
                stage0_address1 <= zext_ln173_reg_1053_pp0_iter18_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1867)) then 
                stage0_address1 <= zext_ln184_reg_1043_pp0_iter18_reg(10 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1862)) then 
                stage0_address1 <= stage0_addr_gep_fu_295_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1858)) then 
                stage0_address1 <= stage0_addr_4_gep_fu_288_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1854)) then 
                stage0_address1 <= stage0_addr_8_gep_fu_281_p3;
            elsif ((ap_const_boolean_1 = ap_condition_1849)) then 
                stage0_address1 <= zext_ln172_reg_1108_pp0_iter17_reg(10 - 1 downto 0);
            else 
                stage0_address1 <= "XXXXXXXXXX";
            end if;
        else 
            stage0_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    stage0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter19_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            stage0_ce0 <= ap_const_logic_1;
        else 
            stage0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter18_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            stage0_ce1 <= ap_const_logic_1;
        else 
            stage0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_d0_assign_proc : process(mode, icmp_ln118_reg_977_pp0_iter19_reg, bitcast_ln165_fu_902_p1, bitcast_ln156_fu_906_p1, bitcast_ln166_fu_911_p1, bitcast_ln157_fu_915_p1, ap_condition_1832, ap_condition_1836, ap_condition_1840, ap_condition_1844)
    begin
        if (((icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (mode = ap_const_lv1_1))) then
            if ((ap_const_boolean_1 = ap_condition_1844)) then 
                stage0_d0 <= bitcast_ln157_fu_915_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1840)) then 
                stage0_d0 <= bitcast_ln166_fu_911_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1836)) then 
                stage0_d0 <= bitcast_ln156_fu_906_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1832)) then 
                stage0_d0 <= bitcast_ln165_fu_902_p1;
            else 
                stage0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_d1_assign_proc : process(icmp_ln118_reg_977_pp0_iter18_reg, zext_ln194_fu_869_p1, zext_ln177_fu_873_p1, bitcast_ln162_fu_877_p1, bitcast_ln141_fu_882_p1, zext_ln198_fu_886_p1, zext_ln189_fu_890_p1, bitcast_ln163_fu_894_p1, bitcast_ln142_fu_898_p1, ap_condition_1849, ap_condition_1854, ap_condition_1858, ap_condition_1862, ap_condition_1867, ap_condition_1872, ap_condition_1876, ap_condition_1880)
    begin
        if ((icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_1880)) then 
                stage0_d1 <= bitcast_ln142_fu_898_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1876)) then 
                stage0_d1 <= bitcast_ln163_fu_894_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1872)) then 
                stage0_d1 <= zext_ln189_fu_890_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1867)) then 
                stage0_d1 <= zext_ln198_fu_886_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1862)) then 
                stage0_d1 <= bitcast_ln141_fu_882_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1858)) then 
                stage0_d1 <= bitcast_ln162_fu_877_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1854)) then 
                stage0_d1 <= zext_ln177_fu_873_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1849)) then 
                stage0_d1 <= zext_ln194_fu_869_p1;
            else 
                stage0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stage0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter19_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            stage0_we0 <= ap_const_lv8_FF;
        else 
            stage0_we0 <= ap_const_lv8_0;
        end if; 
    end process;


    stage0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, mode, inverse, ap_block_pp0_stage0_11001, icmp_ln118_reg_977_pp0_iter18_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            stage0_we1 <= ap_const_lv8_FF;
        elsif ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_0) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (icmp_ln118_reg_977_pp0_iter18_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (inverse = ap_const_lv1_1) and (mode = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            stage0_we1 <= ap_const_lv8_3;
        else 
            stage0_we1 <= ap_const_lv8_0;
        end if; 
    end process;

    t_1_fu_436_p3 <= 
        zext_ln96_fu_418_p1 when (mode(0) = '1') else 
        in_m;
    t_2_fu_456_p3 <= 
        zext_ln90_fu_444_p1 when (inverse(0) = '1') else 
        in_t;
    t_fu_408_p4 <= in_m(9 downto 1);
    tmp1_1_fu_694_p2 <= std_logic_vector(unsigned(zext_ln171_fu_687_p1) - unsigned(zext_ln173_1_fu_691_p1));
    tmp1_3_fu_759_p2 <= std_logic_vector(signed(sext_ln192_fu_755_p1) + signed(sext_ln187_fu_742_p1));
    tmp1_4_fu_792_p2 <= std_logic_vector(unsigned(zext_ln171_1_fu_739_p1) - unsigned(sext_ln187_fu_742_p1));
    tmp1_5_fu_720_p2 <= std_logic_vector(unsigned(select_ln180_fu_712_p3) + unsigned(sext_ln117_fu_700_p1));
    tmp1_fu_833_p2 <= std_logic_vector(signed(sext_ln175_fu_829_p1) + signed(zext_ln171_1_fu_739_p1));
    tmp_1_fu_704_p3 <= tmp1_1_fu_694_p2(16 downto 16);
    tmp_2_fu_765_p3 <= tmp1_3_fu_759_p2(17 downto 17);
    tmp_3_fu_798_p3 <= tmp1_4_fu_792_p2(17 downto 17);
    tmp_fu_839_p3 <= tmp1_fu_833_p2(17 downto 17);
    tmp_im_3_fu_670_p1 <= in_buf_q0;
    tmp_im_fu_679_p1 <= in_buf_q0;
    tmp_re_3_fu_665_p1 <= in_buf_q1;
    tmp_re_fu_675_p1 <= in_buf_q1;
    trunc_ln103_1_fu_468_p4 <= t_2_fu_456_p3(10 downto 1);
    trunc_ln103_fu_464_p1 <= t_2_fu_456_p3(10 - 1 downto 0);
    trunc_ln105_fu_478_p1 <= m_2_fu_448_p3(10 - 1 downto 0);
    trunc_ln189_fu_865_p1 <= grp_monty_mul_fu_358_ap_return(16 - 1 downto 0);
    trunc_ln192_fu_746_p0 <= grp_monty_mul_fu_358_ap_return;
    trunc_ln192_fu_746_p1 <= trunc_ln192_fu_746_p0(16 - 1 downto 0);
    trunc_ln197_fu_806_p1 <= tmp1_4_fu_792_p2(16 - 1 downto 0);
    u_fu_683_p1 <= in_buf_q0(16 - 1 downto 0);
    v_fu_651_p1 <= in_buf_q0(16 - 1 downto 0);
    w_2_fu_642_p1 <= in_buf_q0(16 - 1 downto 0);
    x_im_fu_733_p1 <= in_buf_q1;
    x_re_fu_727_p1 <= in_buf_q0;
    xor_ln125_fu_620_p2 <= (bitcast_ln125_fu_617_p1 xor ap_const_lv64_8000000000000000);
    xor_ln135_fu_655_p2 <= (i_reg_1017 xor ap_const_lv10_200);
    xor_ln139_fu_606_p2 <= (grp_fu_392_p2 xor ap_const_lv10_200);
    xor_ln152_fu_590_p2 <= (grp_fu_388_p2 xor ap_const_lv10_200);
    zext_ln124_1_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln171_fu_556_p3),64));
    zext_ln124_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln124_fu_537_p2),64));
    zext_ln128_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln128_fu_547_p2),64));
    zext_ln135_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln135_fu_655_p2),64));
    zext_ln138_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_392_p2),64));
    zext_ln139_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln139_fu_606_p2),64));
    zext_ln151_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p2),64));
    zext_ln152_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln152_fu_590_p2),64));
    zext_ln171_1_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_reg_1165_pp0_iter13_reg),18));
    zext_ln171_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_fu_683_p1),17));
    zext_ln172_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_1017),64));
    zext_ln173_1_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_reg_1126),17));
    zext_ln173_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_392_p2),64));
    zext_ln177_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln177_reg_1229_pp0_iter17_reg),64));
    zext_ln184_1_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_2_fu_642_p1),18));
    zext_ln184_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p2),64));
    zext_ln189_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln189_reg_1234_pp0_iter18_reg),64));
    zext_ln194_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln194_reg_1219_pp0_iter17_reg),64));
    zext_ln198_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln198_reg_1224_pp0_iter18_reg),64));
    zext_ln90_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_1_fu_436_p3),11));
    zext_ln96_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_408_p4),10));
end behav;
