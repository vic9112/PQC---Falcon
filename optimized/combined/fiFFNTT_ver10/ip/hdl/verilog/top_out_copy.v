// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_out_copy (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        tmp_address0,
        tmp_ce0,
        tmp_q0,
        tmp_address1,
        tmp_ce1,
        tmp_q1,
        out_buf,
        mode,
        inverse
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [63:0] m_axi_gmem0_WDATA;
output  [7:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [63:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
output  [9:0] tmp_address0;
output   tmp_ce0;
input  [63:0] tmp_q0;
output  [9:0] tmp_address1;
output   tmp_ce1;
input  [63:0] tmp_q1;
input  [63:0] out_buf;
input   mode;
input   inverse;

reg ap_idle;
reg m_axi_gmem0_AWVALID;
reg[63:0] m_axi_gmem0_AWADDR;
reg m_axi_gmem0_WVALID;
reg[63:0] m_axi_gmem0_WDATA;
reg m_axi_gmem0_BREADY;
reg tmp_ce0;
reg tmp_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire   [0:0] mode_read_reg_394;
wire   [0:0] inverse_read_reg_389;
reg    ap_predicate_op75_writereq_state13;
reg    ap_predicate_op79_writereq_state13;
reg    ap_block_state13_io;
wire    ap_block_state14_pp0_stage0_iter13;
reg    ap_predicate_op95_write_state14;
reg    ap_predicate_op97_write_state14;
reg    ap_block_state14_io;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
reg    ap_predicate_op111_writeresp_state19;
reg    ap_predicate_op113_writeresp_state19;
reg    ap_block_state19_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln46_fu_217_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem0_blk_n_W;
reg    gmem0_blk_n_B;
reg   [60:0] reg_201;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] grp_fu_184_p1;
reg   [63:0] reg_205;
wire   [9:0] trunc_ln56_fu_234_p1;
reg   [9:0] trunc_ln56_reg_407;
reg   [9:0] trunc_ln56_reg_407_pp0_iter1_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter2_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter3_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter4_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter5_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter6_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter7_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter8_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter9_reg;
reg   [9:0] trunc_ln56_reg_407_pp0_iter10_reg;
reg   [9:0] tmp_addr_reg_412;
reg   [9:0] tmp_addr_reg_412_pp0_iter1_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter2_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter3_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter4_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter5_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter6_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter7_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter8_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter9_reg;
reg   [9:0] tmp_addr_reg_412_pp0_iter10_reg;
wire   [15:0] trunc_ln56_1_fu_243_p1;
reg   [15:0] trunc_ln56_1_reg_418;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter2_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter3_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter4_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter5_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter6_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter7_reg;
reg   [15:0] trunc_ln56_1_reg_418_pp0_iter8_reg;
wire   [15:0] grp_monty_mul_fu_179_ap_return;
reg   [15:0] tmp3_reg_424;
wire   [31:0] zext_ln62_fu_248_p1;
wire   [31:0] zext_ln58_fu_252_p1;
wire   [63:0] select_ln39_fu_365_p3;
reg   [63:0] select_ln39_reg_457;
wire   [15:0] grp_monty_mul_fu_179_x;
reg    grp_monty_mul_fu_179_ap_ce;
reg    ap_predicate_op45_call_state2;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call0;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call0;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call0;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call0;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call0;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call0;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call0;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call0;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call0;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call0;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call0;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call0;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call0;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call0;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call0;
reg    ap_block_state19_pp0_stage0_iter18_ignore_call0;
reg    ap_block_pp0_stage0_11001_ignoreCallOp45;
wire   [63:0] zext_ln46_fu_229_p1;
wire  signed [63:0] sext_ln62_fu_268_p1;
wire  signed [63:0] sext_ln58_fu_279_p1;
wire  signed [63:0] sext_ln52_fu_290_p1;
wire   [63:0] bitcast_ln62_fu_372_p1;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] bitcast_ln58_fu_377_p1;
reg   [10:0] j_fu_92;
wire   [10:0] add_ln46_fu_223_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_j_1;
reg   [31:0] grp_fu_184_p0;
wire   [63:0] zext_ln56_fu_263_p1;
wire   [63:0] grp_fu_187_p2;
wire   [12:0] shl_ln_fu_256_p3;
wire   [10:0] exponent_fu_301_p4;
wire   [11:0] zext_ln302_fu_311_p1;
wire   [11:0] exponent_1_fu_315_p2;
wire   [0:0] tmp_13_fu_327_p3;
wire   [10:0] add_ln302_fu_321_p2;
wire   [0:0] tmp_14_fu_335_p3;
wire   [10:0] select_ln305_fu_343_p3;
wire   [51:0] trunc_ln308_fu_351_p1;
wire   [0:0] select_ln39_fu_365_p0;
wire   [63:0] value_fu_355_p4;
reg    grp_fu_184_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_728;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_monty_mul grp_monty_mul_fu_179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x(grp_monty_mul_fu_179_x),
    .ap_return(grp_monty_mul_fu_179_ap_return),
    .ap_ce(grp_monty_mul_fu_179_ap_ce)
);

top_uitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_4_no_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_184_p0),
    .ce(grp_fu_184_ce),
    .dout(grp_fu_184_p1)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_217_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_92 <= add_ln46_fu_223_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_92 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        tmp_addr_reg_412_pp0_iter10_reg <= tmp_addr_reg_412_pp0_iter9_reg;
        tmp_addr_reg_412_pp0_iter2_reg <= tmp_addr_reg_412_pp0_iter1_reg;
        tmp_addr_reg_412_pp0_iter3_reg <= tmp_addr_reg_412_pp0_iter2_reg;
        tmp_addr_reg_412_pp0_iter4_reg <= tmp_addr_reg_412_pp0_iter3_reg;
        tmp_addr_reg_412_pp0_iter5_reg <= tmp_addr_reg_412_pp0_iter4_reg;
        tmp_addr_reg_412_pp0_iter6_reg <= tmp_addr_reg_412_pp0_iter5_reg;
        tmp_addr_reg_412_pp0_iter7_reg <= tmp_addr_reg_412_pp0_iter6_reg;
        tmp_addr_reg_412_pp0_iter8_reg <= tmp_addr_reg_412_pp0_iter7_reg;
        tmp_addr_reg_412_pp0_iter9_reg <= tmp_addr_reg_412_pp0_iter8_reg;
        trunc_ln56_1_reg_418_pp0_iter2_reg <= trunc_ln56_1_reg_418;
        trunc_ln56_1_reg_418_pp0_iter3_reg <= trunc_ln56_1_reg_418_pp0_iter2_reg;
        trunc_ln56_1_reg_418_pp0_iter4_reg <= trunc_ln56_1_reg_418_pp0_iter3_reg;
        trunc_ln56_1_reg_418_pp0_iter5_reg <= trunc_ln56_1_reg_418_pp0_iter4_reg;
        trunc_ln56_1_reg_418_pp0_iter6_reg <= trunc_ln56_1_reg_418_pp0_iter5_reg;
        trunc_ln56_1_reg_418_pp0_iter7_reg <= trunc_ln56_1_reg_418_pp0_iter6_reg;
        trunc_ln56_1_reg_418_pp0_iter8_reg <= trunc_ln56_1_reg_418_pp0_iter7_reg;
        trunc_ln56_reg_407_pp0_iter10_reg <= trunc_ln56_reg_407_pp0_iter9_reg;
        trunc_ln56_reg_407_pp0_iter2_reg <= trunc_ln56_reg_407_pp0_iter1_reg;
        trunc_ln56_reg_407_pp0_iter3_reg <= trunc_ln56_reg_407_pp0_iter2_reg;
        trunc_ln56_reg_407_pp0_iter4_reg <= trunc_ln56_reg_407_pp0_iter3_reg;
        trunc_ln56_reg_407_pp0_iter5_reg <= trunc_ln56_reg_407_pp0_iter4_reg;
        trunc_ln56_reg_407_pp0_iter6_reg <= trunc_ln56_reg_407_pp0_iter5_reg;
        trunc_ln56_reg_407_pp0_iter7_reg <= trunc_ln56_reg_407_pp0_iter6_reg;
        trunc_ln56_reg_407_pp0_iter8_reg <= trunc_ln56_reg_407_pp0_iter7_reg;
        trunc_ln56_reg_407_pp0_iter9_reg <= trunc_ln56_reg_407_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_addr_reg_412_pp0_iter1_reg <= tmp_addr_reg_412;
        trunc_ln56_reg_407_pp0_iter1_reg <= trunc_ln56_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (mode_read_reg_394 == 1'd1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (inverse_read_reg_389 == 1'd0) & (mode_read_reg_394 == 1'd0)))) begin
        reg_201 <= {{grp_fu_187_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (inverse_read_reg_389 == 1'd0) & (mode_read_reg_394 == 1'd0)))) begin
        reg_205 <= grp_fu_184_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (mode_read_reg_394 == 1'd1))) begin
        select_ln39_reg_457 <= select_ln39_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0))) begin
        tmp3_reg_424 <= grp_monty_mul_fu_179_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_217_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_addr_reg_412 <= zext_ln46_fu_229_p1;
        trunc_ln56_reg_407 <= trunc_ln56_fu_234_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (mode_read_reg_394 == 1'd0))) begin
        trunc_ln56_1_reg_418 <= trunc_ln56_1_fu_243_p1;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_217_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_92;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (mode_read_reg_394 == 1'd1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op79_writereq_state13 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op75_writereq_state13 == 1'b1)))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op113_writeresp_state19 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op111_writeresp_state19 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (mode_read_reg_394 == 1'd1)))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op97_write_state14 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op95_write_state14 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (mode_read_reg_394 == 1'd1)))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_184_ce = 1'b1;
    end else begin
        grp_fu_184_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_728)) begin
        if ((inverse_read_reg_389 == 1'd1)) begin
            grp_fu_184_p0 = zext_ln58_fu_252_p1;
        end else if ((inverse_read_reg_389 == 1'd0)) begin
            grp_fu_184_p0 = zext_ln62_fu_248_p1;
        end else begin
            grp_fu_184_p0 = 'bx;
        end
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp45) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_monty_mul_fu_179_ap_ce = 1'b1;
    end else begin
        grp_monty_mul_fu_179_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((mode_read_reg_394 == 1'd1)) begin
            m_axi_gmem0_AWADDR = sext_ln52_fu_290_p1;
        end else if ((ap_predicate_op79_writereq_state13 == 1'b1)) begin
            m_axi_gmem0_AWADDR = sext_ln58_fu_279_p1;
        end else if ((ap_predicate_op75_writereq_state13 == 1'b1)) begin
            m_axi_gmem0_AWADDR = sext_ln62_fu_268_p1;
        end else begin
            m_axi_gmem0_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (mode_read_reg_394 == 1'd1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op79_writereq_state13 == 1'b1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op75_writereq_state13 == 1'b1)))) begin
        m_axi_gmem0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op113_writeresp_state19 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_writeresp_state19 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (mode_read_reg_394 == 1'd1)))) begin
        m_axi_gmem0_BREADY = 1'b1;
    end else begin
        m_axi_gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((mode_read_reg_394 == 1'd1)) begin
            m_axi_gmem0_WDATA = select_ln39_reg_457;
        end else if ((ap_predicate_op97_write_state14 == 1'b1)) begin
            m_axi_gmem0_WDATA = bitcast_ln58_fu_377_p1;
        end else if ((ap_predicate_op95_write_state14 == 1'b1)) begin
            m_axi_gmem0_WDATA = bitcast_ln62_fu_372_p1;
        end else begin
            m_axi_gmem0_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op97_write_state14 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op95_write_state14 == 1'b1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (mode_read_reg_394 == 1'd1)))) begin
        m_axi_gmem0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln302_fu_321_p2 = ($signed(exponent_fu_301_p4) + $signed(11'd2039));

assign add_ln46_fu_223_p2 = (ap_sig_allocacmp_j_1 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_io)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp45 = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_io)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter18 == 1'b1) & (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0)))) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state14_io)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state13_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = (((m_axi_gmem0_AWREADY == 1'b0) & (mode_read_reg_394 == 1'd1)) | ((m_axi_gmem0_AWREADY == 1'b0) & (ap_predicate_op79_writereq_state13 == 1'b1)) | ((m_axi_gmem0_AWREADY == 1'b0) & (ap_predicate_op75_writereq_state13 == 1'b1)));
end

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = (((ap_predicate_op97_write_state14 == 1'b1) & (m_axi_gmem0_WREADY == 1'b0)) | ((ap_predicate_op95_write_state14 == 1'b1) & (m_axi_gmem0_WREADY == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_WREADY == 1'b0)));
end

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18 = (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18_ignore_call0 = (((ap_predicate_op113_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_predicate_op111_writeresp_state19 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((mode_read_reg_394 == 1'd1) & (m_axi_gmem0_BVALID == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_728 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (mode_read_reg_394 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op111_writeresp_state19 = ((inverse_read_reg_389 == 1'd0) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_writeresp_state19 = ((inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_call_state2 = ((inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op75_writereq_state13 = ((inverse_read_reg_389 == 1'd0) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_writereq_state13 = ((inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_write_state14 = ((inverse_read_reg_389 == 1'd0) & (mode_read_reg_394 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_write_state14 = ((inverse_read_reg_389 == 1'd1) & (mode_read_reg_394 == 1'd0));
end

assign bitcast_ln58_fu_377_p1 = reg_205;

assign bitcast_ln62_fu_372_p1 = reg_205;

assign exponent_1_fu_315_p2 = ($signed(zext_ln302_fu_311_p1) + $signed(12'd4087));

assign exponent_fu_301_p4 = {{tmp_q0[62:52]}};

assign grp_fu_187_p2 = (zext_ln56_fu_263_p1 + out_buf);

assign grp_monty_mul_fu_179_x = tmp_q1[15:0];

assign icmp_ln46_fu_217_p2 = ((ap_sig_allocacmp_j_1 == 11'd1024) ? 1'b1 : 1'b0);

assign inverse_read_reg_389 = inverse;

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd1;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_RREADY = 1'b0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 8'd255;

assign m_axi_gmem0_WUSER = 1'd0;

assign mode_read_reg_394 = mode;

assign select_ln305_fu_343_p3 = ((tmp_13_fu_327_p3[0:0] == 1'b1) ? 11'd0 : add_ln302_fu_321_p2);

assign select_ln39_fu_365_p0 = inverse;

assign select_ln39_fu_365_p3 = ((select_ln39_fu_365_p0[0:0] == 1'b1) ? value_fu_355_p4 : tmp_q0);

assign sext_ln52_fu_290_p1 = $signed(reg_201);

assign sext_ln58_fu_279_p1 = $signed(reg_201);

assign sext_ln62_fu_268_p1 = $signed(reg_201);

assign shl_ln_fu_256_p3 = {{trunc_ln56_reg_407_pp0_iter10_reg}, {3'd0}};

assign tmp_13_fu_327_p3 = exponent_1_fu_315_p2[32'd11];

assign tmp_14_fu_335_p3 = tmp_q0[32'd63];

assign tmp_address0 = tmp_addr_reg_412_pp0_iter10_reg;

assign tmp_address1 = zext_ln46_fu_229_p1;

assign trunc_ln308_fu_351_p1 = tmp_q0[51:0];

assign trunc_ln56_1_fu_243_p1 = tmp_q1[15:0];

assign trunc_ln56_fu_234_p1 = ap_sig_allocacmp_j_1[9:0];

assign value_fu_355_p4 = {{{tmp_14_fu_335_p3}, {select_ln305_fu_343_p3}}, {trunc_ln308_fu_351_p1}};

assign zext_ln302_fu_311_p1 = exponent_fu_301_p4;

assign zext_ln46_fu_229_p1 = ap_sig_allocacmp_j_1;

assign zext_ln56_fu_263_p1 = shl_ln_fu_256_p3;

assign zext_ln58_fu_252_p1 = tmp3_reg_424;

assign zext_ln62_fu_248_p1 = trunc_ln56_1_reg_418_pp0_iter8_reg;

endmodule //top_out_copy
