-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=7834,HLS_SYN_TPT=none,HLS_SYN_MEM=48,HLS_SYN_DSP=0,HLS_SYN_FF=30345,HLS_SYN_LUT=25710,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal in1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mode : STD_LOGIC_VECTOR (15 downto 0);
    signal mode_read_read_fu_110_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mode_read_reg_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal in2_read_reg_424 : STD_LOGIC_VECTOR (63 downto 0);
    signal in1_read_reg_429 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf1_ce0 : STD_LOGIC;
    signal buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf1_ce1 : STD_LOGIC;
    signal buf1_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf2_ce0 : STD_LOGIC;
    signal buf2_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf2_ce1 : STD_LOGIC;
    signal buf2_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_ce0 : STD_LOGIC;
    signal tmp_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_ce1 : STD_LOGIC;
    signal tmp_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_ap_start : STD_LOGIC;
    signal grp_in_copy_fu_128_ap_done : STD_LOGIC;
    signal grp_in_copy_fu_128_ap_idle : STD_LOGIC;
    signal grp_in_copy_fu_128_ap_ready : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_128_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_in_copy_fu_128_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_in_copy_fu_128_in_buf : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_in_copy_fu_128_buf1_ce0 : STD_LOGIC;
    signal grp_in_copy_fu_128_buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_in_copy_fu_128_buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_128_mode : STD_LOGIC;
    signal grp_in_copy_fu_129_ap_start : STD_LOGIC;
    signal grp_in_copy_fu_129_ap_done : STD_LOGIC;
    signal grp_in_copy_fu_129_ap_idle : STD_LOGIC;
    signal grp_in_copy_fu_129_ap_ready : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_in_copy_fu_129_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_in_copy_fu_129_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_in_copy_fu_129_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_in_copy_fu_129_buf1_ce0 : STD_LOGIC;
    signal grp_in_copy_fu_129_buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_in_copy_fu_129_buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_in_copy_fu_129_mode : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_ap_start : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_ap_done : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_ap_idle : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_ap_ready : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_ce0 : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_ce1 : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_buf1_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_221_buf1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_221_mode : STD_LOGIC;
    signal grp_fiFFNTT_fu_221_inverse : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_ap_start : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_ap_done : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_ap_idle : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_ap_ready : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_ce0 : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_ce1 : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_buf1_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_222_buf1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fiFFNTT_fu_222_mode : STD_LOGIC;
    signal grp_fiFFNTT_fu_222_inverse : STD_LOGIC;
    signal grp_out_copy_fu_359_ap_start : STD_LOGIC;
    signal grp_out_copy_fu_359_ap_done : STD_LOGIC;
    signal grp_out_copy_fu_359_ap_idle : STD_LOGIC;
    signal grp_out_copy_fu_359_ap_ready : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_out_copy_fu_359_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_out_copy_fu_359_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_out_copy_fu_359_tmp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_out_copy_fu_359_tmp_ce0 : STD_LOGIC;
    signal grp_out_copy_fu_359_tmp_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_out_copy_fu_359_tmp_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_out_copy_fu_359_tmp_ce1 : STD_LOGIC;
    signal grp_out_copy_fu_359_tmp_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_out_copy_fu_359_mode : STD_LOGIC;
    signal grp_out_copy_fu_359_inverse : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce1 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce1 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce1 : STD_LOGIC;
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_top_Pipeline_NEGATE_fu_415_ap_start : STD_LOGIC;
    signal grp_top_Pipeline_NEGATE_fu_415_ap_done : STD_LOGIC;
    signal grp_top_Pipeline_NEGATE_fu_415_ap_idle : STD_LOGIC;
    signal grp_top_Pipeline_NEGATE_fu_415_ap_ready : STD_LOGIC;
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_ce0 : STD_LOGIC;
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_top_Pipeline_NEGATE_fu_415_buf1_ce1 : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal grp_in_copy_fu_128_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_in_copy_fu_129_ap_start_reg : STD_LOGIC := '0';
    signal grp_fiFFNTT_fu_221_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_fiFFNTT_fu_222_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_out_copy_fu_359_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_top_Pipeline_NEGATE_fu_415_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_block_state13_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_predicate_op95_call_state25 : BOOLEAN;
    signal ap_block_state25_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_predicate_op105_call_state27 : BOOLEAN;
    signal ap_block_state27_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_predicate_op119_call_state29 : BOOLEAN;
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_in_copy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_buf : IN STD_LOGIC_VECTOR (63 downto 0);
        buf1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        mode : IN STD_LOGIC );
    end component;


    component top_fiFFNTT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        buf1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce1 : OUT STD_LOGIC;
        buf1_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        buf1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        mode : IN STD_LOGIC;
        inverse : IN STD_LOGIC );
    end component;


    component top_out_copy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        tmp_ce0 : OUT STD_LOGIC;
        tmp_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        tmp_ce1 : OUT STD_LOGIC;
        tmp_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        out_buf : IN STD_LOGIC_VECTOR (63 downto 0);
        mode : IN STD_LOGIC;
        inverse : IN STD_LOGIC );
    end component;


    component top_top_Pipeline_COMPLEX_MUL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce1 : OUT STD_LOGIC;
        buf1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf2_ce0 : OUT STD_LOGIC;
        buf2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf2_ce1 : OUT STD_LOGIC;
        buf2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        tmp_ce0 : OUT STD_LOGIC;
        tmp_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        tmp_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        tmp_ce1 : OUT STD_LOGIC;
        tmp_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp_d1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_top_Pipeline_NEGATE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        buf1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf1_ce1 : OUT STD_LOGIC;
        buf1_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_buf1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (7 downto 0);
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (7 downto 0);
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        in1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        in2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        mode : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component top_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    buf1_U : component top_buf1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf1_address0,
        ce0 => buf1_ce0,
        we0 => buf1_we0,
        d0 => buf1_d0,
        q0 => buf1_q0,
        address1 => buf1_address1,
        ce1 => buf1_ce1,
        we1 => buf1_we1,
        d1 => buf1_d1,
        q1 => buf1_q1);

    buf2_U : component top_buf1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf2_address0,
        ce0 => buf2_ce0,
        we0 => buf2_we0,
        d0 => buf2_d0,
        q0 => buf2_q0,
        address1 => buf2_address1,
        ce1 => buf2_ce1,
        we1 => buf2_we1,
        d1 => grp_fiFFNTT_fu_221_buf1_d1,
        q1 => buf2_q1);

    tmp_U : component top_buf1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tmp_address0,
        ce0 => tmp_ce0,
        we0 => tmp_we0,
        d0 => tmp_d0,
        q0 => tmp_q0,
        address1 => tmp_address1,
        ce1 => tmp_ce1,
        we1 => tmp_we1,
        d1 => tmp_d1,
        q1 => tmp_q1);

    grp_in_copy_fu_128 : component top_in_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_in_copy_fu_128_ap_start,
        ap_done => grp_in_copy_fu_128_ap_done,
        ap_idle => grp_in_copy_fu_128_ap_idle,
        ap_ready => grp_in_copy_fu_128_ap_ready,
        m_axi_gmem0_AWVALID => grp_in_copy_fu_128_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_in_copy_fu_128_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_in_copy_fu_128_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_in_copy_fu_128_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_in_copy_fu_128_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_in_copy_fu_128_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_in_copy_fu_128_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_in_copy_fu_128_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_in_copy_fu_128_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_in_copy_fu_128_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_in_copy_fu_128_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_in_copy_fu_128_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_in_copy_fu_128_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_in_copy_fu_128_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_in_copy_fu_128_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_in_copy_fu_128_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_in_copy_fu_128_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_in_copy_fu_128_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_in_copy_fu_128_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_in_copy_fu_128_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_in_copy_fu_128_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_in_copy_fu_128_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_in_copy_fu_128_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_in_copy_fu_128_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_in_copy_fu_128_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_in_copy_fu_128_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_in_copy_fu_128_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_in_copy_fu_128_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_in_copy_fu_128_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_in_copy_fu_128_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_in_copy_fu_128_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_in_copy_fu_128_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        in_buf => grp_in_copy_fu_128_in_buf,
        buf1_address0 => grp_in_copy_fu_128_buf1_address0,
        buf1_ce0 => grp_in_copy_fu_128_buf1_ce0,
        buf1_we0 => grp_in_copy_fu_128_buf1_we0,
        buf1_d0 => grp_in_copy_fu_128_buf1_d0,
        mode => grp_in_copy_fu_128_mode);

    grp_in_copy_fu_129 : component top_in_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_in_copy_fu_129_ap_start,
        ap_done => grp_in_copy_fu_129_ap_done,
        ap_idle => grp_in_copy_fu_129_ap_idle,
        ap_ready => grp_in_copy_fu_129_ap_ready,
        m_axi_gmem0_AWVALID => grp_in_copy_fu_129_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_in_copy_fu_129_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_in_copy_fu_129_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_in_copy_fu_129_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_in_copy_fu_129_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_in_copy_fu_129_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_in_copy_fu_129_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_in_copy_fu_129_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_in_copy_fu_129_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_in_copy_fu_129_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_in_copy_fu_129_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_in_copy_fu_129_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_in_copy_fu_129_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_in_copy_fu_129_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_in_copy_fu_129_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_in_copy_fu_129_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_in_copy_fu_129_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_in_copy_fu_129_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_in_copy_fu_129_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_in_copy_fu_129_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_in_copy_fu_129_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_in_copy_fu_129_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_in_copy_fu_129_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_in_copy_fu_129_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_in_copy_fu_129_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_in_copy_fu_129_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_in_copy_fu_129_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_in_copy_fu_129_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_in_copy_fu_129_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_in_copy_fu_129_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_in_copy_fu_129_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_in_copy_fu_129_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        in_buf => in1_read_reg_429,
        buf1_address0 => grp_in_copy_fu_129_buf1_address0,
        buf1_ce0 => grp_in_copy_fu_129_buf1_ce0,
        buf1_we0 => grp_in_copy_fu_129_buf1_we0,
        buf1_d0 => grp_in_copy_fu_129_buf1_d0,
        mode => grp_in_copy_fu_129_mode);

    grp_fiFFNTT_fu_221 : component top_fiFFNTT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fiFFNTT_fu_221_ap_start,
        ap_done => grp_fiFFNTT_fu_221_ap_done,
        ap_idle => grp_fiFFNTT_fu_221_ap_idle,
        ap_ready => grp_fiFFNTT_fu_221_ap_ready,
        buf1_address0 => grp_fiFFNTT_fu_221_buf1_address0,
        buf1_ce0 => grp_fiFFNTT_fu_221_buf1_ce0,
        buf1_we0 => grp_fiFFNTT_fu_221_buf1_we0,
        buf1_d0 => grp_fiFFNTT_fu_221_buf1_d0,
        buf1_q0 => grp_fiFFNTT_fu_221_buf1_q0,
        buf1_address1 => grp_fiFFNTT_fu_221_buf1_address1,
        buf1_ce1 => grp_fiFFNTT_fu_221_buf1_ce1,
        buf1_we1 => grp_fiFFNTT_fu_221_buf1_we1,
        buf1_d1 => grp_fiFFNTT_fu_221_buf1_d1,
        buf1_q1 => grp_fiFFNTT_fu_221_buf1_q1,
        mode => grp_fiFFNTT_fu_221_mode,
        inverse => grp_fiFFNTT_fu_221_inverse);

    grp_fiFFNTT_fu_222 : component top_fiFFNTT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fiFFNTT_fu_222_ap_start,
        ap_done => grp_fiFFNTT_fu_222_ap_done,
        ap_idle => grp_fiFFNTT_fu_222_ap_idle,
        ap_ready => grp_fiFFNTT_fu_222_ap_ready,
        buf1_address0 => grp_fiFFNTT_fu_222_buf1_address0,
        buf1_ce0 => grp_fiFFNTT_fu_222_buf1_ce0,
        buf1_we0 => grp_fiFFNTT_fu_222_buf1_we0,
        buf1_d0 => grp_fiFFNTT_fu_222_buf1_d0,
        buf1_q0 => grp_fiFFNTT_fu_222_buf1_q0,
        buf1_address1 => grp_fiFFNTT_fu_222_buf1_address1,
        buf1_ce1 => grp_fiFFNTT_fu_222_buf1_ce1,
        buf1_we1 => grp_fiFFNTT_fu_222_buf1_we1,
        buf1_d1 => grp_fiFFNTT_fu_222_buf1_d1,
        buf1_q1 => grp_fiFFNTT_fu_222_buf1_q1,
        mode => grp_fiFFNTT_fu_222_mode,
        inverse => grp_fiFFNTT_fu_222_inverse);

    grp_out_copy_fu_359 : component top_out_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_out_copy_fu_359_ap_start,
        ap_done => grp_out_copy_fu_359_ap_done,
        ap_idle => grp_out_copy_fu_359_ap_idle,
        ap_ready => grp_out_copy_fu_359_ap_ready,
        m_axi_gmem0_AWVALID => grp_out_copy_fu_359_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_out_copy_fu_359_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_out_copy_fu_359_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_out_copy_fu_359_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_out_copy_fu_359_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_out_copy_fu_359_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_out_copy_fu_359_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_out_copy_fu_359_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_out_copy_fu_359_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_out_copy_fu_359_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_out_copy_fu_359_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_out_copy_fu_359_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_out_copy_fu_359_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_out_copy_fu_359_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_out_copy_fu_359_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_out_copy_fu_359_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_out_copy_fu_359_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_out_copy_fu_359_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_out_copy_fu_359_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_out_copy_fu_359_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_out_copy_fu_359_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_out_copy_fu_359_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_out_copy_fu_359_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_out_copy_fu_359_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_out_copy_fu_359_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_out_copy_fu_359_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_out_copy_fu_359_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_out_copy_fu_359_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_out_copy_fu_359_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_out_copy_fu_359_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_out_copy_fu_359_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_out_copy_fu_359_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        tmp_address0 => grp_out_copy_fu_359_tmp_address0,
        tmp_ce0 => grp_out_copy_fu_359_tmp_ce0,
        tmp_q0 => grp_out_copy_fu_359_tmp_q0,
        tmp_address1 => grp_out_copy_fu_359_tmp_address1,
        tmp_ce1 => grp_out_copy_fu_359_tmp_ce1,
        tmp_q1 => grp_out_copy_fu_359_tmp_q1,
        out_buf => in1_read_reg_429,
        mode => grp_out_copy_fu_359_mode,
        inverse => grp_out_copy_fu_359_inverse);

    grp_top_Pipeline_COMPLEX_MUL_fu_408 : component top_top_Pipeline_COMPLEX_MUL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start,
        ap_done => grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done,
        ap_idle => grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_idle,
        ap_ready => grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_ready,
        buf1_address0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address0,
        buf1_ce0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce0,
        buf1_q0 => buf1_q0,
        buf1_address1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address1,
        buf1_ce1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce1,
        buf1_q1 => buf1_q1,
        buf2_address0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address0,
        buf2_ce0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce0,
        buf2_q0 => buf2_q0,
        buf2_address1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address1,
        buf2_ce1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce1,
        buf2_q1 => buf2_q1,
        tmp_address0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address0,
        tmp_ce0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce0,
        tmp_we0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we0,
        tmp_d0 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d0,
        tmp_address1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address1,
        tmp_ce1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce1,
        tmp_we1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we1,
        tmp_d1 => grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d1);

    grp_top_Pipeline_NEGATE_fu_415 : component top_top_Pipeline_NEGATE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_top_Pipeline_NEGATE_fu_415_ap_start,
        ap_done => grp_top_Pipeline_NEGATE_fu_415_ap_done,
        ap_idle => grp_top_Pipeline_NEGATE_fu_415_ap_idle,
        ap_ready => grp_top_Pipeline_NEGATE_fu_415_ap_ready,
        buf1_address0 => grp_top_Pipeline_NEGATE_fu_415_buf1_address0,
        buf1_ce0 => grp_top_Pipeline_NEGATE_fu_415_buf1_ce0,
        buf1_we0 => grp_top_Pipeline_NEGATE_fu_415_buf1_we0,
        buf1_d0 => grp_top_Pipeline_NEGATE_fu_415_buf1_d0,
        buf1_address1 => grp_top_Pipeline_NEGATE_fu_415_buf1_address1,
        buf1_ce1 => grp_top_Pipeline_NEGATE_fu_415_buf1_ce1,
        buf1_q1 => buf1_q1);

    control_s_axi_U : component top_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        in1 => in1,
        in2 => in2,
        mode => mode,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component top_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_DW => 64,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARLEN => gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => grp_out_copy_fu_359_m_axi_gmem0_AWADDR,
        I_AWLEN => grp_out_copy_fu_359_m_axi_gmem0_AWLEN,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => grp_out_copy_fu_359_m_axi_gmem0_WDATA,
        I_WSTRB => grp_out_copy_fu_359_m_axi_gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fiFFNTT_fu_221_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fiFFNTT_fu_221_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
                    grp_fiFFNTT_fu_221_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fiFFNTT_fu_221_ap_ready = ap_const_logic_1)) then 
                    grp_fiFFNTT_fu_221_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fiFFNTT_fu_222_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fiFFNTT_fu_222_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
                    grp_fiFFNTT_fu_222_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fiFFNTT_fu_222_ap_ready = ap_const_logic_1)) then 
                    grp_fiFFNTT_fu_222_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_in_copy_fu_128_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_in_copy_fu_128_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
                    grp_in_copy_fu_128_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_in_copy_fu_128_ap_ready = ap_const_logic_1)) then 
                    grp_in_copy_fu_128_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_in_copy_fu_129_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_in_copy_fu_129_ap_start_reg <= ap_const_logic_0;
            else
                if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
                    grp_in_copy_fu_129_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_in_copy_fu_129_ap_ready = ap_const_logic_1)) then 
                    grp_in_copy_fu_129_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_out_copy_fu_359_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_out_copy_fu_359_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
                    grp_out_copy_fu_359_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_out_copy_fu_359_ap_ready = ap_const_logic_1)) then 
                    grp_out_copy_fu_359_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_top_Pipeline_NEGATE_fu_415_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_top_Pipeline_NEGATE_fu_415_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_top_Pipeline_NEGATE_fu_415_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_top_Pipeline_NEGATE_fu_415_ap_ready = ap_const_logic_1)) then 
                    grp_top_Pipeline_NEGATE_fu_415_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                in1_read_reg_429 <= in1;
                in2_read_reg_424 <= in2;
                mode_read_reg_420 <= mode;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, mode_read_read_fu_110_p2, mode_read_reg_420, grp_in_copy_fu_128_ap_done, grp_fiFFNTT_fu_221_ap_done, grp_fiFFNTT_fu_222_ap_done, grp_out_copy_fu_359_ap_done, grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done, grp_top_Pipeline_NEGATE_fu_415_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state7, ap_CS_fsm_state27, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_block_state13_on_subcall_done, ap_block_state5_on_subcall_done, ap_block_state25_on_subcall_done, ap_block_state27_on_subcall_done, ap_block_state29_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not((mode_read_read_fu_110_p2 = ap_const_lv16_4)) and not((mode_read_read_fu_110_p2 = ap_const_lv16_5)) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (mode_read_read_fu_110_p2 = ap_const_lv16_4))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (mode_read_read_fu_110_p2 = ap_const_lv16_5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_in_copy_fu_128_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_in_copy_fu_128_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_top_Pipeline_NEGATE_fu_415_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_out_copy_fu_359_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if ((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and (ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if ((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and (ap_const_boolean_0 = ap_block_state27_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if ((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and (ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_fiFFNTT_fu_222_ap_done)
    begin
        if ((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(ap_block_state13_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state13_on_subcall_done)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_in_copy_fu_128_ap_done)
    begin
        if ((grp_in_copy_fu_128_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_fiFFNTT_fu_222_ap_done)
    begin
        if ((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_top_Pipeline_NEGATE_fu_415_ap_done)
    begin
        if ((grp_top_Pipeline_NEGATE_fu_415_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_fiFFNTT_fu_222_ap_done)
    begin
        if ((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_out_copy_fu_359_ap_done)
    begin
        if ((grp_out_copy_fu_359_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(ap_block_state25_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state25_on_subcall_done)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(ap_block_state27_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state27_on_subcall_done)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(ap_block_state29_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state29_on_subcall_done)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_in_copy_fu_128_ap_done)
    begin
        if ((grp_in_copy_fu_128_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_fiFFNTT_fu_221_ap_done)
    begin
        if ((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done)
    begin
        if ((grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state13_on_subcall_done_assign_proc : process(mode_read_reg_420, grp_out_copy_fu_359_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_5));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_ap_done, grp_in_copy_fu_129_ap_done, ap_predicate_op95_call_state25)
    begin
                ap_block_state25_on_subcall_done <= (((ap_predicate_op95_call_state25 = ap_const_boolean_1) and (grp_in_copy_fu_129_ap_done = ap_const_logic_0)) or ((grp_in_copy_fu_129_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_1)) or ((grp_in_copy_fu_129_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_2)) or ((grp_in_copy_fu_129_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_3)) or ((grp_in_copy_fu_128_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_0)));
    end process;


    ap_block_state27_on_subcall_done_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_221_ap_done, grp_fiFFNTT_fu_222_ap_done, ap_predicate_op105_call_state27)
    begin
                ap_block_state27_on_subcall_done <= (((ap_predicate_op105_call_state27 = ap_const_boolean_1) and (grp_fiFFNTT_fu_222_ap_done = ap_const_logic_0)) or ((grp_fiFFNTT_fu_222_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_1)) or ((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_2)) or ((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_3)) or ((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_0)));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(mode_read_reg_420, grp_out_copy_fu_359_ap_done, ap_predicate_op119_call_state29)
    begin
                ap_block_state29_on_subcall_done <= (((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_1)) or ((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_2)) or ((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_3)) or ((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (mode_read_reg_420 = ap_const_lv16_0)) or ((grp_out_copy_fu_359_ap_done = ap_const_logic_0) and (ap_predicate_op119_call_state29 = ap_const_boolean_1)));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(grp_in_copy_fu_128_ap_done, grp_fiFFNTT_fu_221_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_fiFFNTT_fu_221_ap_done = ap_const_logic_0) or (grp_in_copy_fu_128_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13, ap_block_state13_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op105_call_state27_assign_proc : process(mode_read_reg_420)
    begin
                ap_predicate_op105_call_state27 <= (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)));
    end process;


    ap_predicate_op119_call_state29_assign_proc : process(mode_read_reg_420)
    begin
                ap_predicate_op119_call_state29 <= (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)));
    end process;


    ap_predicate_op95_call_state25_assign_proc : process(mode_read_reg_420)
    begin
                ap_predicate_op95_call_state25 <= (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13, ap_block_state13_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    buf1_address0_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_buf1_address0, grp_in_copy_fu_129_buf1_address0, grp_fiFFNTT_fu_221_buf1_address0, grp_fiFFNTT_fu_222_buf1_address0, grp_out_copy_fu_359_tmp_address0, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address0, grp_top_Pipeline_NEGATE_fu_415_buf1_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_address0 <= grp_top_Pipeline_NEGATE_fu_415_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf1_address0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            buf1_address0 <= grp_out_copy_fu_359_tmp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_address0 <= grp_fiFFNTT_fu_222_buf1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_address0 <= grp_fiFFNTT_fu_221_buf1_address0;
        elsif (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            buf1_address0 <= grp_in_copy_fu_129_buf1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_address0 <= grp_in_copy_fu_128_buf1_address0;
        else 
            buf1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf1_address1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_221_buf1_address1, grp_fiFFNTT_fu_222_buf1_address1, grp_out_copy_fu_359_tmp_address1, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address1, grp_top_Pipeline_NEGATE_fu_415_buf1_address1, ap_CS_fsm_state5, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_address1 <= grp_top_Pipeline_NEGATE_fu_415_buf1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf1_address1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            buf1_address1 <= grp_out_copy_fu_359_tmp_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_address1 <= grp_fiFFNTT_fu_222_buf1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_address1 <= grp_fiFFNTT_fu_221_buf1_address1;
        else 
            buf1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf1_ce0_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_buf1_ce0, grp_in_copy_fu_129_buf1_ce0, grp_fiFFNTT_fu_221_buf1_ce0, grp_fiFFNTT_fu_222_buf1_ce0, grp_out_copy_fu_359_tmp_ce0, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce0, grp_top_Pipeline_NEGATE_fu_415_buf1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_ce0 <= grp_top_Pipeline_NEGATE_fu_415_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf1_ce0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            buf1_ce0 <= grp_out_copy_fu_359_tmp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_ce0 <= grp_fiFFNTT_fu_222_buf1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_ce0 <= grp_fiFFNTT_fu_221_buf1_ce0;
        elsif (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            buf1_ce0 <= grp_in_copy_fu_129_buf1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_ce0 <= grp_in_copy_fu_128_buf1_ce0;
        else 
            buf1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_ce1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_221_buf1_ce1, grp_fiFFNTT_fu_222_buf1_ce1, grp_out_copy_fu_359_tmp_ce1, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce1, grp_top_Pipeline_NEGATE_fu_415_buf1_ce1, ap_CS_fsm_state5, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state29, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_ce1 <= grp_top_Pipeline_NEGATE_fu_415_buf1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf1_ce1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            buf1_ce1 <= grp_out_copy_fu_359_tmp_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_ce1 <= grp_fiFFNTT_fu_222_buf1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_ce1 <= grp_fiFFNTT_fu_221_buf1_ce1;
        else 
            buf1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_d0_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_buf1_d0, grp_in_copy_fu_129_buf1_d0, grp_fiFFNTT_fu_221_buf1_d0, grp_fiFFNTT_fu_222_buf1_d0, grp_top_Pipeline_NEGATE_fu_415_buf1_d0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_d0 <= grp_top_Pipeline_NEGATE_fu_415_buf1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_d0 <= grp_fiFFNTT_fu_222_buf1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_d0 <= grp_fiFFNTT_fu_221_buf1_d0;
        elsif (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            buf1_d0 <= grp_in_copy_fu_129_buf1_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_d0 <= grp_in_copy_fu_128_buf1_d0;
        else 
            buf1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf1_d1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_221_buf1_d1, grp_fiFFNTT_fu_222_buf1_d1, ap_CS_fsm_state5, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_d1 <= grp_fiFFNTT_fu_222_buf1_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_d1 <= grp_fiFFNTT_fu_221_buf1_d1;
        else 
            buf1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf1_we0_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_buf1_we0, grp_in_copy_fu_129_buf1_we0, grp_fiFFNTT_fu_221_buf1_we0, grp_fiFFNTT_fu_222_buf1_we0, grp_top_Pipeline_NEGATE_fu_415_buf1_we0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            buf1_we0 <= grp_top_Pipeline_NEGATE_fu_415_buf1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_we0 <= grp_fiFFNTT_fu_222_buf1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_we0 <= grp_fiFFNTT_fu_221_buf1_we0;
        elsif (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            buf1_we0 <= grp_in_copy_fu_129_buf1_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_we0 <= grp_in_copy_fu_128_buf1_we0;
        else 
            buf1_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    buf1_we1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_221_buf1_we1, grp_fiFFNTT_fu_222_buf1_we1, ap_CS_fsm_state5, ap_CS_fsm_state27, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            buf1_we1 <= grp_fiFFNTT_fu_222_buf1_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            buf1_we1 <= grp_fiFFNTT_fu_221_buf1_we1;
        else 
            buf1_we1 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    buf2_address0_assign_proc : process(grp_in_copy_fu_128_buf1_address0, grp_fiFFNTT_fu_221_buf1_address0, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address0, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf2_address0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_address0 <= grp_fiFFNTT_fu_221_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf2_address0 <= grp_in_copy_fu_128_buf1_address0;
        else 
            buf2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf2_address1_assign_proc : process(grp_fiFFNTT_fu_221_buf1_address1, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf2_address1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_address1 <= grp_fiFFNTT_fu_221_buf1_address1;
        else 
            buf2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf2_ce0_assign_proc : process(grp_in_copy_fu_128_buf1_ce0, grp_fiFFNTT_fu_221_buf1_ce0, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf2_ce0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_ce0 <= grp_fiFFNTT_fu_221_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf2_ce0 <= grp_in_copy_fu_128_buf1_ce0;
        else 
            buf2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf2_ce1_assign_proc : process(grp_fiFFNTT_fu_221_buf1_ce1, grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf2_ce1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_buf2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_ce1 <= grp_fiFFNTT_fu_221_buf1_ce1;
        else 
            buf2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf2_d0_assign_proc : process(grp_in_copy_fu_128_buf1_d0, grp_fiFFNTT_fu_221_buf1_d0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_d0 <= grp_fiFFNTT_fu_221_buf1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf2_d0 <= grp_in_copy_fu_128_buf1_d0;
        else 
            buf2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf2_we0_assign_proc : process(grp_in_copy_fu_128_buf1_we0, grp_fiFFNTT_fu_221_buf1_we0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_we0 <= grp_fiFFNTT_fu_221_buf1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf2_we0 <= grp_in_copy_fu_128_buf1_we0;
        else 
            buf2_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    buf2_we1_assign_proc : process(grp_fiFFNTT_fu_221_buf1_we1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf2_we1 <= grp_fiFFNTT_fu_221_buf1_we1;
        else 
            buf2_we1 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    gmem0_ARADDR_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_m_axi_gmem0_ARADDR, grp_in_copy_fu_129_m_axi_gmem0_ARADDR, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25)
    begin
        if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            gmem0_ARADDR <= grp_in_copy_fu_129_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            gmem0_ARADDR <= grp_in_copy_fu_128_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_m_axi_gmem0_ARLEN, grp_in_copy_fu_129_m_axi_gmem0_ARLEN, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25)
    begin
        if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            gmem0_ARLEN <= grp_in_copy_fu_129_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            gmem0_ARLEN <= grp_in_copy_fu_128_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_m_axi_gmem0_ARVALID, grp_in_copy_fu_129_m_axi_gmem0_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25)
    begin
        if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            gmem0_ARVALID <= grp_in_copy_fu_129_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            gmem0_ARVALID <= grp_in_copy_fu_128_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(mode_read_reg_420, grp_out_copy_fu_359_m_axi_gmem0_AWVALID, ap_CS_fsm_state12, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            gmem0_AWVALID <= grp_out_copy_fu_359_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(mode_read_reg_420, grp_out_copy_fu_359_m_axi_gmem0_BREADY, ap_CS_fsm_state12, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            gmem0_BREADY <= grp_out_copy_fu_359_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(mode_read_reg_420, grp_in_copy_fu_128_m_axi_gmem0_RREADY, grp_in_copy_fu_129_m_axi_gmem0_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25)
    begin
        if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            gmem0_RREADY <= grp_in_copy_fu_129_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            gmem0_RREADY <= grp_in_copy_fu_128_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(mode_read_reg_420, grp_out_copy_fu_359_m_axi_gmem0_WVALID, ap_CS_fsm_state12, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            gmem0_WVALID <= grp_out_copy_fu_359_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_fiFFNTT_fu_221_ap_start <= grp_fiFFNTT_fu_221_ap_start_reg;

    grp_fiFFNTT_fu_221_buf1_q0_assign_proc : process(mode_read_reg_420, buf1_q0, buf2_q0, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fiFFNTT_fu_221_buf1_q0 <= buf2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            grp_fiFFNTT_fu_221_buf1_q0 <= buf1_q0;
        else 
            grp_fiFFNTT_fu_221_buf1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fiFFNTT_fu_221_buf1_q1_assign_proc : process(mode_read_reg_420, buf1_q1, buf2_q1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fiFFNTT_fu_221_buf1_q1 <= buf2_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            grp_fiFFNTT_fu_221_buf1_q1 <= buf1_q1;
        else 
            grp_fiFFNTT_fu_221_buf1_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fiFFNTT_fu_221_inverse_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3))) then 
            grp_fiFFNTT_fu_221_inverse <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            grp_fiFFNTT_fu_221_inverse <= ap_const_logic_0;
        else 
            grp_fiFFNTT_fu_221_inverse <= 'X';
        end if; 
    end process;


    grp_fiFFNTT_fu_221_mode_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state27)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            grp_fiFFNTT_fu_221_mode <= ap_const_logic_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            grp_fiFFNTT_fu_221_mode <= ap_const_logic_1;
        else 
            grp_fiFFNTT_fu_221_mode <= 'X';
        end if; 
    end process;

    grp_fiFFNTT_fu_222_ap_start <= grp_fiFFNTT_fu_222_ap_start_reg;

    grp_fiFFNTT_fu_222_buf1_q0_assign_proc : process(mode_read_reg_420, buf1_q0, tmp_q0, ap_CS_fsm_state27, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            grp_fiFFNTT_fu_222_buf1_q0 <= buf1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fiFFNTT_fu_222_buf1_q0 <= tmp_q0;
        else 
            grp_fiFFNTT_fu_222_buf1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fiFFNTT_fu_222_buf1_q1_assign_proc : process(mode_read_reg_420, buf1_q1, tmp_q1, ap_CS_fsm_state27, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            grp_fiFFNTT_fu_222_buf1_q1 <= buf1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fiFFNTT_fu_222_buf1_q1 <= tmp_q1;
        else 
            grp_fiFFNTT_fu_222_buf1_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fiFFNTT_fu_222_inverse_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state27, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            grp_fiFFNTT_fu_222_inverse <= ap_const_logic_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state27) and (mode_read_reg_420 = ap_const_lv16_1)))) then 
            grp_fiFFNTT_fu_222_inverse <= ap_const_logic_1;
        else 
            grp_fiFFNTT_fu_222_inverse <= 'X';
        end if; 
    end process;

    grp_fiFFNTT_fu_222_mode <= ap_const_logic_1;
    grp_in_copy_fu_128_ap_start <= grp_in_copy_fu_128_ap_start_reg;

    grp_in_copy_fu_128_in_buf_assign_proc : process(mode_read_reg_420, in2_read_reg_424, in1_read_reg_429, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_in_copy_fu_128_in_buf <= in2_read_reg_424;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_0)))) then 
            grp_in_copy_fu_128_in_buf <= in1_read_reg_429;
        else 
            grp_in_copy_fu_128_in_buf <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_in_copy_fu_128_mode <= ap_const_logic_1;
    grp_in_copy_fu_129_ap_start <= grp_in_copy_fu_129_ap_start_reg;

    grp_in_copy_fu_129_mode_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state25)
    begin
        if (((not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_1)))) then 
            grp_in_copy_fu_129_mode <= ap_const_logic_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            grp_in_copy_fu_129_mode <= ap_const_logic_0;
        else 
            grp_in_copy_fu_129_mode <= 'X';
        end if; 
    end process;

    grp_out_copy_fu_359_ap_start <= grp_out_copy_fu_359_ap_start_reg;

    grp_out_copy_fu_359_inverse_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            grp_out_copy_fu_359_inverse <= ap_const_logic_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5)))) then 
            grp_out_copy_fu_359_inverse <= ap_const_logic_1;
        else 
            grp_out_copy_fu_359_inverse <= 'X';
        end if; 
    end process;


    grp_out_copy_fu_359_mode_assign_proc : process(mode_read_reg_420, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)))) then 
            grp_out_copy_fu_359_mode <= ap_const_logic_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            grp_out_copy_fu_359_mode <= ap_const_logic_1;
        else 
            grp_out_copy_fu_359_mode <= 'X';
        end if; 
    end process;


    grp_out_copy_fu_359_tmp_q0_assign_proc : process(mode_read_reg_420, buf1_q0, tmp_q0, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            grp_out_copy_fu_359_tmp_q0 <= buf1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            grp_out_copy_fu_359_tmp_q0 <= tmp_q0;
        else 
            grp_out_copy_fu_359_tmp_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_out_copy_fu_359_tmp_q1_assign_proc : process(mode_read_reg_420, buf1_q1, tmp_q1, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_2)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_3)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (mode_read_reg_420 = ap_const_lv16_0)) or (not((mode_read_reg_420 = ap_const_lv16_5)) and not((mode_read_reg_420 = ap_const_lv16_4)) and not((mode_read_reg_420 = ap_const_lv16_1)) and not((mode_read_reg_420 = ap_const_lv16_2)) and not((mode_read_reg_420 = ap_const_lv16_3)) and not((mode_read_reg_420 = ap_const_lv16_0)) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            grp_out_copy_fu_359_tmp_q1 <= buf1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            grp_out_copy_fu_359_tmp_q1 <= tmp_q1;
        else 
            grp_out_copy_fu_359_tmp_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start <= grp_top_Pipeline_COMPLEX_MUL_fu_408_ap_start_reg;
    grp_top_Pipeline_NEGATE_fu_415_ap_start <= grp_top_Pipeline_NEGATE_fu_415_ap_start_reg;
    mode_read_read_fu_110_p2 <= mode;

    tmp_address0_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_222_buf1_address0, grp_out_copy_fu_359_tmp_address0, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_address0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            tmp_address0 <= grp_out_copy_fu_359_tmp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_address0 <= grp_fiFFNTT_fu_222_buf1_address0;
        else 
            tmp_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_address1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_222_buf1_address1, grp_out_copy_fu_359_tmp_address1, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address1, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_address1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            tmp_address1 <= grp_out_copy_fu_359_tmp_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_address1 <= grp_fiFFNTT_fu_222_buf1_address1;
        else 
            tmp_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    tmp_ce0_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_222_buf1_ce0, grp_out_copy_fu_359_tmp_ce0, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_ce0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            tmp_ce0 <= grp_out_copy_fu_359_tmp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_ce0 <= grp_fiFFNTT_fu_222_buf1_ce0;
        else 
            tmp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_ce1_assign_proc : process(mode_read_reg_420, grp_fiFFNTT_fu_222_buf1_ce1, grp_out_copy_fu_359_tmp_ce1, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce1, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_ce1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (mode_read_reg_420 = ap_const_lv16_5))) then 
            tmp_ce1 <= grp_out_copy_fu_359_tmp_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_ce1 <= grp_fiFFNTT_fu_222_buf1_ce1;
        else 
            tmp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_d0_assign_proc : process(grp_fiFFNTT_fu_222_buf1_d0, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_d0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_d0 <= grp_fiFFNTT_fu_222_buf1_d0;
        else 
            tmp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_d1_assign_proc : process(grp_fiFFNTT_fu_222_buf1_d1, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_d1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_d1 <= grp_fiFFNTT_fu_222_buf1_d1;
        else 
            tmp_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_we0_assign_proc : process(grp_fiFFNTT_fu_222_buf1_we0, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_we0 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_we0 <= grp_fiFFNTT_fu_222_buf1_we0;
        else 
            tmp_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    tmp_we1_assign_proc : process(grp_fiFFNTT_fu_222_buf1_we1, grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_we1 <= grp_top_Pipeline_COMPLEX_MUL_fu_408_tmp_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            tmp_we1 <= grp_fiFFNTT_fu_222_buf1_we1;
        else 
            tmp_we1 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

end behav;
