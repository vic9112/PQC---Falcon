// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_MUL_RE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf1_address0,
        buf1_ce0,
        buf1_q0,
        buf1_address1,
        buf1_ce1,
        buf1_q1,
        buf2_address0,
        buf2_ce0,
        buf2_q0,
        buf2_address1,
        buf2_ce1,
        buf2_q1,
        tmp_address0,
        tmp_ce0,
        tmp_we0,
        tmp_d0,
        grp_d_add_fu_324_p_din1,
        grp_d_add_fu_324_p_din2,
        grp_d_add_fu_324_p_dout0,
        grp_d_add_fu_324_p_ce,
        grp_d_mul_fu_329_p_din1,
        grp_d_mul_fu_329_p_din2,
        grp_d_mul_fu_329_p_dout0,
        grp_d_mul_fu_329_p_ce,
        grp_d_mul_fu_334_p_din1,
        grp_d_mul_fu_334_p_din2,
        grp_d_mul_fu_334_p_dout0,
        grp_d_mul_fu_334_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] buf1_address0;
output   buf1_ce0;
input  [63:0] buf1_q0;
output  [9:0] buf1_address1;
output   buf1_ce1;
input  [63:0] buf1_q1;
output  [9:0] buf2_address0;
output   buf2_ce0;
input  [63:0] buf2_q0;
output  [9:0] buf2_address1;
output   buf2_ce1;
input  [63:0] buf2_q1;
output  [9:0] tmp_address0;
output   tmp_ce0;
output  [7:0] tmp_we0;
output  [63:0] tmp_d0;
output  [63:0] grp_d_add_fu_324_p_din1;
output  [63:0] grp_d_add_fu_324_p_din2;
input  [63:0] grp_d_add_fu_324_p_dout0;
output   grp_d_add_fu_324_p_ce;
output  [63:0] grp_d_mul_fu_329_p_din1;
output  [63:0] grp_d_mul_fu_329_p_din2;
input  [63:0] grp_d_mul_fu_329_p_dout0;
output   grp_d_mul_fu_329_p_ce;
output  [63:0] grp_d_mul_fu_334_p_din1;
output  [63:0] grp_d_mul_fu_334_p_din2;
input  [63:0] grp_d_mul_fu_334_p_dout0;
output   grp_d_mul_fu_334_p_ce;

reg ap_idle;
reg buf1_ce0;
reg buf1_ce1;
reg buf2_ce0;
reg buf2_ce1;
reg tmp_ce0;
reg[7:0] tmp_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln67_fu_142_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln67_fu_154_p1;
reg   [63:0] zext_ln67_reg_246;
reg   [63:0] zext_ln67_reg_246_pp0_iter1_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter2_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter3_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter4_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter5_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter6_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter7_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter8_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter9_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter10_reg;
reg   [63:0] zext_ln67_reg_246_pp0_iter11_reg;
reg   [63:0] buf1_load_reg_271;
reg   [63:0] buf2_load_reg_276;
reg   [63:0] buf1_load_1_reg_281;
reg   [63:0] buf2_load_1_reg_286;
wire   [63:0] bitcast_ln69_fu_183_p1;
wire   [63:0] bitcast_ln69_1_fu_187_p1;
wire   [63:0] bitcast_ln69_2_fu_191_p1;
wire   [63:0] bitcast_ln69_3_fu_195_p1;
reg   [63:0] tmp_4_reg_311;
reg   [63:0] converter_reg_316;
wire   [63:0] bitcast_ln321_fu_226_p1;
reg   [63:0] tmp_9_reg_326;
reg    grp_d_mul_fu_116_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call9;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call9;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call9;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call9;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call9;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call9;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call9;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call9;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call9;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call9;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call9;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call9;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call9;
wire    ap_block_pp0_stage0_11001_ignoreCallOp46;
reg    grp_d_mul_fu_122_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call19;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call19;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call19;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call19;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call19;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call19;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call19;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call19;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call19;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call19;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call19;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call19;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call19;
wire    ap_block_pp0_stage0_11001_ignoreCallOp49;
reg    grp_d_add_fu_128_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call25;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call25;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call25;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call25;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call25;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call25;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call25;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call25;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call25;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call25;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call25;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call25;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call25;
wire    ap_block_pp0_stage0_11001_ignoreCallOp63;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln69_fu_172_p1;
reg   [9:0] k_fu_50;
wire   [9:0] add_ln67_fu_148_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_k_1;
wire   [8:0] trunc_ln69_fu_160_p1;
wire   [9:0] zext_ln_fu_164_p3;
wire   [63:0] tmp_8_fu_199_p1;
wire   [0:0] tmp_5_fu_202_p3;
wire   [0:0] p_Repl2_s_fu_210_p2;
wire   [63:0] p_Result_s_fu_216_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln67_fu_142_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_50 <= add_ln67_fu_148_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_50 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        converter_reg_316 <= grp_d_mul_fu_334_p_dout0;
        tmp_4_reg_311 <= grp_d_mul_fu_329_p_dout0;
        tmp_9_reg_326 <= grp_d_add_fu_324_p_dout0;
        zext_ln67_reg_246_pp0_iter10_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter9_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter11_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter10_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter2_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter1_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter3_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter2_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter4_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter3_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter5_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter4_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter6_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter5_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter7_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter6_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter8_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter7_reg[9 : 0];
        zext_ln67_reg_246_pp0_iter9_reg[9 : 0] <= zext_ln67_reg_246_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        zext_ln67_reg_246_pp0_iter1_reg[9 : 0] <= zext_ln67_reg_246[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf1_load_1_reg_281 <= buf1_q0;
        buf1_load_reg_271 <= buf1_q1;
        buf2_load_1_reg_286 <= buf2_q0;
        buf2_load_reg_276 <= buf2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_142_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln67_reg_246[9 : 0] <= zext_ln67_fu_154_p1[9 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln67_fu_142_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_50;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf1_ce0 = 1'b1;
    end else begin
        buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf1_ce1 = 1'b1;
    end else begin
        buf1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf2_ce0 = 1'b1;
    end else begin
        buf2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf2_ce1 = 1'b1;
    end else begin
        buf2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp63) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_add_fu_128_ap_ce = 1'b1;
    end else begin
        grp_d_add_fu_128_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp46) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_mul_fu_116_ap_ce = 1'b1;
    end else begin
        grp_d_mul_fu_116_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp49) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_d_mul_fu_122_ap_ce = 1'b1;
    end else begin
        grp_d_mul_fu_122_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        tmp_we0 = 8'd255;
    end else begin
        tmp_we0 = 8'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_fu_148_p2 = (ap_sig_allocacmp_k_1 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp46 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp49 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp63 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call25 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln321_fu_226_p1 = p_Result_s_fu_216_p4;

assign bitcast_ln69_1_fu_187_p1 = buf2_load_reg_276;

assign bitcast_ln69_2_fu_191_p1 = buf1_load_1_reg_281;

assign bitcast_ln69_3_fu_195_p1 = buf2_load_1_reg_286;

assign bitcast_ln69_fu_183_p1 = buf1_load_reg_271;

assign buf1_address0 = zext_ln69_fu_172_p1;

assign buf1_address1 = zext_ln67_fu_154_p1;

assign buf2_address0 = zext_ln69_fu_172_p1;

assign buf2_address1 = zext_ln67_fu_154_p1;

assign grp_d_add_fu_324_p_ce = grp_d_add_fu_128_ap_ce;

assign grp_d_add_fu_324_p_din1 = tmp_4_reg_311;

assign grp_d_add_fu_324_p_din2 = bitcast_ln321_fu_226_p1;

assign grp_d_mul_fu_329_p_ce = grp_d_mul_fu_116_ap_ce;

assign grp_d_mul_fu_329_p_din1 = bitcast_ln69_fu_183_p1;

assign grp_d_mul_fu_329_p_din2 = bitcast_ln69_1_fu_187_p1;

assign grp_d_mul_fu_334_p_ce = grp_d_mul_fu_122_ap_ce;

assign grp_d_mul_fu_334_p_din1 = bitcast_ln69_2_fu_191_p1;

assign grp_d_mul_fu_334_p_din2 = bitcast_ln69_3_fu_195_p1;

assign icmp_ln67_fu_142_p2 = ((ap_sig_allocacmp_k_1 == 10'd512) ? 1'b1 : 1'b0);

assign p_Repl2_s_fu_210_p2 = (tmp_5_fu_202_p3 ^ 1'd1);

assign p_Result_s_fu_216_p4 = {|(p_Repl2_s_fu_210_p2), tmp_8_fu_199_p1[63 - 1:0]};

assign tmp_5_fu_202_p3 = tmp_8_fu_199_p1[32'd63];

assign tmp_8_fu_199_p1 = converter_reg_316;

assign tmp_address0 = zext_ln67_reg_246_pp0_iter11_reg;

assign tmp_d0 = tmp_9_reg_326;

assign trunc_ln69_fu_160_p1 = ap_sig_allocacmp_k_1[8:0];

assign zext_ln67_fu_154_p1 = ap_sig_allocacmp_k_1;

assign zext_ln69_fu_172_p1 = zext_ln_fu_164_p3;

assign zext_ln_fu_164_p3 = {{1'd1}, {trunc_ln69_fu_160_p1}};

always @ (posedge ap_clk) begin
    zext_ln67_reg_246[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln67_reg_246_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //top_top_Pipeline_MUL_RE
