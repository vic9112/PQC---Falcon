// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module NTT_ntt_10_stages_Pipeline_VITIS_LOOP_44_110 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stage0_address0,
        stage0_ce0,
        stage0_q0,
        stage0_4_address0,
        stage0_4_ce0,
        stage0_4_q0,
        out_buf_address0,
        out_buf_ce0,
        out_buf_we0,
        out_buf_d0,
        out_buf_address1,
        out_buf_ce1,
        out_buf_we1,
        out_buf_d1,
        stage0_5_address0,
        stage0_5_ce0,
        stage0_5_q0,
        stage0_6_address0,
        stage0_6_ce0,
        stage0_6_q0,
        GMb_address0,
        GMb_ce0,
        GMb_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] stage0_address0;
output   stage0_ce0;
input  [15:0] stage0_q0;
output  [7:0] stage0_4_address0;
output   stage0_4_ce0;
input  [15:0] stage0_4_q0;
output  [9:0] out_buf_address0;
output   out_buf_ce0;
output   out_buf_we0;
output  [15:0] out_buf_d0;
output  [9:0] out_buf_address1;
output   out_buf_ce1;
output   out_buf_we1;
output  [15:0] out_buf_d1;
output  [7:0] stage0_5_address0;
output   stage0_5_ce0;
input  [15:0] stage0_5_q0;
output  [7:0] stage0_6_address0;
output   stage0_6_ce0;
input  [15:0] stage0_6_q0;
output  [9:0] GMb_address0;
output   GMb_ce0;
input  [13:0] GMb_q0;

reg ap_idle;
reg stage0_ce0;
reg stage0_4_ce0;
reg[9:0] out_buf_address0;
reg out_buf_ce0;
reg out_buf_we0;
reg[15:0] out_buf_d0;
reg[9:0] out_buf_address1;
reg out_buf_ce1;
reg out_buf_we1;
reg[15:0] out_buf_d1;
reg stage0_5_ce0;
reg stage0_6_ce0;
reg[9:0] GMb_address0;
reg GMb_ce0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] tmp_reg_674;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [9:0] n_12_reg_669;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] n_12_reg_669_pp0_iter1_reg;
reg   [9:0] n_12_reg_669_pp0_iter2_reg;
reg   [9:0] n_12_reg_669_pp0_iter3_reg;
reg   [9:0] n_12_reg_669_pp0_iter4_reg;
wire   [0:0] tmp_fu_210_p3;
wire   [8:0] i_gm_fu_218_p1;
reg   [8:0] i_gm_reg_678;
wire   [63:0] zext_ln52_6_fu_245_p1;
reg   [63:0] zext_ln52_6_reg_688;
reg   [63:0] zext_ln52_6_reg_688_pp0_iter1_reg;
reg   [63:0] zext_ln52_6_reg_688_pp0_iter2_reg;
reg   [63:0] zext_ln52_6_reg_688_pp0_iter3_reg;
reg   [63:0] zext_ln52_6_reg_688_pp0_iter4_reg;
wire    ap_block_pp0_stage1_11001;
wire   [8:0] i_gm_1_fu_270_p2;
reg   [8:0] i_gm_1_reg_714;
reg   [8:0] i_gm_1_reg_714_pp0_iter1_reg;
reg   [8:0] i_gm_1_reg_714_pp0_iter2_reg;
reg   [8:0] i_gm_1_reg_714_pp0_iter3_reg;
reg   [8:0] i_gm_1_reg_714_pp0_iter4_reg;
reg   [15:0] stage0_6_load_reg_724;
wire   [29:0] grp_fu_616_p2;
reg   [29:0] tmp2_reg_739;
reg   [29:0] tmp2_reg_739_pp0_iter3_reg;
reg   [29:0] tmp2_reg_739_pp0_iter4_reg;
wire   [29:0] grp_fu_623_p2;
reg   [29:0] tmp2_61_reg_749;
reg   [29:0] tmp2_61_reg_749_pp0_iter3_reg;
reg   [29:0] tmp2_61_reg_749_pp0_iter4_reg;
reg   [15:0] u_reg_774;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln50_fu_230_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln50_1_fu_283_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln52_fu_315_p1;
wire   [63:0] zext_ln54_fu_332_p1;
wire   [63:0] zext_ln52_7_fu_469_p1;
wire   [63:0] zext_ln54_17_fu_488_p1;
reg   [9:0] n_fu_84;
wire   [9:0] n_13_fu_251_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_n_12;
wire   [15:0] add_ln64_17_fu_419_p2;
wire   [15:0] add_ln69_fu_452_p2;
wire   [15:0] add_ln64_18_fu_576_p2;
wire   [15:0] add_ln69_6_fu_609_p2;
wire   [9:0] zext_ln50_8_cast_fu_222_p3;
wire   [7:0] lshr_ln52_s_fu_235_p4;
wire   [9:0] zext_ln50_9_cast_fu_275_p3;
wire  signed [15:0] zext_ln55_fu_301_p0;
wire   [15:0] grp_fu_630_p2;
wire  signed [15:0] zext_ln55_6_fu_304_p0;
wire   [15:0] grp_fu_637_p2;
wire   [9:0] i_fu_310_p2;
wire   [9:0] or_ln54_fu_326_p2;
wire   [30:0] grp_fu_644_p3;
wire   [14:0] trunc_ln43_s_fu_337_p4;
wire  signed [14:0] tmp2_59_fu_346_p2;
wire   [0:0] tmp_50_fu_356_p3;
wire   [15:0] select_ln58_fu_364_p3;
wire  signed [15:0] sext_ln43_fu_352_p1;
wire  signed [15:0] tmp2_64_fu_372_p2;
wire   [16:0] zext_ln42_17_fu_323_p1;
wire   [16:0] add_ln62_fu_382_p2;
wire  signed [17:0] sext_ln62_fu_388_p1;
wire  signed [17:0] sext_ln43_17_fu_378_p1;
wire   [17:0] tmp1_42_fu_392_p2;
wire   [0:0] tmp_51_fu_398_p3;
wire   [15:0] select_ln64_fu_411_p3;
wire   [15:0] add_ln64_fu_406_p2;
wire   [17:0] zext_ln42_fu_320_p1;
wire   [17:0] tmp1_43_fu_426_p2;
wire   [0:0] tmp_52_fu_432_p3;
wire   [15:0] select_ln69_fu_444_p3;
wire   [15:0] trunc_ln68_fu_440_p1;
wire   [9:0] i_8_fu_462_p3;
wire   [9:0] or_ln54_1_fu_482_p2;
wire   [30:0] grp_fu_653_p3;
wire   [14:0] trunc_ln43_4_fu_493_p4;
wire  signed [14:0] tmp2_62_fu_502_p2;
wire   [0:0] tmp_53_fu_512_p3;
wire   [15:0] select_ln58_9_fu_520_p3;
wire  signed [15:0] sext_ln43_18_fu_508_p1;
wire  signed [15:0] tmp2_65_fu_528_p2;
wire   [16:0] zext_ln42_19_fu_478_p1;
wire   [16:0] add_ln62_18_fu_538_p2;
wire  signed [17:0] sext_ln62_6_fu_544_p1;
wire  signed [17:0] sext_ln43_19_fu_534_p1;
wire   [17:0] tmp1_45_fu_548_p2;
wire   [0:0] tmp_54_fu_554_p3;
wire   [15:0] select_ln64_9_fu_568_p3;
wire   [15:0] add_ln64_19_fu_562_p2;
wire   [17:0] zext_ln42_18_fu_474_p1;
wire   [17:0] tmp1_46_fu_583_p2;
wire   [0:0] tmp_55_fu_589_p3;
wire   [15:0] select_ln69_9_fu_601_p3;
wire   [15:0] trunc_ln68_9_fu_597_p1;
wire   [15:0] grp_fu_616_p0;
wire   [13:0] grp_fu_616_p1;
wire   [15:0] grp_fu_623_p0;
wire   [13:0] grp_fu_623_p1;
wire  signed [15:0] grp_fu_630_p0;
wire   [13:0] grp_fu_630_p1;
wire  signed [15:0] grp_fu_637_p0;
wire   [13:0] grp_fu_637_p1;
wire   [15:0] grp_fu_644_p0;
wire   [13:0] grp_fu_644_p1;
wire   [29:0] grp_fu_644_p2;
wire   [15:0] grp_fu_653_p0;
wire   [13:0] grp_fu_653_p1;
wire   [29:0] grp_fu_653_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to5;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [29:0] grp_fu_616_p00;
wire   [29:0] grp_fu_616_p10;
wire   [29:0] grp_fu_623_p00;
wire   [29:0] grp_fu_623_p10;
wire   [29:0] grp_fu_644_p00;
wire   [30:0] grp_fu_644_p20;
wire   [29:0] grp_fu_653_p00;
wire   [30:0] grp_fu_653_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_616_p0),
    .din1(grp_fu_616_p1),
    .ce(1'b1),
    .dout(grp_fu_616_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_623_p0),
    .din1(grp_fu_623_p1),
    .ce(1'b1),
    .dout(grp_fu_623_p2)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_630_p0),
    .din1(grp_fu_630_p1),
    .ce(1'b1),
    .dout(grp_fu_630_p2)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_637_p0),
    .din1(grp_fu_637_p1),
    .ce(1'b1),
    .dout(grp_fu_637_p2)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_644_p0),
    .din1(grp_fu_644_p1),
    .din2(grp_fu_644_p2),
    .ce(1'b1),
    .dout(grp_fu_644_p3)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_653_p0),
    .din1(grp_fu_653_p1),
    .din2(grp_fu_653_p2),
    .ce(1'b1),
    .dout(grp_fu_653_p3)
);

NTT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_210_p3 == 1'd0))) begin
            n_fu_84 <= n_13_fu_251_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_84 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        i_gm_1_reg_714_pp0_iter1_reg[8 : 1] <= i_gm_1_reg_714[8 : 1];
        i_gm_1_reg_714_pp0_iter2_reg[8 : 1] <= i_gm_1_reg_714_pp0_iter1_reg[8 : 1];
        i_gm_1_reg_714_pp0_iter3_reg[8 : 1] <= i_gm_1_reg_714_pp0_iter2_reg[8 : 1];
        i_gm_1_reg_714_pp0_iter4_reg[8 : 1] <= i_gm_1_reg_714_pp0_iter3_reg[8 : 1];
        tmp2_61_reg_749 <= grp_fu_623_p2;
        tmp2_61_reg_749_pp0_iter3_reg <= tmp2_61_reg_749;
        tmp2_61_reg_749_pp0_iter4_reg <= tmp2_61_reg_749_pp0_iter3_reg;
        u_reg_774 <= stage0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_674 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_gm_1_reg_714[8 : 1] <= i_gm_1_fu_270_p2[8 : 1];
        stage0_6_load_reg_724 <= stage0_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_210_p3 == 1'd0))) begin
        i_gm_reg_678 <= i_gm_fu_218_p1;
        zext_ln52_6_reg_688[7 : 0] <= zext_ln52_6_fu_245_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_12_reg_669 <= ap_sig_allocacmp_n_12;
        n_12_reg_669_pp0_iter1_reg <= n_12_reg_669;
        n_12_reg_669_pp0_iter2_reg <= n_12_reg_669_pp0_iter1_reg;
        n_12_reg_669_pp0_iter3_reg <= n_12_reg_669_pp0_iter2_reg;
        n_12_reg_669_pp0_iter4_reg <= n_12_reg_669_pp0_iter3_reg;
        tmp2_reg_739 <= grp_fu_616_p2;
        tmp2_reg_739_pp0_iter3_reg <= tmp2_reg_739;
        tmp2_reg_739_pp0_iter4_reg <= tmp2_reg_739_pp0_iter3_reg;
        tmp_reg_674 <= ap_sig_allocacmp_n_12[32'd9];
        zext_ln52_6_reg_688_pp0_iter1_reg[7 : 0] <= zext_ln52_6_reg_688[7 : 0];
        zext_ln52_6_reg_688_pp0_iter2_reg[7 : 0] <= zext_ln52_6_reg_688_pp0_iter1_reg[7 : 0];
        zext_ln52_6_reg_688_pp0_iter3_reg[7 : 0] <= zext_ln52_6_reg_688_pp0_iter2_reg[7 : 0];
        zext_ln52_6_reg_688_pp0_iter4_reg[7 : 0] <= zext_ln52_6_reg_688_pp0_iter3_reg[7 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            GMb_address0 = zext_ln50_1_fu_283_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            GMb_address0 = zext_ln50_fu_230_p1;
        end else begin
            GMb_address0 = 'bx;
        end
    end else begin
        GMb_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        GMb_ce0 = 1'b1;
    end else begin
        GMb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_674 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to5 = 1'b1;
    end else begin
        ap_idle_pp0_1to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_12 = 10'd0;
    end else begin
        ap_sig_allocacmp_n_12 = n_fu_84;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_address0 = zext_ln54_17_fu_488_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_address0 = zext_ln54_fu_332_p1;
        end else begin
            out_buf_address0 = 'bx;
        end
    end else begin
        out_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_address1 = zext_ln52_7_fu_469_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_address1 = zext_ln52_fu_315_p1;
        end else begin
            out_buf_address1 = 'bx;
        end
    end else begin
        out_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_ce0 = 1'b1;
    end else begin
        out_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_ce1 = 1'b1;
    end else begin
        out_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_d0 = add_ln69_6_fu_609_p2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_d0 = add_ln69_fu_452_p2;
        end else begin
            out_buf_d0 = 'bx;
        end
    end else begin
        out_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_d1 = add_ln64_18_fu_576_p2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_d1 = add_ln64_17_fu_419_p2;
        end else begin
            out_buf_d1 = 'bx;
        end
    end else begin
        out_buf_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_we0 = 1'b1;
    end else begin
        out_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_we1 = 1'b1;
    end else begin
        out_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_4_ce0 = 1'b1;
    end else begin
        stage0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_5_ce0 = 1'b1;
    end else begin
        stage0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_6_ce0 = 1'b1;
    end else begin
        stage0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage0_ce0 = 1'b1;
    end else begin
        stage0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to5 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln62_18_fu_538_p2 = ($signed(zext_ln42_19_fu_478_p1) + $signed(17'd118783));

assign add_ln62_fu_382_p2 = ($signed(zext_ln42_17_fu_323_p1) + $signed(17'd118783));

assign add_ln64_17_fu_419_p2 = (select_ln64_fu_411_p3 + add_ln64_fu_406_p2);

assign add_ln64_18_fu_576_p2 = (select_ln64_9_fu_568_p3 + add_ln64_19_fu_562_p2);

assign add_ln64_19_fu_562_p2 = ($signed(stage0_5_q0) + $signed(tmp2_65_fu_528_p2));

assign add_ln64_fu_406_p2 = ($signed(u_reg_774) + $signed(tmp2_64_fu_372_p2));

assign add_ln69_6_fu_609_p2 = (select_ln69_9_fu_601_p3 + trunc_ln68_9_fu_597_p1);

assign add_ln69_fu_452_p2 = (select_ln69_fu_444_p3 + trunc_ln68_fu_440_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_616_p0 = grp_fu_616_p00;

assign grp_fu_616_p00 = stage0_4_q0;

assign grp_fu_616_p1 = grp_fu_616_p10;

assign grp_fu_616_p10 = GMb_q0;

assign grp_fu_623_p0 = grp_fu_623_p00;

assign grp_fu_623_p00 = stage0_6_load_reg_724;

assign grp_fu_623_p1 = grp_fu_623_p10;

assign grp_fu_623_p10 = GMb_q0;

assign grp_fu_630_p0 = grp_fu_616_p2[15:0];

assign grp_fu_630_p1 = 16'd12287;

assign grp_fu_637_p0 = grp_fu_623_p2[15:0];

assign grp_fu_637_p1 = 16'd12287;

assign grp_fu_644_p0 = grp_fu_644_p00;

assign grp_fu_644_p00 = $unsigned(zext_ln55_fu_301_p0);

assign grp_fu_644_p1 = 30'd12289;

assign grp_fu_644_p2 = grp_fu_644_p20;

assign grp_fu_644_p20 = tmp2_reg_739_pp0_iter4_reg;

assign grp_fu_653_p0 = grp_fu_653_p00;

assign grp_fu_653_p00 = $unsigned(zext_ln55_6_fu_304_p0);

assign grp_fu_653_p1 = 30'd12289;

assign grp_fu_653_p2 = grp_fu_653_p20;

assign grp_fu_653_p20 = tmp2_61_reg_749_pp0_iter4_reg;

assign i_8_fu_462_p3 = {{i_gm_1_reg_714_pp0_iter4_reg}, {1'd0}};

assign i_fu_310_p2 = n_12_reg_669_pp0_iter4_reg << 10'd1;

assign i_gm_1_fu_270_p2 = (i_gm_reg_678 | 9'd1);

assign i_gm_fu_218_p1 = ap_sig_allocacmp_n_12[8:0];

assign lshr_ln52_s_fu_235_p4 = {{ap_sig_allocacmp_n_12[8:1]}};

assign n_13_fu_251_p2 = (ap_sig_allocacmp_n_12 + 10'd2);

assign or_ln54_1_fu_482_p2 = (i_8_fu_462_p3 | 10'd1);

assign or_ln54_fu_326_p2 = (i_fu_310_p2 | 10'd1);

assign select_ln58_9_fu_520_p3 = ((tmp_53_fu_512_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln58_fu_364_p3 = ((tmp_50_fu_356_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln64_9_fu_568_p3 = ((tmp_54_fu_554_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln64_fu_411_p3 = ((tmp_51_fu_398_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln69_9_fu_601_p3 = ((tmp_55_fu_589_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln69_fu_444_p3 = ((tmp_52_fu_432_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign sext_ln43_17_fu_378_p1 = tmp2_64_fu_372_p2;

assign sext_ln43_18_fu_508_p1 = tmp2_62_fu_502_p2;

assign sext_ln43_19_fu_534_p1 = tmp2_65_fu_528_p2;

assign sext_ln43_fu_352_p1 = tmp2_59_fu_346_p2;

assign sext_ln62_6_fu_544_p1 = $signed(add_ln62_18_fu_538_p2);

assign sext_ln62_fu_388_p1 = $signed(add_ln62_fu_382_p2);

assign stage0_4_address0 = zext_ln52_6_fu_245_p1;

assign stage0_5_address0 = zext_ln52_6_reg_688_pp0_iter4_reg;

assign stage0_6_address0 = zext_ln52_6_fu_245_p1;

assign stage0_address0 = zext_ln52_6_reg_688_pp0_iter3_reg;

assign tmp1_42_fu_392_p2 = ($signed(sext_ln62_fu_388_p1) + $signed(sext_ln43_17_fu_378_p1));

assign tmp1_43_fu_426_p2 = ($signed(zext_ln42_fu_320_p1) - $signed(sext_ln43_17_fu_378_p1));

assign tmp1_45_fu_548_p2 = ($signed(sext_ln62_6_fu_544_p1) + $signed(sext_ln43_19_fu_534_p1));

assign tmp1_46_fu_583_p2 = ($signed(zext_ln42_18_fu_474_p1) - $signed(sext_ln43_19_fu_534_p1));

assign tmp2_59_fu_346_p2 = ($signed(trunc_ln43_s_fu_337_p4) + $signed(15'd20479));

assign tmp2_62_fu_502_p2 = ($signed(trunc_ln43_4_fu_493_p4) + $signed(15'd20479));

assign tmp2_64_fu_372_p2 = ($signed(select_ln58_fu_364_p3) + $signed(sext_ln43_fu_352_p1));

assign tmp2_65_fu_528_p2 = ($signed(select_ln58_9_fu_520_p3) + $signed(sext_ln43_18_fu_508_p1));

assign tmp_50_fu_356_p3 = tmp2_59_fu_346_p2[32'd14];

assign tmp_51_fu_398_p3 = tmp1_42_fu_392_p2[32'd17];

assign tmp_52_fu_432_p3 = tmp1_43_fu_426_p2[32'd17];

assign tmp_53_fu_512_p3 = tmp2_62_fu_502_p2[32'd14];

assign tmp_54_fu_554_p3 = tmp1_45_fu_548_p2[32'd17];

assign tmp_55_fu_589_p3 = tmp1_46_fu_583_p2[32'd17];

assign tmp_fu_210_p3 = ap_sig_allocacmp_n_12[32'd9];

assign trunc_ln43_4_fu_493_p4 = {{grp_fu_653_p3[30:16]}};

assign trunc_ln43_s_fu_337_p4 = {{grp_fu_644_p3[30:16]}};

assign trunc_ln68_9_fu_597_p1 = tmp1_46_fu_583_p2[15:0];

assign trunc_ln68_fu_440_p1 = tmp1_43_fu_426_p2[15:0];

assign zext_ln42_17_fu_323_p1 = u_reg_774;

assign zext_ln42_18_fu_474_p1 = stage0_5_q0;

assign zext_ln42_19_fu_478_p1 = stage0_5_q0;

assign zext_ln42_fu_320_p1 = u_reg_774;

assign zext_ln50_1_fu_283_p1 = zext_ln50_9_cast_fu_275_p3;

assign zext_ln50_8_cast_fu_222_p3 = {{1'd1}, {i_gm_fu_218_p1}};

assign zext_ln50_9_cast_fu_275_p3 = {{1'd1}, {i_gm_1_fu_270_p2}};

assign zext_ln50_fu_230_p1 = zext_ln50_8_cast_fu_222_p3;

assign zext_ln52_6_fu_245_p1 = lshr_ln52_s_fu_235_p4;

assign zext_ln52_7_fu_469_p1 = i_8_fu_462_p3;

assign zext_ln52_fu_315_p1 = i_fu_310_p2;

assign zext_ln54_17_fu_488_p1 = or_ln54_1_fu_482_p2;

assign zext_ln54_fu_332_p1 = or_ln54_fu_326_p2;

assign zext_ln55_6_fu_304_p0 = grp_fu_637_p2;

assign zext_ln55_fu_301_p0 = grp_fu_630_p2;

always @ (posedge ap_clk) begin
    zext_ln52_6_reg_688[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln52_6_reg_688_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln52_6_reg_688_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln52_6_reg_688_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln52_6_reg_688_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    i_gm_1_reg_714[0] <= 1'b1;
    i_gm_1_reg_714_pp0_iter1_reg[0] <= 1'b1;
    i_gm_1_reg_714_pp0_iter2_reg[0] <= 1'b1;
    i_gm_1_reg_714_pp0_iter3_reg[0] <= 1'b1;
    i_gm_1_reg_714_pp0_iter4_reg[0] <= 1'b1;
end

endmodule //NTT_ntt_10_stages_Pipeline_VITIS_LOOP_44_110
