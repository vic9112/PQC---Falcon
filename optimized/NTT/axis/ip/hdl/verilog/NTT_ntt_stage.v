// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module NTT_ntt_stage (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_buf_address0,
        in_buf_ce0,
        in_buf_q0,
        in_buf_address1,
        in_buf_ce1,
        in_buf_q1,
        out_buf_0_address0,
        out_buf_0_ce0,
        out_buf_0_we0,
        out_buf_0_d0,
        out_buf_0_address1,
        out_buf_0_ce1,
        out_buf_0_we1,
        out_buf_0_d1,
        out_buf_1_address0,
        out_buf_1_ce0,
        out_buf_1_we0,
        out_buf_1_d0,
        out_buf_2_address0,
        out_buf_2_ce0,
        out_buf_2_we0,
        out_buf_2_d0,
        out_buf_3_address0,
        out_buf_3_ce0,
        out_buf_3_we0,
        out_buf_3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] in_buf_address0;
output   in_buf_ce0;
input  [15:0] in_buf_q0;
output  [9:0] in_buf_address1;
output   in_buf_ce1;
input  [15:0] in_buf_q1;
output  [7:0] out_buf_0_address0;
output   out_buf_0_ce0;
output   out_buf_0_we0;
output  [15:0] out_buf_0_d0;
output  [7:0] out_buf_0_address1;
output   out_buf_0_ce1;
output   out_buf_0_we1;
output  [15:0] out_buf_0_d1;
output  [7:0] out_buf_1_address0;
output   out_buf_1_ce0;
output   out_buf_1_we0;
output  [15:0] out_buf_1_d0;
output  [7:0] out_buf_2_address0;
output   out_buf_2_ce0;
output   out_buf_2_we0;
output  [15:0] out_buf_2_d0;
output  [7:0] out_buf_3_address0;
output   out_buf_3_ce0;
output   out_buf_3_we0;
output  [15:0] out_buf_3_d0;

reg ap_idle;
reg[9:0] in_buf_address0;
reg in_buf_ce0;
reg[9:0] in_buf_address1;
reg in_buf_ce1;
reg out_buf_0_ce0;
reg out_buf_0_we0;
reg out_buf_0_ce1;
reg out_buf_0_we1;
reg[7:0] out_buf_1_address0;
reg out_buf_1_ce0;
reg out_buf_1_we0;
reg[15:0] out_buf_1_d0;
reg[7:0] out_buf_2_address0;
reg out_buf_2_ce0;
reg out_buf_2_we0;
reg[15:0] out_buf_2_d0;
reg[7:0] out_buf_3_address0;
reg out_buf_3_ce0;
reg out_buf_3_we0;
reg[15:0] out_buf_3_d0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] tmp_reg_1116;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [15:0] reg_253;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_fu_265_p3;
reg   [0:0] tmp_reg_1116_pp0_iter1_reg;
wire   [8:0] i_fu_273_p1;
reg   [8:0] i_reg_1120;
reg   [8:0] i_reg_1120_pp0_iter1_reg;
reg   [8:0] i_reg_1120_pp0_iter2_reg;
reg   [6:0] lshr_ln_reg_1127;
reg   [6:0] lshr_ln_reg_1127_pp0_iter1_reg;
reg   [6:0] lshr_ln_reg_1127_pp0_iter2_reg;
wire   [8:0] i_7_fu_287_p2;
reg   [8:0] i_7_reg_1133;
reg   [8:0] i_7_reg_1133_pp0_iter1_reg;
reg   [6:0] tmp_1_reg_1143;
reg   [6:0] tmp_1_reg_1143_pp0_iter1_reg;
reg   [6:0] tmp_1_reg_1143_pp0_iter2_reg;
wire   [8:0] i_8_fu_316_p2;
reg   [8:0] i_8_reg_1148;
reg   [8:0] i_8_reg_1148_pp0_iter1_reg;
reg   [6:0] tmp_2_reg_1158;
reg   [6:0] tmp_2_reg_1158_pp0_iter1_reg;
reg   [6:0] tmp_2_reg_1158_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg  signed [15:0] in_buf_load_2_reg_1168;
reg  signed [15:0] in_buf_load_4_reg_1174;
wire   [8:0] i_9_fu_368_p2;
reg   [8:0] i_9_reg_1180;
reg   [8:0] i_9_reg_1180_pp0_iter1_reg;
reg   [6:0] tmp_3_reg_1190;
reg   [6:0] tmp_3_reg_1190_pp0_iter1_reg;
reg   [6:0] tmp_3_reg_1190_pp0_iter2_reg;
reg  signed [15:0] in_buf_load_reg_1195;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg  signed [15:0] in_buf_load_reg_1195_pp0_iter1_reg;
reg  signed [15:0] in_buf_load_6_reg_1201;
wire   [15:0] grp_fu_1033_p2;
reg  signed [15:0] mul_ln53_reg_1217;
reg   [15:0] u_8_reg_1262;
wire   [63:0] zext_ln62_fu_435_p1;
reg   [63:0] zext_ln62_reg_1279;
wire   [15:0] add_ln67_7_fu_564_p2;
reg   [15:0] add_ln67_7_reg_1285;
wire   [15:0] add_ln67_8_fu_691_p2;
reg   [15:0] add_ln67_8_reg_1290;
wire   [29:0] grp_fu_1085_p2;
reg   [29:0] tmp1_reg_1305;
wire   [15:0] add_ln67_9_fu_851_p2;
reg   [15:0] add_ln67_9_reg_1310;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln52_16_fu_301_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln52_18_fu_330_p1;
wire   [63:0] zext_ln52_fu_363_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln52_20_fu_381_p1;
wire   [63:0] zext_ln50_10_fu_414_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln50_11_fu_418_p1;
wire   [63:0] zext_ln50_12_fu_431_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln67_1_fu_710_p1;
wire   [63:0] zext_ln67_2_fu_722_p1;
wire   [63:0] zext_ln67_3_fu_864_p1;
wire   [63:0] zext_ln50_fu_869_p1;
wire   [63:0] zext_ln67_fu_1014_p1;
reg   [9:0] n_01_fu_88;
wire   [9:0] n_fu_345_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_n_9;
wire   [15:0] add_ln62_7_fu_531_p2;
wire   [15:0] add_ln62_8_fu_658_p2;
wire   [15:0] add_ln62_9_fu_818_p2;
wire   [9:0] zext_ln52_16_cast_fu_293_p3;
wire   [9:0] zext_ln52_18_cast_fu_322_p3;
wire   [9:0] zext_ln52_cast_fu_356_p3;
wire   [9:0] zext_ln52_20_cast_fu_373_p3;
wire  signed [15:0] zext_ln53_7_fu_396_p0;
wire   [15:0] grp_fu_1019_p2;
wire  signed [15:0] zext_ln53_8_fu_399_p0;
wire   [15:0] grp_fu_1026_p2;
wire  signed [15:0] zext_ln53_9_fu_408_p0;
wire   [15:0] grp_fu_1039_p2;
wire   [29:0] grp_fu_1046_p2;
wire   [29:0] grp_fu_1053_p2;
wire   [30:0] grp_fu_1060_p3;
wire   [14:0] trunc_ln42_7_fu_448_p4;
wire  signed [14:0] tmp2_34_fu_457_p2;
wire   [0:0] tmp_28_fu_467_p3;
wire   [15:0] select_ln56_7_fu_475_p3;
wire  signed [15:0] sext_ln42_16_fu_463_p1;
wire  signed [15:0] tmp2_43_fu_483_p2;
wire   [16:0] zext_ln41_17_fu_444_p1;
wire   [16:0] add_ln60_16_fu_493_p2;
wire  signed [17:0] sext_ln60_7_fu_499_p1;
wire  signed [17:0] sext_ln42_17_fu_489_p1;
wire   [17:0] tmp1_26_fu_503_p2;
wire   [0:0] tmp_29_fu_509_p3;
wire   [15:0] select_ln62_7_fu_523_p3;
wire   [15:0] add_ln62_13_fu_517_p2;
wire   [17:0] zext_ln41_16_fu_440_p1;
wire   [17:0] tmp1_27_fu_538_p2;
wire   [0:0] tmp_30_fu_544_p3;
wire   [15:0] select_ln67_7_fu_556_p3;
wire   [15:0] trunc_ln66_7_fu_552_p1;
wire   [30:0] grp_fu_1069_p3;
wire   [14:0] trunc_ln42_8_fu_576_p4;
wire  signed [14:0] tmp2_37_fu_585_p2;
wire   [0:0] tmp_31_fu_595_p3;
wire   [15:0] select_ln56_8_fu_603_p3;
wire  signed [15:0] sext_ln42_18_fu_591_p1;
wire  signed [15:0] tmp2_44_fu_611_p2;
wire   [16:0] zext_ln41_19_fu_573_p1;
wire   [16:0] add_ln60_18_fu_621_p2;
wire  signed [17:0] sext_ln60_8_fu_627_p1;
wire  signed [17:0] sext_ln42_19_fu_617_p1;
wire   [17:0] tmp1_29_fu_631_p2;
wire   [0:0] tmp_32_fu_637_p3;
wire   [15:0] select_ln62_8_fu_650_p3;
wire   [15:0] add_ln62_14_fu_645_p2;
wire   [17:0] zext_ln41_18_fu_570_p1;
wire   [17:0] tmp1_30_fu_665_p2;
wire   [0:0] tmp_33_fu_671_p3;
wire   [15:0] select_ln67_8_fu_683_p3;
wire   [15:0] trunc_ln66_8_fu_679_p1;
wire   [29:0] grp_fu_1078_p2;
wire   [7:0] zext_ln67_1_cast_fu_703_p3;
wire   [7:0] zext_ln67_2_cast_fu_715_p3;
wire   [30:0] grp_fu_1091_p3;
wire   [14:0] trunc_ln42_9_fu_735_p4;
wire  signed [14:0] tmp2_40_fu_744_p2;
wire   [0:0] tmp_34_fu_754_p3;
wire   [15:0] select_ln56_9_fu_762_p3;
wire  signed [15:0] sext_ln42_20_fu_750_p1;
wire  signed [15:0] tmp2_45_fu_770_p2;
wire   [16:0] zext_ln41_21_fu_731_p1;
wire   [16:0] add_ln60_20_fu_780_p2;
wire  signed [17:0] sext_ln60_9_fu_786_p1;
wire  signed [17:0] sext_ln42_21_fu_776_p1;
wire   [17:0] tmp1_32_fu_790_p2;
wire   [0:0] tmp_35_fu_796_p3;
wire   [15:0] select_ln62_9_fu_810_p3;
wire   [15:0] add_ln62_15_fu_804_p2;
wire   [17:0] zext_ln41_20_fu_727_p1;
wire   [17:0] tmp1_33_fu_825_p2;
wire   [0:0] tmp_36_fu_831_p3;
wire   [15:0] select_ln67_9_fu_843_p3;
wire   [15:0] trunc_ln66_9_fu_839_p1;
wire   [7:0] zext_ln67_3_cast_fu_857_p3;
wire   [30:0] grp_fu_1100_p3;
wire   [14:0] trunc_ln_fu_884_p4;
wire  signed [14:0] tmp2_31_fu_893_p2;
wire   [0:0] tmp_25_fu_903_p3;
wire   [15:0] select_ln56_fu_911_p3;
wire  signed [15:0] sext_ln42_fu_899_p1;
wire  signed [15:0] tmp2_42_fu_919_p2;
wire   [16:0] zext_ln41_15_fu_880_p1;
wire   [16:0] add_ln60_fu_929_p2;
wire  signed [17:0] sext_ln60_fu_935_p1;
wire  signed [17:0] sext_ln42_15_fu_925_p1;
wire   [17:0] tmp1_23_fu_939_p2;
wire   [0:0] tmp_26_fu_945_p3;
wire   [15:0] select_ln62_fu_959_p3;
wire   [15:0] add_ln62_12_fu_953_p2;
wire   [17:0] zext_ln41_fu_876_p1;
wire   [17:0] tmp1_24_fu_974_p2;
wire   [0:0] tmp_27_fu_980_p3;
wire   [15:0] select_ln67_fu_992_p3;
wire   [15:0] trunc_ln66_fu_988_p1;
wire   [7:0] zext_ln67_cast_fu_1007_p3;
wire  signed [13:0] grp_fu_1019_p1;
wire  signed [13:0] grp_fu_1026_p1;
wire  signed [13:0] grp_fu_1033_p1;
wire  signed [13:0] grp_fu_1039_p1;
wire   [15:0] grp_fu_1046_p0;
wire   [13:0] grp_fu_1046_p1;
wire   [15:0] grp_fu_1053_p0;
wire   [13:0] grp_fu_1053_p1;
wire   [15:0] grp_fu_1060_p0;
wire   [12:0] grp_fu_1060_p1;
wire   [29:0] grp_fu_1060_p2;
wire   [15:0] grp_fu_1069_p0;
wire   [12:0] grp_fu_1069_p1;
wire   [29:0] grp_fu_1069_p2;
wire   [15:0] grp_fu_1078_p0;
wire   [13:0] grp_fu_1078_p1;
wire   [15:0] grp_fu_1085_p0;
wire   [13:0] grp_fu_1085_p1;
wire   [15:0] grp_fu_1091_p0;
wire   [12:0] grp_fu_1091_p1;
wire   [29:0] grp_fu_1091_p2;
wire   [15:0] grp_fu_1100_p0;
wire   [12:0] grp_fu_1100_p1;
wire   [29:0] grp_fu_1100_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0;
wire    ap_enable_operation_134;
reg    ap_enable_state9_pp0_iter2_stage0;
wire    ap_enable_operation_176;
reg    ap_enable_state10_pp0_iter2_stage1;
wire    ap_enable_operation_158;
wire    ap_enable_operation_180;
wire    ap_enable_operation_199;
wire    ap_enable_operation_209;
reg    ap_enable_state11_pp0_iter2_stage2;
wire    ap_enable_operation_238;
reg    ap_enable_state13_pp0_iter3_stage0;
wire    ap_enable_operation_247;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [29:0] grp_fu_1046_p00;
wire   [29:0] grp_fu_1053_p00;
wire   [28:0] grp_fu_1060_p00;
wire   [30:0] grp_fu_1060_p20;
wire   [28:0] grp_fu_1069_p00;
wire   [30:0] grp_fu_1069_p20;
wire   [29:0] grp_fu_1078_p00;
wire   [29:0] grp_fu_1085_p00;
wire   [28:0] grp_fu_1091_p00;
wire   [30:0] grp_fu_1091_p20;
wire   [28:0] grp_fu_1100_p00;
wire   [30:0] grp_fu_1100_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

NTT_mul_mul_16ns_14s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_14s_16_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_buf_q1),
    .din1(grp_fu_1019_p1),
    .ce(1'b1),
    .dout(grp_fu_1019_p2)
);

NTT_mul_mul_16ns_14s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_14s_16_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_buf_q0),
    .din1(grp_fu_1026_p1),
    .ce(1'b1),
    .dout(grp_fu_1026_p2)
);

NTT_mul_mul_16ns_14s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_14s_16_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_buf_q1),
    .din1(grp_fu_1033_p1),
    .ce(1'b1),
    .dout(grp_fu_1033_p2)
);

NTT_mul_mul_16ns_14s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16ns_14s_16_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_buf_q0),
    .din1(grp_fu_1039_p1),
    .ce(1'b1),
    .dout(grp_fu_1039_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1046_p0),
    .din1(grp_fu_1046_p1),
    .ce(1'b1),
    .dout(grp_fu_1046_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1053_p0),
    .din1(grp_fu_1053_p1),
    .ce(1'b1),
    .dout(grp_fu_1053_p2)
);

NTT_mac_muladd_16ns_13ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_13ns_30ns_31_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1060_p0),
    .din1(grp_fu_1060_p1),
    .din2(grp_fu_1060_p2),
    .ce(1'b1),
    .dout(grp_fu_1060_p3)
);

NTT_mac_muladd_16ns_13ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_13ns_30ns_31_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1069_p0),
    .din1(grp_fu_1069_p1),
    .din2(grp_fu_1069_p2),
    .ce(1'b1),
    .dout(grp_fu_1069_p3)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1078_p0),
    .din1(grp_fu_1078_p1),
    .ce(1'b1),
    .dout(grp_fu_1078_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1085_p0),
    .din1(grp_fu_1085_p1),
    .ce(1'b1),
    .dout(grp_fu_1085_p2)
);

NTT_mac_muladd_16ns_13ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_13ns_30ns_31_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1091_p0),
    .din1(grp_fu_1091_p1),
    .din2(grp_fu_1091_p2),
    .ce(1'b1),
    .dout(grp_fu_1091_p3)
);

NTT_mac_muladd_16ns_13ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_13ns_30ns_31_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1100_p0),
    .din1(grp_fu_1100_p1),
    .din2(grp_fu_1100_p2),
    .ce(1'b1),
    .dout(grp_fu_1100_p3)
);

NTT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_265_p3 == 1'd0))) begin
            n_01_fu_88 <= n_fu_345_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_01_fu_88 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln67_7_reg_1285 <= add_ln67_7_fu_564_p2;
        add_ln67_8_reg_1290 <= add_ln67_8_fu_691_p2;
        i_7_reg_1133_pp0_iter1_reg[8 : 1] <= i_7_reg_1133[8 : 1];
        i_8_reg_1148_pp0_iter1_reg[0] <= i_8_reg_1148[0];
i_8_reg_1148_pp0_iter1_reg[8 : 2] <= i_8_reg_1148[8 : 2];
        i_reg_1120_pp0_iter1_reg <= i_reg_1120;
        i_reg_1120_pp0_iter2_reg <= i_reg_1120_pp0_iter1_reg;
        lshr_ln_reg_1127_pp0_iter1_reg <= lshr_ln_reg_1127;
        lshr_ln_reg_1127_pp0_iter2_reg <= lshr_ln_reg_1127_pp0_iter1_reg;
        tmp_1_reg_1143_pp0_iter1_reg <= tmp_1_reg_1143;
        tmp_1_reg_1143_pp0_iter2_reg <= tmp_1_reg_1143_pp0_iter1_reg;
        tmp_2_reg_1158_pp0_iter1_reg <= tmp_2_reg_1158;
        tmp_2_reg_1158_pp0_iter2_reg <= tmp_2_reg_1158_pp0_iter1_reg;
        tmp_reg_1116 <= ap_sig_allocacmp_n_9[32'd9];
        tmp_reg_1116_pp0_iter1_reg <= tmp_reg_1116;
        zext_ln62_reg_1279[6 : 0] <= zext_ln62_fu_435_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln67_9_reg_1310 <= add_ln67_9_fu_851_p2;
        i_9_reg_1180_pp0_iter1_reg[8 : 2] <= i_9_reg_1180[8 : 2];
        mul_ln53_reg_1217 <= grp_fu_1033_p2;
        tmp1_reg_1305 <= grp_fu_1085_p2;
        tmp_3_reg_1190_pp0_iter1_reg <= tmp_3_reg_1190;
        tmp_3_reg_1190_pp0_iter2_reg <= tmp_3_reg_1190_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_265_p3 == 1'd0))) begin
        i_7_reg_1133[8 : 1] <= i_7_fu_287_p2[8 : 1];
        i_8_reg_1148[0] <= i_8_fu_316_p2[0];
i_8_reg_1148[8 : 2] <= i_8_fu_316_p2[8 : 2];
        i_reg_1120 <= i_fu_273_p1;
        lshr_ln_reg_1127 <= {{ap_sig_allocacmp_n_9[8:2]}};
        tmp_1_reg_1143 <= {{i_7_fu_287_p2[8:2]}};
        tmp_2_reg_1158 <= {{i_8_fu_316_p2[8:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_9_reg_1180[8 : 2] <= i_9_fu_368_p2[8 : 2];
        tmp_3_reg_1190 <= {{i_9_fu_368_p2[8:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_buf_load_2_reg_1168 <= in_buf_q1;
        in_buf_load_4_reg_1174 <= in_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_buf_load_6_reg_1201 <= in_buf_q0;
        in_buf_load_reg_1195 <= in_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_buf_load_reg_1195_pp0_iter1_reg <= in_buf_load_reg_1195;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_253 <= in_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        u_8_reg_1262 <= in_buf_q0;
    end
end

always @ (*) begin
    if (((tmp_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_1116_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_9 = 10'd0;
    end else begin
        ap_sig_allocacmp_n_9 = n_01_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_buf_address0 = zext_ln50_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_buf_address0 = zext_ln50_11_fu_418_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_buf_address0 = zext_ln52_20_fu_381_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_address0 = zext_ln52_18_fu_330_p1;
    end else begin
        in_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_buf_address1 = zext_ln50_12_fu_431_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_buf_address1 = zext_ln50_10_fu_414_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_buf_address1 = zext_ln52_fu_363_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_address1 = zext_ln52_16_fu_301_p1;
    end else begin
        in_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        in_buf_ce0 = 1'b1;
    end else begin
        in_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        in_buf_ce1 = 1'b1;
    end else begin
        in_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_0_ce0 = 1'b1;
    end else begin
        out_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_0_ce1 = 1'b1;
    end else begin
        out_buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_0_we0 = 1'b1;
    end else begin
        out_buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_0_we1 = 1'b1;
    end else begin
        out_buf_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_1_address0 = zext_ln67_1_fu_710_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_1_address0 = zext_ln62_fu_435_p1;
        end else begin
            out_buf_1_address0 = 'bx;
        end
    end else begin
        out_buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_1_ce0 = 1'b1;
    end else begin
        out_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_1_d0 = add_ln67_7_reg_1285;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_1_d0 = add_ln62_7_fu_531_p2;
        end else begin
            out_buf_1_d0 = 'bx;
        end
    end else begin
        out_buf_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_1_we0 = 1'b1;
    end else begin
        out_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_2_address0 = zext_ln67_2_fu_722_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_2_address0 = zext_ln62_fu_435_p1;
        end else begin
            out_buf_2_address0 = 'bx;
        end
    end else begin
        out_buf_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_2_ce0 = 1'b1;
    end else begin
        out_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_2_d0 = add_ln67_8_reg_1290;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_buf_2_d0 = add_ln62_8_fu_658_p2;
        end else begin
            out_buf_2_d0 = 'bx;
        end
    end else begin
        out_buf_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_2_we0 = 1'b1;
    end else begin
        out_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            out_buf_3_address0 = zext_ln67_3_fu_864_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_3_address0 = zext_ln62_reg_1279;
        end else begin
            out_buf_3_address0 = 'bx;
        end
    end else begin
        out_buf_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        out_buf_3_ce0 = 1'b1;
    end else begin
        out_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            out_buf_3_d0 = add_ln67_9_reg_1310;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out_buf_3_d0 = add_ln62_9_fu_818_p2;
        end else begin
            out_buf_3_d0 = 'bx;
        end
    end else begin
        out_buf_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        out_buf_3_we0 = 1'b1;
    end else begin
        out_buf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln60_16_fu_493_p2 = ($signed(zext_ln41_17_fu_444_p1) + $signed(17'd118783));

assign add_ln60_18_fu_621_p2 = ($signed(zext_ln41_19_fu_573_p1) + $signed(17'd118783));

assign add_ln60_20_fu_780_p2 = ($signed(zext_ln41_21_fu_731_p1) + $signed(17'd118783));

assign add_ln60_fu_929_p2 = ($signed(zext_ln41_15_fu_880_p1) + $signed(17'd118783));

assign add_ln62_12_fu_953_p2 = ($signed(in_buf_q0) + $signed(tmp2_42_fu_919_p2));

assign add_ln62_13_fu_517_p2 = ($signed(reg_253) + $signed(tmp2_43_fu_483_p2));

assign add_ln62_14_fu_645_p2 = ($signed(u_8_reg_1262) + $signed(tmp2_44_fu_611_p2));

assign add_ln62_15_fu_804_p2 = ($signed(reg_253) + $signed(tmp2_45_fu_770_p2));

assign add_ln62_7_fu_531_p2 = (select_ln62_7_fu_523_p3 + add_ln62_13_fu_517_p2);

assign add_ln62_8_fu_658_p2 = (select_ln62_8_fu_650_p3 + add_ln62_14_fu_645_p2);

assign add_ln62_9_fu_818_p2 = (select_ln62_9_fu_810_p3 + add_ln62_15_fu_804_p2);

assign add_ln67_7_fu_564_p2 = (select_ln67_7_fu_556_p3 + trunc_ln66_7_fu_552_p1);

assign add_ln67_8_fu_691_p2 = (select_ln67_8_fu_683_p3 + trunc_ln66_8_fu_679_p1);

assign add_ln67_9_fu_851_p2 = (select_ln67_9_fu_843_p3 + trunc_ln66_9_fu_839_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage3 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage3_subdone)) | ((ap_ST_fsm_pp0_stage2 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage2_subdone)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_operation_134 = (1'b1 == 1'b1);

assign ap_enable_operation_158 = (1'b1 == 1'b1);

assign ap_enable_operation_176 = (1'b1 == 1'b1);

assign ap_enable_operation_180 = (1'b1 == 1'b1);

assign ap_enable_operation_199 = (1'b1 == 1'b1);

assign ap_enable_operation_209 = (1'b1 == 1'b1);

assign ap_enable_operation_238 = (1'b1 == 1'b1);

assign ap_enable_operation_247 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp0_iter2_stage1 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state11_pp0_iter2_stage2 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_enable_state13_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_1019_p1 = 16'd57648;

assign grp_fu_1026_p1 = 16'd57648;

assign grp_fu_1033_p1 = 16'd57648;

assign grp_fu_1039_p1 = 16'd57648;

assign grp_fu_1046_p0 = grp_fu_1046_p00;

assign grp_fu_1046_p00 = $unsigned(zext_ln53_7_fu_396_p0);

assign grp_fu_1046_p1 = 30'd12289;

assign grp_fu_1053_p0 = grp_fu_1053_p00;

assign grp_fu_1053_p00 = $unsigned(zext_ln53_8_fu_399_p0);

assign grp_fu_1053_p1 = 30'd12289;

assign grp_fu_1060_p0 = grp_fu_1060_p00;

assign grp_fu_1060_p00 = $unsigned(in_buf_load_2_reg_1168);

assign grp_fu_1060_p1 = 29'd7888;

assign grp_fu_1060_p2 = grp_fu_1060_p20;

assign grp_fu_1060_p20 = grp_fu_1046_p2;

assign grp_fu_1069_p0 = grp_fu_1069_p00;

assign grp_fu_1069_p00 = $unsigned(in_buf_load_4_reg_1174);

assign grp_fu_1069_p1 = 29'd7888;

assign grp_fu_1069_p2 = grp_fu_1069_p20;

assign grp_fu_1069_p20 = grp_fu_1053_p2;

assign grp_fu_1078_p0 = grp_fu_1078_p00;

assign grp_fu_1078_p00 = $unsigned(zext_ln53_9_fu_408_p0);

assign grp_fu_1078_p1 = 30'd12289;

assign grp_fu_1085_p0 = grp_fu_1085_p00;

assign grp_fu_1085_p00 = $unsigned(mul_ln53_reg_1217);

assign grp_fu_1085_p1 = 30'd12289;

assign grp_fu_1091_p0 = grp_fu_1091_p00;

assign grp_fu_1091_p00 = $unsigned(in_buf_load_6_reg_1201);

assign grp_fu_1091_p1 = 29'd7888;

assign grp_fu_1091_p2 = grp_fu_1091_p20;

assign grp_fu_1091_p20 = grp_fu_1078_p2;

assign grp_fu_1100_p0 = grp_fu_1100_p00;

assign grp_fu_1100_p00 = $unsigned(in_buf_load_reg_1195_pp0_iter1_reg);

assign grp_fu_1100_p1 = 29'd7888;

assign grp_fu_1100_p2 = grp_fu_1100_p20;

assign grp_fu_1100_p20 = tmp1_reg_1305;

assign i_7_fu_287_p2 = (i_fu_273_p1 | 9'd1);

assign i_8_fu_316_p2 = (i_fu_273_p1 | 9'd2);

assign i_9_fu_368_p2 = (i_reg_1120 | 9'd3);

assign i_fu_273_p1 = ap_sig_allocacmp_n_9[8:0];

assign n_fu_345_p2 = (ap_sig_allocacmp_n_9 + 10'd4);

assign out_buf_0_address0 = zext_ln67_fu_1014_p1;

assign out_buf_0_address1 = zext_ln62_reg_1279;

assign out_buf_0_d0 = (select_ln67_fu_992_p3 + trunc_ln66_fu_988_p1);

assign out_buf_0_d1 = (select_ln62_fu_959_p3 + add_ln62_12_fu_953_p2);

assign select_ln56_7_fu_475_p3 = ((tmp_28_fu_467_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_8_fu_603_p3 = ((tmp_31_fu_595_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_9_fu_762_p3 = ((tmp_34_fu_754_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_fu_911_p3 = ((tmp_25_fu_903_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln62_7_fu_523_p3 = ((tmp_29_fu_509_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_8_fu_650_p3 = ((tmp_32_fu_637_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_9_fu_810_p3 = ((tmp_35_fu_796_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_fu_959_p3 = ((tmp_26_fu_945_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln67_7_fu_556_p3 = ((tmp_30_fu_544_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_8_fu_683_p3 = ((tmp_33_fu_671_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_9_fu_843_p3 = ((tmp_36_fu_831_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_fu_992_p3 = ((tmp_27_fu_980_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign sext_ln42_15_fu_925_p1 = tmp2_42_fu_919_p2;

assign sext_ln42_16_fu_463_p1 = tmp2_34_fu_457_p2;

assign sext_ln42_17_fu_489_p1 = tmp2_43_fu_483_p2;

assign sext_ln42_18_fu_591_p1 = tmp2_37_fu_585_p2;

assign sext_ln42_19_fu_617_p1 = tmp2_44_fu_611_p2;

assign sext_ln42_20_fu_750_p1 = tmp2_40_fu_744_p2;

assign sext_ln42_21_fu_776_p1 = tmp2_45_fu_770_p2;

assign sext_ln42_fu_899_p1 = tmp2_31_fu_893_p2;

assign sext_ln60_7_fu_499_p1 = $signed(add_ln60_16_fu_493_p2);

assign sext_ln60_8_fu_627_p1 = $signed(add_ln60_18_fu_621_p2);

assign sext_ln60_9_fu_786_p1 = $signed(add_ln60_20_fu_780_p2);

assign sext_ln60_fu_935_p1 = $signed(add_ln60_fu_929_p2);

assign tmp1_23_fu_939_p2 = ($signed(sext_ln60_fu_935_p1) + $signed(sext_ln42_15_fu_925_p1));

assign tmp1_24_fu_974_p2 = ($signed(zext_ln41_fu_876_p1) - $signed(sext_ln42_15_fu_925_p1));

assign tmp1_26_fu_503_p2 = ($signed(sext_ln60_7_fu_499_p1) + $signed(sext_ln42_17_fu_489_p1));

assign tmp1_27_fu_538_p2 = ($signed(zext_ln41_16_fu_440_p1) - $signed(sext_ln42_17_fu_489_p1));

assign tmp1_29_fu_631_p2 = ($signed(sext_ln60_8_fu_627_p1) + $signed(sext_ln42_19_fu_617_p1));

assign tmp1_30_fu_665_p2 = ($signed(zext_ln41_18_fu_570_p1) - $signed(sext_ln42_19_fu_617_p1));

assign tmp1_32_fu_790_p2 = ($signed(sext_ln60_9_fu_786_p1) + $signed(sext_ln42_21_fu_776_p1));

assign tmp1_33_fu_825_p2 = ($signed(zext_ln41_20_fu_727_p1) - $signed(sext_ln42_21_fu_776_p1));

assign tmp2_31_fu_893_p2 = ($signed(trunc_ln_fu_884_p4) + $signed(15'd20479));

assign tmp2_34_fu_457_p2 = ($signed(trunc_ln42_7_fu_448_p4) + $signed(15'd20479));

assign tmp2_37_fu_585_p2 = ($signed(trunc_ln42_8_fu_576_p4) + $signed(15'd20479));

assign tmp2_40_fu_744_p2 = ($signed(trunc_ln42_9_fu_735_p4) + $signed(15'd20479));

assign tmp2_42_fu_919_p2 = ($signed(select_ln56_fu_911_p3) + $signed(sext_ln42_fu_899_p1));

assign tmp2_43_fu_483_p2 = ($signed(select_ln56_7_fu_475_p3) + $signed(sext_ln42_16_fu_463_p1));

assign tmp2_44_fu_611_p2 = ($signed(select_ln56_8_fu_603_p3) + $signed(sext_ln42_18_fu_591_p1));

assign tmp2_45_fu_770_p2 = ($signed(select_ln56_9_fu_762_p3) + $signed(sext_ln42_20_fu_750_p1));

assign tmp_25_fu_903_p3 = tmp2_31_fu_893_p2[32'd14];

assign tmp_26_fu_945_p3 = tmp1_23_fu_939_p2[32'd17];

assign tmp_27_fu_980_p3 = tmp1_24_fu_974_p2[32'd17];

assign tmp_28_fu_467_p3 = tmp2_34_fu_457_p2[32'd14];

assign tmp_29_fu_509_p3 = tmp1_26_fu_503_p2[32'd17];

assign tmp_30_fu_544_p3 = tmp1_27_fu_538_p2[32'd17];

assign tmp_31_fu_595_p3 = tmp2_37_fu_585_p2[32'd14];

assign tmp_32_fu_637_p3 = tmp1_29_fu_631_p2[32'd17];

assign tmp_33_fu_671_p3 = tmp1_30_fu_665_p2[32'd17];

assign tmp_34_fu_754_p3 = tmp2_40_fu_744_p2[32'd14];

assign tmp_35_fu_796_p3 = tmp1_32_fu_790_p2[32'd17];

assign tmp_36_fu_831_p3 = tmp1_33_fu_825_p2[32'd17];

assign tmp_fu_265_p3 = ap_sig_allocacmp_n_9[32'd9];

assign trunc_ln42_7_fu_448_p4 = {{grp_fu_1060_p3[30:16]}};

assign trunc_ln42_8_fu_576_p4 = {{grp_fu_1069_p3[30:16]}};

assign trunc_ln42_9_fu_735_p4 = {{grp_fu_1091_p3[30:16]}};

assign trunc_ln66_7_fu_552_p1 = tmp1_27_fu_538_p2[15:0];

assign trunc_ln66_8_fu_679_p1 = tmp1_30_fu_665_p2[15:0];

assign trunc_ln66_9_fu_839_p1 = tmp1_33_fu_825_p2[15:0];

assign trunc_ln66_fu_988_p1 = tmp1_24_fu_974_p2[15:0];

assign trunc_ln_fu_884_p4 = {{grp_fu_1100_p3[30:16]}};

assign zext_ln41_15_fu_880_p1 = in_buf_q0;

assign zext_ln41_16_fu_440_p1 = reg_253;

assign zext_ln41_17_fu_444_p1 = reg_253;

assign zext_ln41_18_fu_570_p1 = u_8_reg_1262;

assign zext_ln41_19_fu_573_p1 = u_8_reg_1262;

assign zext_ln41_20_fu_727_p1 = reg_253;

assign zext_ln41_21_fu_731_p1 = reg_253;

assign zext_ln41_fu_876_p1 = in_buf_q0;

assign zext_ln50_10_fu_414_p1 = i_7_reg_1133_pp0_iter1_reg;

assign zext_ln50_11_fu_418_p1 = i_8_reg_1148_pp0_iter1_reg;

assign zext_ln50_12_fu_431_p1 = i_9_reg_1180_pp0_iter1_reg;

assign zext_ln50_fu_869_p1 = i_reg_1120_pp0_iter2_reg;

assign zext_ln52_16_cast_fu_293_p3 = {{1'd1}, {i_7_fu_287_p2}};

assign zext_ln52_16_fu_301_p1 = zext_ln52_16_cast_fu_293_p3;

assign zext_ln52_18_cast_fu_322_p3 = {{1'd1}, {i_8_fu_316_p2}};

assign zext_ln52_18_fu_330_p1 = zext_ln52_18_cast_fu_322_p3;

assign zext_ln52_20_cast_fu_373_p3 = {{1'd1}, {i_9_fu_368_p2}};

assign zext_ln52_20_fu_381_p1 = zext_ln52_20_cast_fu_373_p3;

assign zext_ln52_cast_fu_356_p3 = {{1'd1}, {i_reg_1120}};

assign zext_ln52_fu_363_p1 = zext_ln52_cast_fu_356_p3;

assign zext_ln53_7_fu_396_p0 = grp_fu_1019_p2;

assign zext_ln53_8_fu_399_p0 = grp_fu_1026_p2;

assign zext_ln53_9_fu_408_p0 = grp_fu_1039_p2;

assign zext_ln62_fu_435_p1 = lshr_ln_reg_1127_pp0_iter1_reg;

assign zext_ln67_1_cast_fu_703_p3 = {{1'd1}, {tmp_1_reg_1143_pp0_iter2_reg}};

assign zext_ln67_1_fu_710_p1 = zext_ln67_1_cast_fu_703_p3;

assign zext_ln67_2_cast_fu_715_p3 = {{1'd1}, {tmp_2_reg_1158_pp0_iter2_reg}};

assign zext_ln67_2_fu_722_p1 = zext_ln67_2_cast_fu_715_p3;

assign zext_ln67_3_cast_fu_857_p3 = {{1'd1}, {tmp_3_reg_1190_pp0_iter2_reg}};

assign zext_ln67_3_fu_864_p1 = zext_ln67_3_cast_fu_857_p3;

assign zext_ln67_cast_fu_1007_p3 = {{1'd1}, {lshr_ln_reg_1127_pp0_iter2_reg}};

assign zext_ln67_fu_1014_p1 = zext_ln67_cast_fu_1007_p3;

always @ (posedge ap_clk) begin
    i_7_reg_1133[0] <= 1'b1;
    i_7_reg_1133_pp0_iter1_reg[0] <= 1'b1;
    i_8_reg_1148[1] <= 1'b1;
    i_8_reg_1148_pp0_iter1_reg[1] <= 1'b1;
    i_9_reg_1180[1:0] <= 2'b11;
    i_9_reg_1180_pp0_iter1_reg[1:0] <= 2'b11;
    zext_ln62_reg_1279[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //NTT_ntt_stage
