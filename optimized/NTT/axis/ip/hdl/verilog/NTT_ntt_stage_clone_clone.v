// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module NTT_ntt_stage_clone_clone (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_buf_0_address0,
        in_buf_0_ce0,
        in_buf_0_q0,
        in_buf_0_address1,
        in_buf_0_ce1,
        in_buf_0_q1,
        in_buf_1_address0,
        in_buf_1_ce0,
        in_buf_1_q0,
        in_buf_1_address1,
        in_buf_1_ce1,
        in_buf_1_q1,
        in_buf_2_address0,
        in_buf_2_ce0,
        in_buf_2_q0,
        in_buf_2_address1,
        in_buf_2_ce1,
        in_buf_2_q1,
        in_buf_3_address0,
        in_buf_3_ce0,
        in_buf_3_q0,
        in_buf_3_address1,
        in_buf_3_ce1,
        in_buf_3_q1,
        out_buf_address0,
        out_buf_ce0,
        out_buf_we0,
        out_buf_d0,
        out_buf_address1,
        out_buf_ce1,
        out_buf_we1,
        out_buf_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] in_buf_0_address0;
output   in_buf_0_ce0;
input  [15:0] in_buf_0_q0;
output  [7:0] in_buf_0_address1;
output   in_buf_0_ce1;
input  [15:0] in_buf_0_q1;
output  [7:0] in_buf_1_address0;
output   in_buf_1_ce0;
input  [15:0] in_buf_1_q0;
output  [7:0] in_buf_1_address1;
output   in_buf_1_ce1;
input  [15:0] in_buf_1_q1;
output  [7:0] in_buf_2_address0;
output   in_buf_2_ce0;
input  [15:0] in_buf_2_q0;
output  [7:0] in_buf_2_address1;
output   in_buf_2_ce1;
input  [15:0] in_buf_2_q1;
output  [7:0] in_buf_3_address0;
output   in_buf_3_ce0;
input  [15:0] in_buf_3_q0;
output  [7:0] in_buf_3_address1;
output   in_buf_3_ce1;
input  [15:0] in_buf_3_q1;
output  [9:0] out_buf_address0;
output   out_buf_ce0;
output   out_buf_we0;
output  [15:0] out_buf_d0;
output  [9:0] out_buf_address1;
output   out_buf_ce1;
output   out_buf_we1;
output  [15:0] out_buf_d1;

reg ap_idle;
reg in_buf_0_ce0;
reg in_buf_0_ce1;
reg in_buf_1_ce0;
reg in_buf_1_ce1;
reg in_buf_2_ce0;
reg in_buf_2_ce1;
reg in_buf_3_ce0;
reg in_buf_3_ce1;
reg[9:0] out_buf_address0;
reg out_buf_ce0;
reg out_buf_we0;
reg[15:0] out_buf_d0;
reg[9:0] out_buf_address1;
reg out_buf_ce1;
reg out_buf_we1;
reg[15:0] out_buf_d1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] tmp_reg_1222;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [9:0] GMb6_address0;
reg    GMb6_ce0;
wire   [13:0] GMb6_q0;
reg   [9:0] n_2_reg_1217;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] n_2_reg_1217_pp0_iter1_reg;
reg   [9:0] n_2_reg_1217_pp0_iter2_reg;
wire   [0:0] tmp_fu_312_p3;
reg   [0:0] tmp_reg_1222_pp0_iter1_reg;
reg   [0:0] tmp_reg_1222_pp0_iter2_reg;
wire   [8:0] i_gm_fu_320_p1;
reg   [8:0] i_gm_reg_1226;
wire   [63:0] zext_ln50_1_fu_347_p1;
reg   [63:0] zext_ln50_1_reg_1236;
reg   [63:0] zext_ln50_1_reg_1236_pp0_iter1_reg;
wire   [8:0] i_gm_2_fu_353_p2;
reg   [8:0] i_gm_2_reg_1252;
reg   [8:0] i_gm_2_reg_1252_pp0_iter1_reg;
reg   [8:0] i_gm_2_reg_1252_pp0_iter2_reg;
wire   [63:0] zext_ln50_4_fu_369_p1;
reg   [63:0] zext_ln50_4_reg_1258;
reg   [63:0] zext_ln50_4_reg_1258_pp0_iter1_reg;
wire   [8:0] i_gm_3_fu_374_p2;
reg   [8:0] i_gm_3_reg_1268;
reg   [8:0] i_gm_3_reg_1268_pp0_iter1_reg;
reg   [8:0] i_gm_3_reg_1268_pp0_iter2_reg;
reg   [8:0] i_gm_3_reg_1268_pp0_iter3_reg;
wire   [63:0] zext_ln50_6_fu_390_p1;
reg   [63:0] zext_ln50_6_reg_1274;
reg   [63:0] zext_ln50_6_reg_1274_pp0_iter1_reg;
reg   [63:0] zext_ln50_6_reg_1274_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [8:0] i_gm_1_fu_414_p2;
reg   [8:0] i_gm_1_reg_1294;
reg   [8:0] i_gm_1_reg_1294_pp0_iter1_reg;
reg   [8:0] i_gm_1_reg_1294_pp0_iter2_reg;
reg   [15:0] in_buf_3_load_reg_1304;
reg   [15:0] in_buf_1_load_1_reg_1309;
reg   [15:0] in_buf_3_load_1_reg_1314;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire   [29:0] grp_fu_1118_p2;
reg   [29:0] tmp2_reg_1349;
reg   [29:0] tmp2_reg_1349_pp0_iter2_reg;
wire   [29:0] grp_fu_1125_p2;
reg   [29:0] tmp2_3_reg_1369;
reg   [29:0] tmp2_3_reg_1369_pp0_iter2_reg;
wire   [29:0] grp_fu_1132_p2;
reg   [29:0] tmp2_6_reg_1379;
reg   [29:0] tmp2_6_reg_1379_pp0_iter2_reg;
wire   [29:0] grp_fu_1146_p2;
reg   [29:0] tmp2_9_reg_1394;
reg   [29:0] tmp2_9_reg_1394_pp0_iter2_reg;
reg   [15:0] u_reg_1424;
reg   [15:0] u_1_reg_1436;
reg   [15:0] u_2_reg_1443;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln48_fu_332_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln48_1_fu_427_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln48_2_fu_446_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln48_3_fu_465_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln50_fu_506_p1;
wire   [63:0] zext_ln52_fu_523_p1;
wire   [63:0] zext_ln50_2_fu_663_p1;
wire   [63:0] zext_ln52_2_fu_680_p1;
wire   [63:0] zext_ln50_3_fu_817_p1;
wire   [63:0] zext_ln52_4_fu_834_p1;
wire   [63:0] zext_ln50_5_fu_971_p1;
wire   [63:0] zext_ln52_6_fu_990_p1;
reg   [9:0] n_fu_90;
wire   [9:0] n_3_fu_395_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_n_2;
wire   [15:0] add_ln62_fu_610_p2;
wire   [15:0] add_ln67_fu_643_p2;
wire   [15:0] add_ln62_1_fu_767_p2;
wire   [15:0] add_ln67_1_fu_800_p2;
wire   [15:0] add_ln62_2_fu_921_p2;
wire   [15:0] add_ln67_2_fu_954_p2;
wire   [15:0] add_ln62_3_fu_1078_p2;
wire   [15:0] add_ln67_3_fu_1111_p2;
wire   [9:0] zext_ln48_cast_fu_324_p3;
wire   [7:0] lshr_ln_fu_337_p4;
wire   [7:0] lshr_ln50_1_fu_359_p4;
wire   [7:0] lshr_ln50_2_fu_380_p4;
wire   [9:0] zext_ln48_1_cast_fu_419_p3;
wire   [9:0] zext_ln48_2_cast_fu_439_p3;
wire   [9:0] zext_ln48_3_cast_fu_458_p3;
wire  signed [15:0] zext_ln53_fu_486_p0;
wire   [15:0] grp_fu_1139_p2;
wire  signed [15:0] zext_ln53_1_fu_492_p0;
wire   [15:0] grp_fu_1153_p2;
wire  signed [15:0] zext_ln53_2_fu_498_p0;
wire   [15:0] grp_fu_1160_p2;
wire   [9:0] i_fu_501_p2;
wire   [9:0] or_ln52_fu_517_p2;
wire   [30:0] grp_fu_1167_p3;
wire   [14:0] trunc_ln1_fu_528_p4;
wire  signed [14:0] tmp2_1_fu_537_p2;
wire   [0:0] tmp_1_fu_547_p3;
wire   [15:0] select_ln56_fu_555_p3;
wire  signed [15:0] sext_ln42_fu_543_p1;
wire  signed [15:0] tmp2_12_fu_563_p2;
wire   [16:0] zext_ln41_1_fu_514_p1;
wire   [16:0] add_ln60_fu_573_p2;
wire  signed [17:0] sext_ln60_fu_579_p1;
wire  signed [17:0] sext_ln42_1_fu_569_p1;
wire   [17:0] tmp1_1_fu_583_p2;
wire   [0:0] tmp_2_fu_589_p3;
wire   [15:0] select_ln62_fu_602_p3;
wire   [15:0] add_ln62_4_fu_597_p2;
wire   [17:0] zext_ln41_fu_511_p1;
wire   [17:0] tmp1_2_fu_617_p2;
wire   [0:0] tmp_3_fu_623_p3;
wire   [15:0] select_ln67_fu_635_p3;
wire   [15:0] trunc_ln66_fu_631_p1;
wire  signed [15:0] zext_ln53_3_fu_653_p0;
wire   [15:0] grp_fu_1176_p2;
wire   [9:0] i_1_fu_656_p3;
wire   [9:0] or_ln52_1_fu_674_p2;
wire   [30:0] grp_fu_1183_p3;
wire   [14:0] trunc_ln42_1_fu_685_p4;
wire  signed [14:0] tmp2_4_fu_694_p2;
wire   [0:0] tmp_4_fu_704_p3;
wire   [15:0] select_ln56_1_fu_712_p3;
wire  signed [15:0] sext_ln42_2_fu_700_p1;
wire  signed [15:0] tmp2_13_fu_720_p2;
wire   [16:0] zext_ln41_3_fu_671_p1;
wire   [16:0] add_ln60_2_fu_730_p2;
wire  signed [17:0] sext_ln60_1_fu_736_p1;
wire  signed [17:0] sext_ln42_3_fu_726_p1;
wire   [17:0] tmp1_4_fu_740_p2;
wire   [0:0] tmp_5_fu_746_p3;
wire   [15:0] select_ln62_1_fu_759_p3;
wire   [15:0] add_ln62_5_fu_754_p2;
wire   [17:0] zext_ln41_2_fu_668_p1;
wire   [17:0] tmp1_5_fu_774_p2;
wire   [0:0] tmp_6_fu_780_p3;
wire   [15:0] select_ln67_1_fu_792_p3;
wire   [15:0] trunc_ln66_1_fu_788_p1;
wire   [9:0] i_2_fu_810_p3;
wire   [9:0] or_ln52_2_fu_828_p2;
wire   [30:0] grp_fu_1192_p3;
wire   [14:0] trunc_ln42_2_fu_839_p4;
wire  signed [14:0] tmp2_7_fu_848_p2;
wire   [0:0] tmp_7_fu_858_p3;
wire   [15:0] select_ln56_2_fu_866_p3;
wire  signed [15:0] sext_ln42_4_fu_854_p1;
wire  signed [15:0] tmp2_14_fu_874_p2;
wire   [16:0] zext_ln41_5_fu_825_p1;
wire   [16:0] add_ln60_4_fu_884_p2;
wire  signed [17:0] sext_ln60_2_fu_890_p1;
wire  signed [17:0] sext_ln42_5_fu_880_p1;
wire   [17:0] tmp1_7_fu_894_p2;
wire   [0:0] tmp_8_fu_900_p3;
wire   [15:0] select_ln62_2_fu_913_p3;
wire   [15:0] add_ln62_6_fu_908_p2;
wire   [17:0] zext_ln41_4_fu_822_p1;
wire   [17:0] tmp1_8_fu_928_p2;
wire   [0:0] tmp_9_fu_934_p3;
wire   [15:0] select_ln67_2_fu_946_p3;
wire   [15:0] trunc_ln66_2_fu_942_p1;
wire   [9:0] i_3_fu_964_p3;
wire   [9:0] or_ln52_3_fu_984_p2;
wire   [30:0] grp_fu_1201_p3;
wire   [14:0] trunc_ln42_3_fu_995_p4;
wire  signed [14:0] tmp2_10_fu_1004_p2;
wire   [0:0] tmp_10_fu_1014_p3;
wire   [15:0] select_ln56_3_fu_1022_p3;
wire  signed [15:0] sext_ln42_6_fu_1010_p1;
wire  signed [15:0] tmp2_15_fu_1030_p2;
wire   [16:0] zext_ln41_7_fu_980_p1;
wire   [16:0] add_ln60_6_fu_1040_p2;
wire  signed [17:0] sext_ln60_3_fu_1046_p1;
wire  signed [17:0] sext_ln42_7_fu_1036_p1;
wire   [17:0] tmp1_10_fu_1050_p2;
wire   [0:0] tmp_11_fu_1056_p3;
wire   [15:0] select_ln62_3_fu_1070_p3;
wire   [15:0] add_ln62_7_fu_1064_p2;
wire   [17:0] zext_ln41_6_fu_976_p1;
wire   [17:0] tmp1_11_fu_1085_p2;
wire   [0:0] tmp_12_fu_1091_p3;
wire   [15:0] select_ln67_3_fu_1103_p3;
wire   [15:0] trunc_ln66_3_fu_1099_p1;
wire   [15:0] grp_fu_1118_p0;
wire   [13:0] grp_fu_1118_p1;
wire   [15:0] grp_fu_1125_p0;
wire   [13:0] grp_fu_1125_p1;
wire   [15:0] grp_fu_1132_p0;
wire   [13:0] grp_fu_1132_p1;
wire  signed [15:0] grp_fu_1139_p0;
wire   [13:0] grp_fu_1139_p1;
wire   [15:0] grp_fu_1146_p0;
wire   [13:0] grp_fu_1146_p1;
wire  signed [15:0] grp_fu_1153_p0;
wire   [13:0] grp_fu_1153_p1;
wire  signed [15:0] grp_fu_1160_p0;
wire   [13:0] grp_fu_1160_p1;
wire   [15:0] grp_fu_1167_p0;
wire   [13:0] grp_fu_1167_p1;
wire   [29:0] grp_fu_1167_p2;
wire  signed [15:0] grp_fu_1176_p0;
wire   [13:0] grp_fu_1176_p1;
wire   [15:0] grp_fu_1183_p0;
wire   [13:0] grp_fu_1183_p1;
wire   [29:0] grp_fu_1183_p2;
wire   [15:0] grp_fu_1192_p0;
wire   [13:0] grp_fu_1192_p1;
wire   [29:0] grp_fu_1192_p2;
wire   [15:0] grp_fu_1201_p0;
wire   [13:0] grp_fu_1201_p1;
wire   [29:0] grp_fu_1201_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [29:0] grp_fu_1118_p00;
wire   [29:0] grp_fu_1118_p10;
wire   [29:0] grp_fu_1125_p00;
wire   [29:0] grp_fu_1125_p10;
wire   [29:0] grp_fu_1132_p00;
wire   [29:0] grp_fu_1132_p10;
wire   [29:0] grp_fu_1146_p00;
wire   [29:0] grp_fu_1146_p10;
wire   [29:0] grp_fu_1167_p00;
wire   [30:0] grp_fu_1167_p20;
wire   [29:0] grp_fu_1183_p00;
wire   [30:0] grp_fu_1183_p20;
wire   [29:0] grp_fu_1192_p00;
wire   [30:0] grp_fu_1192_p20;
wire   [29:0] grp_fu_1201_p00;
wire   [30:0] grp_fu_1201_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

NTT_ntt_stage_clone_GMb_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
GMb6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(GMb6_address0),
    .ce0(GMb6_ce0),
    .q0(GMb6_q0)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1118_p0),
    .din1(grp_fu_1118_p1),
    .ce(1'b1),
    .dout(grp_fu_1118_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1125_p0),
    .din1(grp_fu_1125_p1),
    .ce(1'b1),
    .dout(grp_fu_1125_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1132_p0),
    .din1(grp_fu_1132_p1),
    .ce(1'b1),
    .dout(grp_fu_1132_p2)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1139_p0),
    .din1(grp_fu_1139_p1),
    .ce(1'b1),
    .dout(grp_fu_1139_p2)
);

NTT_mul_mul_16ns_14ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_14ns_30_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1146_p0),
    .din1(grp_fu_1146_p1),
    .ce(1'b1),
    .dout(grp_fu_1146_p2)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1153_p0),
    .din1(grp_fu_1153_p1),
    .ce(1'b1),
    .dout(grp_fu_1153_p2)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1160_p0),
    .din1(grp_fu_1160_p1),
    .ce(1'b1),
    .dout(grp_fu_1160_p2)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1167_p0),
    .din1(grp_fu_1167_p1),
    .din2(grp_fu_1167_p2),
    .ce(1'b1),
    .dout(grp_fu_1167_p3)
);

NTT_mul_mul_16s_14ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_14ns_16_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1176_p0),
    .din1(grp_fu_1176_p1),
    .ce(1'b1),
    .dout(grp_fu_1176_p2)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1183_p0),
    .din1(grp_fu_1183_p1),
    .din2(grp_fu_1183_p2),
    .ce(1'b1),
    .dout(grp_fu_1183_p3)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1192_p0),
    .din1(grp_fu_1192_p1),
    .din2(grp_fu_1192_p2),
    .ce(1'b1),
    .dout(grp_fu_1192_p3)
);

NTT_mac_muladd_16ns_14ns_30ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
mac_muladd_16ns_14ns_30ns_31_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1201_p0),
    .din1(grp_fu_1201_p1),
    .din2(grp_fu_1201_p2),
    .ce(1'b1),
    .dout(grp_fu_1201_p3)
);

NTT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_312_p3 == 1'd0))) begin
            n_fu_90 <= n_3_fu_395_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_90 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1222 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_gm_1_reg_1294[8 : 1] <= i_gm_1_fu_414_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_gm_1_reg_1294_pp0_iter1_reg[8 : 1] <= i_gm_1_reg_1294[8 : 1];
        i_gm_1_reg_1294_pp0_iter2_reg[8 : 1] <= i_gm_1_reg_1294_pp0_iter1_reg[8 : 1];
        tmp2_3_reg_1369 <= grp_fu_1125_p2;
        tmp2_3_reg_1369_pp0_iter2_reg <= tmp2_3_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_312_p3 == 1'd0))) begin
        i_gm_2_reg_1252[0] <= i_gm_2_fu_353_p2[0];
i_gm_2_reg_1252[8 : 2] <= i_gm_2_fu_353_p2[8 : 2];
        i_gm_3_reg_1268[8 : 2] <= i_gm_3_fu_374_p2[8 : 2];
        i_gm_reg_1226 <= i_gm_fu_320_p1;
        zext_ln50_1_reg_1236[7 : 0] <= zext_ln50_1_fu_347_p1[7 : 0];
        zext_ln50_4_reg_1258[7 : 1] <= zext_ln50_4_fu_369_p1[7 : 1];
        zext_ln50_6_reg_1274[7 : 1] <= zext_ln50_6_fu_390_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_gm_2_reg_1252_pp0_iter1_reg[0] <= i_gm_2_reg_1252[0];
i_gm_2_reg_1252_pp0_iter1_reg[8 : 2] <= i_gm_2_reg_1252[8 : 2];
        i_gm_2_reg_1252_pp0_iter2_reg[0] <= i_gm_2_reg_1252_pp0_iter1_reg[0];
i_gm_2_reg_1252_pp0_iter2_reg[8 : 2] <= i_gm_2_reg_1252_pp0_iter1_reg[8 : 2];
        i_gm_3_reg_1268_pp0_iter1_reg[8 : 2] <= i_gm_3_reg_1268[8 : 2];
        i_gm_3_reg_1268_pp0_iter2_reg[8 : 2] <= i_gm_3_reg_1268_pp0_iter1_reg[8 : 2];
        i_gm_3_reg_1268_pp0_iter3_reg[8 : 2] <= i_gm_3_reg_1268_pp0_iter2_reg[8 : 2];
        n_2_reg_1217 <= ap_sig_allocacmp_n_2;
        n_2_reg_1217_pp0_iter1_reg <= n_2_reg_1217;
        n_2_reg_1217_pp0_iter2_reg <= n_2_reg_1217_pp0_iter1_reg;
        tmp2_reg_1349 <= grp_fu_1118_p2;
        tmp2_reg_1349_pp0_iter2_reg <= tmp2_reg_1349;
        tmp_reg_1222 <= ap_sig_allocacmp_n_2[32'd9];
        tmp_reg_1222_pp0_iter1_reg <= tmp_reg_1222;
        tmp_reg_1222_pp0_iter2_reg <= tmp_reg_1222_pp0_iter1_reg;
        zext_ln50_1_reg_1236_pp0_iter1_reg[7 : 0] <= zext_ln50_1_reg_1236[7 : 0];
        zext_ln50_4_reg_1258_pp0_iter1_reg[7 : 1] <= zext_ln50_4_reg_1258[7 : 1];
        zext_ln50_6_reg_1274_pp0_iter1_reg[7 : 1] <= zext_ln50_6_reg_1274[7 : 1];
        zext_ln50_6_reg_1274_pp0_iter2_reg[7 : 1] <= zext_ln50_6_reg_1274_pp0_iter1_reg[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1222 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_buf_1_load_1_reg_1309 <= in_buf_1_q0;
        in_buf_3_load_1_reg_1314 <= in_buf_3_q0;
        in_buf_3_load_reg_1304 <= in_buf_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp2_6_reg_1379 <= grp_fu_1132_p2;
        tmp2_6_reg_1379_pp0_iter2_reg <= tmp2_6_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp2_9_reg_1394 <= grp_fu_1146_p2;
        tmp2_9_reg_1394_pp0_iter2_reg <= tmp2_9_reg_1394;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        u_1_reg_1436 <= in_buf_2_q1;
        u_2_reg_1443 <= in_buf_0_q0;
        u_reg_1424 <= in_buf_0_q1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            GMb6_address0 = zext_ln48_3_fu_465_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            GMb6_address0 = zext_ln48_2_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            GMb6_address0 = zext_ln48_1_fu_427_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            GMb6_address0 = zext_ln48_fu_332_p1;
        end else begin
            GMb6_address0 = 'bx;
        end
    end else begin
        GMb6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        GMb6_ce0 = 1'b1;
    end else begin
        GMb6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_1222 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_reg_1222_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_2 = 10'd0;
    end else begin
        ap_sig_allocacmp_n_2 = n_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_0_ce0 = 1'b1;
    end else begin
        in_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_0_ce1 = 1'b1;
    end else begin
        in_buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_1_ce0 = 1'b1;
    end else begin
        in_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_1_ce1 = 1'b1;
    end else begin
        in_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_2_ce0 = 1'b1;
    end else begin
        in_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_2_ce1 = 1'b1;
    end else begin
        in_buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_3_ce0 = 1'b1;
    end else begin
        in_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_buf_3_ce1 = 1'b1;
    end else begin
        in_buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_address0 = zext_ln52_6_fu_990_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_address0 = zext_ln52_4_fu_834_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_buf_address0 = zext_ln52_2_fu_680_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_address0 = zext_ln52_fu_523_p1;
    end else begin
        out_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_address1 = zext_ln50_5_fu_971_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_address1 = zext_ln50_3_fu_817_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_buf_address1 = zext_ln50_2_fu_663_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_address1 = zext_ln50_fu_506_p1;
    end else begin
        out_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_ce0 = 1'b1;
    end else begin
        out_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_ce1 = 1'b1;
    end else begin
        out_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_d0 = add_ln67_3_fu_1111_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_d0 = add_ln67_2_fu_954_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_buf_d0 = add_ln67_1_fu_800_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_d0 = add_ln67_fu_643_p2;
    end else begin
        out_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_buf_d1 = add_ln62_3_fu_1078_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_d1 = add_ln62_2_fu_921_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_buf_d1 = add_ln62_1_fu_767_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_buf_d1 = add_ln62_fu_610_p2;
    end else begin
        out_buf_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_we0 = 1'b1;
    end else begin
        out_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_buf_we1 = 1'b1;
    end else begin
        out_buf_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln60_2_fu_730_p2 = ($signed(zext_ln41_3_fu_671_p1) + $signed(17'd118783));

assign add_ln60_4_fu_884_p2 = ($signed(zext_ln41_5_fu_825_p1) + $signed(17'd118783));

assign add_ln60_6_fu_1040_p2 = ($signed(zext_ln41_7_fu_980_p1) + $signed(17'd118783));

assign add_ln60_fu_573_p2 = ($signed(zext_ln41_1_fu_514_p1) + $signed(17'd118783));

assign add_ln62_1_fu_767_p2 = (select_ln62_1_fu_759_p3 + add_ln62_5_fu_754_p2);

assign add_ln62_2_fu_921_p2 = (select_ln62_2_fu_913_p3 + add_ln62_6_fu_908_p2);

assign add_ln62_3_fu_1078_p2 = (select_ln62_3_fu_1070_p3 + add_ln62_7_fu_1064_p2);

assign add_ln62_4_fu_597_p2 = ($signed(u_reg_1424) + $signed(tmp2_12_fu_563_p2));

assign add_ln62_5_fu_754_p2 = ($signed(u_1_reg_1436) + $signed(tmp2_13_fu_720_p2));

assign add_ln62_6_fu_908_p2 = ($signed(u_2_reg_1443) + $signed(tmp2_14_fu_874_p2));

assign add_ln62_7_fu_1064_p2 = ($signed(in_buf_2_q0) + $signed(tmp2_15_fu_1030_p2));

assign add_ln62_fu_610_p2 = (select_ln62_fu_602_p3 + add_ln62_4_fu_597_p2);

assign add_ln67_1_fu_800_p2 = (select_ln67_1_fu_792_p3 + trunc_ln66_1_fu_788_p1);

assign add_ln67_2_fu_954_p2 = (select_ln67_2_fu_946_p3 + trunc_ln66_2_fu_942_p1);

assign add_ln67_3_fu_1111_p2 = (select_ln67_3_fu_1103_p3 + trunc_ln66_3_fu_1099_p1);

assign add_ln67_fu_643_p2 = (select_ln67_fu_635_p3 + trunc_ln66_fu_631_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_1118_p0 = grp_fu_1118_p00;

assign grp_fu_1118_p00 = in_buf_1_q1;

assign grp_fu_1118_p1 = grp_fu_1118_p10;

assign grp_fu_1118_p10 = GMb6_q0;

assign grp_fu_1125_p0 = grp_fu_1125_p00;

assign grp_fu_1125_p00 = in_buf_3_load_reg_1304;

assign grp_fu_1125_p1 = grp_fu_1125_p10;

assign grp_fu_1125_p10 = GMb6_q0;

assign grp_fu_1132_p0 = grp_fu_1132_p00;

assign grp_fu_1132_p00 = in_buf_1_load_1_reg_1309;

assign grp_fu_1132_p1 = grp_fu_1132_p10;

assign grp_fu_1132_p10 = GMb6_q0;

assign grp_fu_1139_p0 = grp_fu_1118_p2[15:0];

assign grp_fu_1139_p1 = 16'd12287;

assign grp_fu_1146_p0 = grp_fu_1146_p00;

assign grp_fu_1146_p00 = in_buf_3_load_1_reg_1314;

assign grp_fu_1146_p1 = grp_fu_1146_p10;

assign grp_fu_1146_p10 = GMb6_q0;

assign grp_fu_1153_p0 = grp_fu_1125_p2[15:0];

assign grp_fu_1153_p1 = 16'd12287;

assign grp_fu_1160_p0 = grp_fu_1132_p2[15:0];

assign grp_fu_1160_p1 = 16'd12287;

assign grp_fu_1167_p0 = grp_fu_1167_p00;

assign grp_fu_1167_p00 = $unsigned(zext_ln53_fu_486_p0);

assign grp_fu_1167_p1 = 30'd12289;

assign grp_fu_1167_p2 = grp_fu_1167_p20;

assign grp_fu_1167_p20 = tmp2_reg_1349_pp0_iter2_reg;

assign grp_fu_1176_p0 = grp_fu_1146_p2[15:0];

assign grp_fu_1176_p1 = 16'd12287;

assign grp_fu_1183_p0 = grp_fu_1183_p00;

assign grp_fu_1183_p00 = $unsigned(zext_ln53_1_fu_492_p0);

assign grp_fu_1183_p1 = 30'd12289;

assign grp_fu_1183_p2 = grp_fu_1183_p20;

assign grp_fu_1183_p20 = tmp2_3_reg_1369_pp0_iter2_reg;

assign grp_fu_1192_p0 = grp_fu_1192_p00;

assign grp_fu_1192_p00 = $unsigned(zext_ln53_2_fu_498_p0);

assign grp_fu_1192_p1 = 30'd12289;

assign grp_fu_1192_p2 = grp_fu_1192_p20;

assign grp_fu_1192_p20 = tmp2_6_reg_1379_pp0_iter2_reg;

assign grp_fu_1201_p0 = grp_fu_1201_p00;

assign grp_fu_1201_p00 = $unsigned(zext_ln53_3_fu_653_p0);

assign grp_fu_1201_p1 = 30'd12289;

assign grp_fu_1201_p2 = grp_fu_1201_p20;

assign grp_fu_1201_p20 = tmp2_9_reg_1394_pp0_iter2_reg;

assign i_1_fu_656_p3 = {{i_gm_1_reg_1294_pp0_iter2_reg}, {1'd0}};

assign i_2_fu_810_p3 = {{i_gm_2_reg_1252_pp0_iter2_reg}, {1'd0}};

assign i_3_fu_964_p3 = {{i_gm_3_reg_1268_pp0_iter3_reg}, {1'd0}};

assign i_fu_501_p2 = n_2_reg_1217_pp0_iter2_reg << 10'd1;

assign i_gm_1_fu_414_p2 = (i_gm_reg_1226 | 9'd1);

assign i_gm_2_fu_353_p2 = (i_gm_fu_320_p1 | 9'd2);

assign i_gm_3_fu_374_p2 = (i_gm_fu_320_p1 | 9'd3);

assign i_gm_fu_320_p1 = ap_sig_allocacmp_n_2[8:0];

assign in_buf_0_address0 = zext_ln50_4_reg_1258_pp0_iter1_reg;

assign in_buf_0_address1 = zext_ln50_1_reg_1236_pp0_iter1_reg;

assign in_buf_1_address0 = zext_ln50_4_fu_369_p1;

assign in_buf_1_address1 = zext_ln50_1_fu_347_p1;

assign in_buf_2_address0 = zext_ln50_6_reg_1274_pp0_iter2_reg;

assign in_buf_2_address1 = zext_ln50_1_reg_1236_pp0_iter1_reg;

assign in_buf_3_address0 = zext_ln50_6_fu_390_p1;

assign in_buf_3_address1 = zext_ln50_1_fu_347_p1;

assign lshr_ln50_1_fu_359_p4 = {{i_gm_2_fu_353_p2[8:1]}};

assign lshr_ln50_2_fu_380_p4 = {{i_gm_3_fu_374_p2[8:1]}};

assign lshr_ln_fu_337_p4 = {{ap_sig_allocacmp_n_2[8:1]}};

assign n_3_fu_395_p2 = (ap_sig_allocacmp_n_2 + 10'd4);

assign or_ln52_1_fu_674_p2 = (i_1_fu_656_p3 | 10'd1);

assign or_ln52_2_fu_828_p2 = (i_2_fu_810_p3 | 10'd1);

assign or_ln52_3_fu_984_p2 = (i_3_fu_964_p3 | 10'd1);

assign or_ln52_fu_517_p2 = (i_fu_501_p2 | 10'd1);

assign select_ln56_1_fu_712_p3 = ((tmp_4_fu_704_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_2_fu_866_p3 = ((tmp_7_fu_858_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_3_fu_1022_p3 = ((tmp_10_fu_1014_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln56_fu_555_p3 = ((tmp_1_fu_547_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln62_1_fu_759_p3 = ((tmp_5_fu_746_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_2_fu_913_p3 = ((tmp_8_fu_900_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_3_fu_1070_p3 = ((tmp_11_fu_1056_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln62_fu_602_p3 = ((tmp_2_fu_589_p3[0:0] == 1'b1) ? 16'd0 : 16'd53247);

assign select_ln67_1_fu_792_p3 = ((tmp_6_fu_780_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_2_fu_946_p3 = ((tmp_9_fu_934_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_3_fu_1103_p3 = ((tmp_12_fu_1091_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign select_ln67_fu_635_p3 = ((tmp_3_fu_623_p3[0:0] == 1'b1) ? 16'd12289 : 16'd0);

assign sext_ln42_1_fu_569_p1 = tmp2_12_fu_563_p2;

assign sext_ln42_2_fu_700_p1 = tmp2_4_fu_694_p2;

assign sext_ln42_3_fu_726_p1 = tmp2_13_fu_720_p2;

assign sext_ln42_4_fu_854_p1 = tmp2_7_fu_848_p2;

assign sext_ln42_5_fu_880_p1 = tmp2_14_fu_874_p2;

assign sext_ln42_6_fu_1010_p1 = tmp2_10_fu_1004_p2;

assign sext_ln42_7_fu_1036_p1 = tmp2_15_fu_1030_p2;

assign sext_ln42_fu_543_p1 = tmp2_1_fu_537_p2;

assign sext_ln60_1_fu_736_p1 = $signed(add_ln60_2_fu_730_p2);

assign sext_ln60_2_fu_890_p1 = $signed(add_ln60_4_fu_884_p2);

assign sext_ln60_3_fu_1046_p1 = $signed(add_ln60_6_fu_1040_p2);

assign sext_ln60_fu_579_p1 = $signed(add_ln60_fu_573_p2);

assign tmp1_10_fu_1050_p2 = ($signed(sext_ln60_3_fu_1046_p1) + $signed(sext_ln42_7_fu_1036_p1));

assign tmp1_11_fu_1085_p2 = ($signed(zext_ln41_6_fu_976_p1) - $signed(sext_ln42_7_fu_1036_p1));

assign tmp1_1_fu_583_p2 = ($signed(sext_ln60_fu_579_p1) + $signed(sext_ln42_1_fu_569_p1));

assign tmp1_2_fu_617_p2 = ($signed(zext_ln41_fu_511_p1) - $signed(sext_ln42_1_fu_569_p1));

assign tmp1_4_fu_740_p2 = ($signed(sext_ln60_1_fu_736_p1) + $signed(sext_ln42_3_fu_726_p1));

assign tmp1_5_fu_774_p2 = ($signed(zext_ln41_2_fu_668_p1) - $signed(sext_ln42_3_fu_726_p1));

assign tmp1_7_fu_894_p2 = ($signed(sext_ln60_2_fu_890_p1) + $signed(sext_ln42_5_fu_880_p1));

assign tmp1_8_fu_928_p2 = ($signed(zext_ln41_4_fu_822_p1) - $signed(sext_ln42_5_fu_880_p1));

assign tmp2_10_fu_1004_p2 = ($signed(trunc_ln42_3_fu_995_p4) + $signed(15'd20479));

assign tmp2_12_fu_563_p2 = ($signed(select_ln56_fu_555_p3) + $signed(sext_ln42_fu_543_p1));

assign tmp2_13_fu_720_p2 = ($signed(select_ln56_1_fu_712_p3) + $signed(sext_ln42_2_fu_700_p1));

assign tmp2_14_fu_874_p2 = ($signed(select_ln56_2_fu_866_p3) + $signed(sext_ln42_4_fu_854_p1));

assign tmp2_15_fu_1030_p2 = ($signed(select_ln56_3_fu_1022_p3) + $signed(sext_ln42_6_fu_1010_p1));

assign tmp2_1_fu_537_p2 = ($signed(trunc_ln1_fu_528_p4) + $signed(15'd20479));

assign tmp2_4_fu_694_p2 = ($signed(trunc_ln42_1_fu_685_p4) + $signed(15'd20479));

assign tmp2_7_fu_848_p2 = ($signed(trunc_ln42_2_fu_839_p4) + $signed(15'd20479));

assign tmp_10_fu_1014_p3 = tmp2_10_fu_1004_p2[32'd14];

assign tmp_11_fu_1056_p3 = tmp1_10_fu_1050_p2[32'd17];

assign tmp_12_fu_1091_p3 = tmp1_11_fu_1085_p2[32'd17];

assign tmp_1_fu_547_p3 = tmp2_1_fu_537_p2[32'd14];

assign tmp_2_fu_589_p3 = tmp1_1_fu_583_p2[32'd17];

assign tmp_3_fu_623_p3 = tmp1_2_fu_617_p2[32'd17];

assign tmp_4_fu_704_p3 = tmp2_4_fu_694_p2[32'd14];

assign tmp_5_fu_746_p3 = tmp1_4_fu_740_p2[32'd17];

assign tmp_6_fu_780_p3 = tmp1_5_fu_774_p2[32'd17];

assign tmp_7_fu_858_p3 = tmp2_7_fu_848_p2[32'd14];

assign tmp_8_fu_900_p3 = tmp1_7_fu_894_p2[32'd17];

assign tmp_9_fu_934_p3 = tmp1_8_fu_928_p2[32'd17];

assign tmp_fu_312_p3 = ap_sig_allocacmp_n_2[32'd9];

assign trunc_ln1_fu_528_p4 = {{grp_fu_1167_p3[30:16]}};

assign trunc_ln42_1_fu_685_p4 = {{grp_fu_1183_p3[30:16]}};

assign trunc_ln42_2_fu_839_p4 = {{grp_fu_1192_p3[30:16]}};

assign trunc_ln42_3_fu_995_p4 = {{grp_fu_1201_p3[30:16]}};

assign trunc_ln66_1_fu_788_p1 = tmp1_5_fu_774_p2[15:0];

assign trunc_ln66_2_fu_942_p1 = tmp1_8_fu_928_p2[15:0];

assign trunc_ln66_3_fu_1099_p1 = tmp1_11_fu_1085_p2[15:0];

assign trunc_ln66_fu_631_p1 = tmp1_2_fu_617_p2[15:0];

assign zext_ln41_1_fu_514_p1 = u_reg_1424;

assign zext_ln41_2_fu_668_p1 = u_1_reg_1436;

assign zext_ln41_3_fu_671_p1 = u_1_reg_1436;

assign zext_ln41_4_fu_822_p1 = u_2_reg_1443;

assign zext_ln41_5_fu_825_p1 = u_2_reg_1443;

assign zext_ln41_6_fu_976_p1 = in_buf_2_q0;

assign zext_ln41_7_fu_980_p1 = in_buf_2_q0;

assign zext_ln41_fu_511_p1 = u_reg_1424;

assign zext_ln48_1_cast_fu_419_p3 = {{1'd1}, {i_gm_1_fu_414_p2}};

assign zext_ln48_1_fu_427_p1 = zext_ln48_1_cast_fu_419_p3;

assign zext_ln48_2_cast_fu_439_p3 = {{1'd1}, {i_gm_2_reg_1252}};

assign zext_ln48_2_fu_446_p1 = zext_ln48_2_cast_fu_439_p3;

assign zext_ln48_3_cast_fu_458_p3 = {{1'd1}, {i_gm_3_reg_1268}};

assign zext_ln48_3_fu_465_p1 = zext_ln48_3_cast_fu_458_p3;

assign zext_ln48_cast_fu_324_p3 = {{1'd1}, {i_gm_fu_320_p1}};

assign zext_ln48_fu_332_p1 = zext_ln48_cast_fu_324_p3;

assign zext_ln50_1_fu_347_p1 = lshr_ln_fu_337_p4;

assign zext_ln50_2_fu_663_p1 = i_1_fu_656_p3;

assign zext_ln50_3_fu_817_p1 = i_2_fu_810_p3;

assign zext_ln50_4_fu_369_p1 = lshr_ln50_1_fu_359_p4;

assign zext_ln50_5_fu_971_p1 = i_3_fu_964_p3;

assign zext_ln50_6_fu_390_p1 = lshr_ln50_2_fu_380_p4;

assign zext_ln50_fu_506_p1 = i_fu_501_p2;

assign zext_ln52_2_fu_680_p1 = or_ln52_1_fu_674_p2;

assign zext_ln52_4_fu_834_p1 = or_ln52_2_fu_828_p2;

assign zext_ln52_6_fu_990_p1 = or_ln52_3_fu_984_p2;

assign zext_ln52_fu_523_p1 = or_ln52_fu_517_p2;

assign zext_ln53_1_fu_492_p0 = grp_fu_1153_p2;

assign zext_ln53_2_fu_498_p0 = grp_fu_1160_p2;

assign zext_ln53_3_fu_653_p0 = grp_fu_1176_p2;

assign zext_ln53_fu_486_p0 = grp_fu_1139_p2;

always @ (posedge ap_clk) begin
    zext_ln50_1_reg_1236[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln50_1_reg_1236_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    i_gm_2_reg_1252[1] <= 1'b1;
    i_gm_2_reg_1252_pp0_iter1_reg[1] <= 1'b1;
    i_gm_2_reg_1252_pp0_iter2_reg[1] <= 1'b1;
    zext_ln50_4_reg_1258[0] <= 1'b1;
    zext_ln50_4_reg_1258[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln50_4_reg_1258_pp0_iter1_reg[0] <= 1'b1;
    zext_ln50_4_reg_1258_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    i_gm_3_reg_1268[1:0] <= 2'b11;
    i_gm_3_reg_1268_pp0_iter1_reg[1:0] <= 2'b11;
    i_gm_3_reg_1268_pp0_iter2_reg[1:0] <= 2'b11;
    i_gm_3_reg_1268_pp0_iter3_reg[1:0] <= 2'b11;
    zext_ln50_6_reg_1274[0] <= 1'b1;
    zext_ln50_6_reg_1274[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln50_6_reg_1274_pp0_iter1_reg[0] <= 1'b1;
    zext_ln50_6_reg_1274_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln50_6_reg_1274_pp0_iter2_reg[0] <= 1'b1;
    zext_ln50_6_reg_1274_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    i_gm_1_reg_1294[0] <= 1'b1;
    i_gm_1_reg_1294_pp0_iter1_reg[0] <= 1'b1;
    i_gm_1_reg_1294_pp0_iter2_reg[0] <= 1'b1;
end

endmodule //NTT_ntt_stage_clone_clone
