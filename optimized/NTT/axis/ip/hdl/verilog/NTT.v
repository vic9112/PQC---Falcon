// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="NTT_NTT,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.410688,HLS_SYN_LAT=7471,HLS_SYN_TPT=5417,HLS_SYN_MEM=14,HLS_SYN_DSP=0,HLS_SYN_FF=5602,HLS_SYN_LUT=7814,HLS_VERSION=2022_1}" *)

module NTT (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        a_in_TDATA,
        a_out_TDATA,
        a_in_TVALID,
        a_in_TREADY,
        a_out_TVALID,
        a_out_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
input  [15:0] a_in_TDATA;
output  [15:0] a_out_TDATA;
input   a_in_TVALID;
output   a_in_TREADY;
output   a_out_TVALID;
input   a_out_TREADY;

 reg    ap_rst_n_inv;
wire   [15:0] in_buf_i_q0;
wire   [15:0] in_buf_i_q1;
wire   [15:0] in_buf_t_q0;
wire   [15:0] in_buf_t_q1;
wire   [15:0] out_buf_i_q0;
wire   [15:0] out_buf_t_q0;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Loop_1_proc4_U0_ap_start;
wire    Loop_1_proc4_U0_ap_done;
wire    Loop_1_proc4_U0_ap_continue;
wire    Loop_1_proc4_U0_ap_idle;
wire    Loop_1_proc4_U0_ap_ready;
wire    Loop_1_proc4_U0_a_in_TREADY;
wire   [9:0] Loop_1_proc4_U0_in_buf_address0;
wire    Loop_1_proc4_U0_in_buf_ce0;
wire    Loop_1_proc4_U0_in_buf_we0;
wire   [15:0] Loop_1_proc4_U0_in_buf_d0;
wire    ntt_10_stages_U0_ap_start;
wire    ntt_10_stages_U0_ap_done;
wire    ntt_10_stages_U0_ap_continue;
wire    ntt_10_stages_U0_ap_idle;
wire    ntt_10_stages_U0_ap_ready;
wire   [9:0] ntt_10_stages_U0_in_buf_address0;
wire    ntt_10_stages_U0_in_buf_ce0;
wire   [9:0] ntt_10_stages_U0_in_buf_address1;
wire    ntt_10_stages_U0_in_buf_ce1;
wire   [9:0] ntt_10_stages_U0_out_buf_address0;
wire    ntt_10_stages_U0_out_buf_ce0;
wire    ntt_10_stages_U0_out_buf_we0;
wire   [15:0] ntt_10_stages_U0_out_buf_d0;
wire   [9:0] ntt_10_stages_U0_out_buf_address1;
wire    ntt_10_stages_U0_out_buf_ce1;
wire    ntt_10_stages_U0_out_buf_we1;
wire   [15:0] ntt_10_stages_U0_out_buf_d1;
wire    Loop_2_proc5_U0_ap_start;
wire    Loop_2_proc5_U0_ap_done;
wire    Loop_2_proc5_U0_ap_continue;
wire    Loop_2_proc5_U0_ap_idle;
wire    Loop_2_proc5_U0_ap_ready;
wire   [9:0] Loop_2_proc5_U0_out_buf_address0;
wire    Loop_2_proc5_U0_out_buf_ce0;
wire   [15:0] Loop_2_proc5_U0_a_out_TDATA;
wire    Loop_2_proc5_U0_a_out_TVALID;
wire    in_buf_i_full_n;
wire    in_buf_t_empty_n;
wire    out_buf_i_full_n;
wire    out_buf_t_empty_n;

NTT_in_buf_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
in_buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_1_proc4_U0_in_buf_address0),
    .i_ce0(Loop_1_proc4_U0_in_buf_ce0),
    .i_we0(Loop_1_proc4_U0_in_buf_we0),
    .i_d0(Loop_1_proc4_U0_in_buf_d0),
    .i_q0(in_buf_i_q0),
    .i_address1(10'd0),
    .i_ce1(1'b0),
    .i_q1(in_buf_i_q1),
    .t_address0(ntt_10_stages_U0_in_buf_address0),
    .t_ce0(ntt_10_stages_U0_in_buf_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(in_buf_t_q0),
    .t_address1(ntt_10_stages_U0_in_buf_address1),
    .t_ce1(ntt_10_stages_U0_in_buf_ce1),
    .t_q1(in_buf_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(in_buf_i_full_n),
    .i_write(Loop_1_proc4_U0_ap_done),
    .t_empty_n(in_buf_t_empty_n),
    .t_read(ntt_10_stages_U0_ap_ready)
);

NTT_out_buf_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
out_buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(ntt_10_stages_U0_out_buf_address0),
    .i_ce0(ntt_10_stages_U0_out_buf_ce0),
    .i_we0(ntt_10_stages_U0_out_buf_we0),
    .i_d0(ntt_10_stages_U0_out_buf_d0),
    .i_q0(out_buf_i_q0),
    .i_address1(ntt_10_stages_U0_out_buf_address1),
    .i_ce1(ntt_10_stages_U0_out_buf_ce1),
    .i_we1(ntt_10_stages_U0_out_buf_we1),
    .i_d1(ntt_10_stages_U0_out_buf_d1),
    .t_address0(Loop_2_proc5_U0_out_buf_address0),
    .t_ce0(Loop_2_proc5_U0_out_buf_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(out_buf_t_q0),
    .t_address1(10'd0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(16'd0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(out_buf_i_full_n),
    .i_write(ntt_10_stages_U0_ap_done),
    .t_empty_n(out_buf_t_empty_n),
    .t_read(Loop_2_proc5_U0_ap_ready)
);

NTT_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

NTT_Loop_1_proc4 Loop_1_proc4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_1_proc4_U0_ap_start),
    .ap_done(Loop_1_proc4_U0_ap_done),
    .ap_continue(Loop_1_proc4_U0_ap_continue),
    .ap_idle(Loop_1_proc4_U0_ap_idle),
    .ap_ready(Loop_1_proc4_U0_ap_ready),
    .a_in_TVALID(a_in_TVALID),
    .a_in_TDATA(a_in_TDATA),
    .a_in_TREADY(Loop_1_proc4_U0_a_in_TREADY),
    .in_buf_address0(Loop_1_proc4_U0_in_buf_address0),
    .in_buf_ce0(Loop_1_proc4_U0_in_buf_ce0),
    .in_buf_we0(Loop_1_proc4_U0_in_buf_we0),
    .in_buf_d0(Loop_1_proc4_U0_in_buf_d0)
);

NTT_ntt_10_stages ntt_10_stages_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ntt_10_stages_U0_ap_start),
    .ap_done(ntt_10_stages_U0_ap_done),
    .ap_continue(ntt_10_stages_U0_ap_continue),
    .ap_idle(ntt_10_stages_U0_ap_idle),
    .ap_ready(ntt_10_stages_U0_ap_ready),
    .in_buf_address0(ntt_10_stages_U0_in_buf_address0),
    .in_buf_ce0(ntt_10_stages_U0_in_buf_ce0),
    .in_buf_q0(in_buf_t_q0),
    .in_buf_address1(ntt_10_stages_U0_in_buf_address1),
    .in_buf_ce1(ntt_10_stages_U0_in_buf_ce1),
    .in_buf_q1(in_buf_t_q1),
    .out_buf_address0(ntt_10_stages_U0_out_buf_address0),
    .out_buf_ce0(ntt_10_stages_U0_out_buf_ce0),
    .out_buf_we0(ntt_10_stages_U0_out_buf_we0),
    .out_buf_d0(ntt_10_stages_U0_out_buf_d0),
    .out_buf_address1(ntt_10_stages_U0_out_buf_address1),
    .out_buf_ce1(ntt_10_stages_U0_out_buf_ce1),
    .out_buf_we1(ntt_10_stages_U0_out_buf_we1),
    .out_buf_d1(ntt_10_stages_U0_out_buf_d1)
);

NTT_Loop_2_proc5 Loop_2_proc5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_2_proc5_U0_ap_start),
    .ap_done(Loop_2_proc5_U0_ap_done),
    .ap_continue(Loop_2_proc5_U0_ap_continue),
    .ap_idle(Loop_2_proc5_U0_ap_idle),
    .ap_ready(Loop_2_proc5_U0_ap_ready),
    .a_out_TREADY(a_out_TREADY),
    .out_buf_address0(Loop_2_proc5_U0_out_buf_address0),
    .out_buf_ce0(Loop_2_proc5_U0_out_buf_ce0),
    .out_buf_q0(out_buf_t_q0),
    .a_out_TDATA(Loop_2_proc5_U0_a_out_TDATA),
    .a_out_TVALID(Loop_2_proc5_U0_a_out_TVALID)
);

assign Loop_1_proc4_U0_ap_continue = in_buf_i_full_n;

assign Loop_1_proc4_U0_ap_start = ap_start;

assign Loop_2_proc5_U0_ap_continue = 1'b1;

assign Loop_2_proc5_U0_ap_start = out_buf_t_empty_n;

assign a_in_TREADY = Loop_1_proc4_U0_a_in_TREADY;

assign a_out_TDATA = Loop_2_proc5_U0_a_out_TDATA;

assign a_out_TVALID = Loop_2_proc5_U0_a_out_TVALID;

assign ap_done = Loop_2_proc5_U0_ap_done;

assign ap_idle = (ntt_10_stages_U0_ap_idle & (out_buf_t_empty_n ^ 1'b1) & (in_buf_t_empty_n ^ 1'b1) & Loop_2_proc5_U0_ap_idle & Loop_1_proc4_U0_ap_idle);

assign ap_ready = Loop_1_proc4_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ntt_10_stages_U0_ap_continue = out_buf_i_full_n;

assign ntt_10_stages_U0_ap_start = in_buf_t_empty_n;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "NTT_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "NTT_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //NTT

