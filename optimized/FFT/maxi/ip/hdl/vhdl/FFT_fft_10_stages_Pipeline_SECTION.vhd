-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_10_stages_Pipeline_SECTION is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stage0_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_1_ce0 : OUT STD_LOGIC;
    stage0_r_1_we0 : OUT STD_LOGIC;
    stage0_r_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_1_ce1 : OUT STD_LOGIC;
    stage0_r_1_we1 : OUT STD_LOGIC;
    stage0_r_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_3_ce0 : OUT STD_LOGIC;
    stage0_r_3_we0 : OUT STD_LOGIC;
    stage0_r_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_3_ce1 : OUT STD_LOGIC;
    stage0_r_3_we1 : OUT STD_LOGIC;
    stage0_r_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_1_ce0 : OUT STD_LOGIC;
    stage0_i_1_we0 : OUT STD_LOGIC;
    stage0_i_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_1_ce1 : OUT STD_LOGIC;
    stage0_i_1_we1 : OUT STD_LOGIC;
    stage0_i_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    in_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce0 : OUT STD_LOGIC;
    in_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce1 : OUT STD_LOGIC;
    in_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_ce0 : OUT STD_LOGIC;
    stage0_r_we0 : OUT STD_LOGIC;
    stage0_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_ce1 : OUT STD_LOGIC;
    stage0_r_we1 : OUT STD_LOGIC;
    stage0_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_2_ce0 : OUT STD_LOGIC;
    stage0_r_2_we0 : OUT STD_LOGIC;
    stage0_r_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_r_2_ce1 : OUT STD_LOGIC;
    stage0_r_2_we1 : OUT STD_LOGIC;
    stage0_r_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_ce0 : OUT STD_LOGIC;
    stage0_i_we0 : OUT STD_LOGIC;
    stage0_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_ce1 : OUT STD_LOGIC;
    stage0_i_we1 : OUT STD_LOGIC;
    stage0_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_3_ce0 : OUT STD_LOGIC;
    stage0_i_3_we0 : OUT STD_LOGIC;
    stage0_i_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_3_ce1 : OUT STD_LOGIC;
    stage0_i_3_we1 : OUT STD_LOGIC;
    stage0_i_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_2_ce0 : OUT STD_LOGIC;
    stage0_i_2_we0 : OUT STD_LOGIC;
    stage0_i_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    stage0_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    stage0_i_2_ce1 : OUT STD_LOGIC;
    stage0_i_2_we1 : OUT STD_LOGIC;
    stage0_i_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_din4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_dout0_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_complex_mul_fu_308_p_ce : OUT STD_LOGIC;
    grp_fu_315_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_315_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_315_p_ce : OUT STD_LOGIC;
    grp_fu_319_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_319_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_319_p_ce : OUT STD_LOGIC;
    grp_fu_323_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_323_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_323_p_ce : OUT STD_LOGIC;
    grp_fu_327_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_327_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_327_p_ce : OUT STD_LOGIC );
end;


architecture behav of FFT_fft_10_stages_Pipeline_SECTION is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_3FE6A09E667F3BCD : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100110101000001001111001100110011111110011101111001101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal tmp_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal tmp_fu_414_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_542_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_542_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_546 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_reg_561 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_561_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln96_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_567_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_460_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_8_reg_571 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln96_4_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_4_reg_586_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_re_7_reg_620 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_7_reg_625 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_630_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_636_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_642_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_648_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_reg_654 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_reg_660 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_4_reg_666 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_4_reg_672 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_reg_678 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln99_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln99_reg_686 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_complex_mul_fu_354_x_re : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_354_x_im : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_complex_mul_fu_354_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call14 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call14 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2_ignore_call14 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call14 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4_ignore_call14 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5_ignore_call14 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6_ignore_call14 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7_ignore_call14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8_ignore_call14 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9_ignore_call14 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10_ignore_call14 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11_ignore_call14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0_ignore_call14 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1_ignore_call14 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2_ignore_call14 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3_ignore_call14 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4_ignore_call14 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5_ignore_call14 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6_ignore_call14 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7_ignore_call14 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8_ignore_call14 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9_ignore_call14 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10_ignore_call14 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp66 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln91_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_7_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_2_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_68 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_14_fu_492_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_13 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_366_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_372_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_384_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln91_cast_fu_426_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln96_fu_450_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln91_2_cast_fu_466_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln96_fu_480_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln99_cast_fu_520_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to11 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_complex_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_re : IN STD_LOGIC_VECTOR (63 downto 0);
        x_im : IN STD_LOGIC_VECTOR (63 downto 0);
        y_re : IN STD_LOGIC_VECTOR (63 downto 0);
        y_im : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dsub_64ns_64ns_64_5_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component FFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    n_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_fu_414_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n_fu_68 <= n_14_fu_492_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_68 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_414_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    i_8_reg_571(7 downto 1) <= i_8_fu_460_p2(7 downto 1);
                i_reg_546 <= i_fu_422_p1;
                icmp_ln96_4_reg_586 <= icmp_ln96_4_fu_486_p2;
                icmp_ln96_reg_567 <= icmp_ln96_fu_454_p2;
                lshr_ln_reg_561 <= ap_sig_allocacmp_n_13(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln96_4_reg_586_pp0_iter10_reg <= icmp_ln96_4_reg_586_pp0_iter9_reg;
                icmp_ln96_4_reg_586_pp0_iter1_reg <= icmp_ln96_4_reg_586;
                icmp_ln96_4_reg_586_pp0_iter2_reg <= icmp_ln96_4_reg_586_pp0_iter1_reg;
                icmp_ln96_4_reg_586_pp0_iter3_reg <= icmp_ln96_4_reg_586_pp0_iter2_reg;
                icmp_ln96_4_reg_586_pp0_iter4_reg <= icmp_ln96_4_reg_586_pp0_iter3_reg;
                icmp_ln96_4_reg_586_pp0_iter5_reg <= icmp_ln96_4_reg_586_pp0_iter4_reg;
                icmp_ln96_4_reg_586_pp0_iter6_reg <= icmp_ln96_4_reg_586_pp0_iter5_reg;
                icmp_ln96_4_reg_586_pp0_iter7_reg <= icmp_ln96_4_reg_586_pp0_iter6_reg;
                icmp_ln96_4_reg_586_pp0_iter8_reg <= icmp_ln96_4_reg_586_pp0_iter7_reg;
                icmp_ln96_4_reg_586_pp0_iter9_reg <= icmp_ln96_4_reg_586_pp0_iter8_reg;
                icmp_ln96_reg_567_pp0_iter10_reg <= icmp_ln96_reg_567_pp0_iter9_reg;
                icmp_ln96_reg_567_pp0_iter1_reg <= icmp_ln96_reg_567;
                icmp_ln96_reg_567_pp0_iter2_reg <= icmp_ln96_reg_567_pp0_iter1_reg;
                icmp_ln96_reg_567_pp0_iter3_reg <= icmp_ln96_reg_567_pp0_iter2_reg;
                icmp_ln96_reg_567_pp0_iter4_reg <= icmp_ln96_reg_567_pp0_iter3_reg;
                icmp_ln96_reg_567_pp0_iter5_reg <= icmp_ln96_reg_567_pp0_iter4_reg;
                icmp_ln96_reg_567_pp0_iter6_reg <= icmp_ln96_reg_567_pp0_iter5_reg;
                icmp_ln96_reg_567_pp0_iter7_reg <= icmp_ln96_reg_567_pp0_iter6_reg;
                icmp_ln96_reg_567_pp0_iter8_reg <= icmp_ln96_reg_567_pp0_iter7_reg;
                icmp_ln96_reg_567_pp0_iter9_reg <= icmp_ln96_reg_567_pp0_iter8_reg;
                lshr_ln_reg_561_pp0_iter10_reg <= lshr_ln_reg_561_pp0_iter9_reg;
                lshr_ln_reg_561_pp0_iter1_reg <= lshr_ln_reg_561;
                lshr_ln_reg_561_pp0_iter2_reg <= lshr_ln_reg_561_pp0_iter1_reg;
                lshr_ln_reg_561_pp0_iter3_reg <= lshr_ln_reg_561_pp0_iter2_reg;
                lshr_ln_reg_561_pp0_iter4_reg <= lshr_ln_reg_561_pp0_iter3_reg;
                lshr_ln_reg_561_pp0_iter5_reg <= lshr_ln_reg_561_pp0_iter4_reg;
                lshr_ln_reg_561_pp0_iter6_reg <= lshr_ln_reg_561_pp0_iter5_reg;
                lshr_ln_reg_561_pp0_iter7_reg <= lshr_ln_reg_561_pp0_iter6_reg;
                lshr_ln_reg_561_pp0_iter8_reg <= lshr_ln_reg_561_pp0_iter7_reg;
                lshr_ln_reg_561_pp0_iter9_reg <= lshr_ln_reg_561_pp0_iter8_reg;
                tmp_reg_542 <= ap_sig_allocacmp_n_13(8 downto 8);
                tmp_reg_542_pp0_iter1_reg <= tmp_reg_542;
                tmp_reg_542_pp0_iter2_reg <= tmp_reg_542_pp0_iter1_reg;
                tmp_reg_542_pp0_iter3_reg <= tmp_reg_542_pp0_iter2_reg;
                tmp_reg_542_pp0_iter4_reg <= tmp_reg_542_pp0_iter3_reg;
                tmp_reg_542_pp0_iter5_reg <= tmp_reg_542_pp0_iter4_reg;
                tmp_reg_542_pp0_iter6_reg <= tmp_reg_542_pp0_iter5_reg;
                tmp_reg_542_pp0_iter7_reg <= tmp_reg_542_pp0_iter6_reg;
                tmp_reg_542_pp0_iter8_reg <= tmp_reg_542_pp0_iter7_reg;
                tmp_reg_542_pp0_iter9_reg <= tmp_reg_542_pp0_iter8_reg;
                x_im_7_reg_648_pp0_iter2_reg <= x_im_7_reg_648;
                x_im_7_reg_648_pp0_iter3_reg <= x_im_7_reg_648_pp0_iter2_reg;
                x_im_7_reg_648_pp0_iter4_reg <= x_im_7_reg_648_pp0_iter3_reg;
                x_im_7_reg_648_pp0_iter5_reg <= x_im_7_reg_648_pp0_iter4_reg;
                x_im_7_reg_648_pp0_iter6_reg <= x_im_7_reg_648_pp0_iter5_reg;
                x_im_7_reg_648_pp0_iter7_reg <= x_im_7_reg_648_pp0_iter6_reg;
                x_im_7_reg_648_pp0_iter8_reg <= x_im_7_reg_648_pp0_iter7_reg;
                x_im_reg_636_pp0_iter2_reg <= x_im_reg_636;
                x_im_reg_636_pp0_iter3_reg <= x_im_reg_636_pp0_iter2_reg;
                x_im_reg_636_pp0_iter4_reg <= x_im_reg_636_pp0_iter3_reg;
                x_im_reg_636_pp0_iter5_reg <= x_im_reg_636_pp0_iter4_reg;
                x_im_reg_636_pp0_iter6_reg <= x_im_reg_636_pp0_iter5_reg;
                x_im_reg_636_pp0_iter7_reg <= x_im_reg_636_pp0_iter6_reg;
                x_im_reg_636_pp0_iter8_reg <= x_im_reg_636_pp0_iter7_reg;
                x_re_7_reg_642_pp0_iter2_reg <= x_re_7_reg_642;
                x_re_7_reg_642_pp0_iter3_reg <= x_re_7_reg_642_pp0_iter2_reg;
                x_re_7_reg_642_pp0_iter4_reg <= x_re_7_reg_642_pp0_iter3_reg;
                x_re_7_reg_642_pp0_iter5_reg <= x_re_7_reg_642_pp0_iter4_reg;
                x_re_7_reg_642_pp0_iter6_reg <= x_re_7_reg_642_pp0_iter5_reg;
                x_re_7_reg_642_pp0_iter7_reg <= x_re_7_reg_642_pp0_iter6_reg;
                x_re_7_reg_642_pp0_iter8_reg <= x_re_7_reg_642_pp0_iter7_reg;
                x_re_reg_630_pp0_iter2_reg <= x_re_reg_630;
                x_re_reg_630_pp0_iter3_reg <= x_re_reg_630_pp0_iter2_reg;
                x_re_reg_630_pp0_iter4_reg <= x_re_reg_630_pp0_iter3_reg;
                x_re_reg_630_pp0_iter5_reg <= x_re_reg_630_pp0_iter4_reg;
                x_re_reg_630_pp0_iter6_reg <= x_re_reg_630_pp0_iter5_reg;
                x_re_reg_630_pp0_iter7_reg <= x_re_reg_630_pp0_iter6_reg;
                x_re_reg_630_pp0_iter8_reg <= x_re_reg_630_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_542 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_im_7_reg_625 <= in_i_q0;
                tmp_re_7_reg_620 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                x_im_7_reg_648 <= in_i_q0;
                x_im_reg_636 <= in_i_q1;
                x_re_7_reg_642 <= in_r_q0;
                x_re_reg_630 <= in_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                y_im_4_reg_672 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_4_reg_666 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_im_reg_660 <= grp_complex_mul_fu_308_p_dout0_1;
                y_re_reg_654 <= grp_complex_mul_fu_308_p_dout0_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    zext_ln96_reg_678(5 downto 0) <= zext_ln96_fu_513_p1(5 downto 0);
                    zext_ln99_reg_686(5 downto 0) <= zext_ln99_fu_527_p1(5 downto 0);
            end if;
        end if;
    end process;
    i_8_reg_571(0) <= '1';
    zext_ln96_reg_678(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln99_reg_686(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000001";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter10_stage0, ap_idle_pp0_0to9, ap_idle_pp0_1to11, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to11 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, tmp_reg_542)
    begin
        if (((tmp_reg_542 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, tmp_reg_542_pp0_iter9_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_reg_542_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to11_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to11 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_13_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_68, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_13 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_13 <= n_fu_68;
        end if; 
    end process;

    grp_complex_mul_fu_308_p_ce <= grp_complex_mul_fu_354_ap_ce;
    grp_complex_mul_fu_308_p_din1 <= grp_complex_mul_fu_354_x_re;
    grp_complex_mul_fu_308_p_din2 <= grp_complex_mul_fu_354_x_im;
    grp_complex_mul_fu_308_p_din3 <= ap_const_lv64_3FE6A09E667F3BCD;
    grp_complex_mul_fu_308_p_din4 <= ap_const_lv64_3FE6A09E667F3BCD;

    grp_complex_mul_fu_354_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_ignoreCallOp76, ap_block_pp0_stage1_11001_ignoreCallOp66)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp66) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_complex_mul_fu_354_ap_ce <= ap_const_logic_1;
        else 
            grp_complex_mul_fu_354_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_complex_mul_fu_354_x_im_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_542, in_i_q1, tmp_im_7_reg_625, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_354_x_im <= tmp_im_7_reg_625;
        elsif (((tmp_reg_542 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_354_x_im <= in_i_q1;
        else 
            grp_complex_mul_fu_354_x_im <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_complex_mul_fu_354_x_re_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, tmp_reg_542, in_r_q1, tmp_re_7_reg_620, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_complex_mul_fu_354_x_re <= tmp_re_7_reg_620;
        elsif (((tmp_reg_542 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_complex_mul_fu_354_x_re <= in_r_q1;
        else 
            grp_complex_mul_fu_354_x_re <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_315_p_ce <= ap_const_logic_1;
    grp_fu_315_p_din0 <= grp_fu_366_p0;
    grp_fu_315_p_din1 <= grp_fu_366_p1;
    grp_fu_315_p_opcode <= ap_const_lv2_0;
    grp_fu_319_p_ce <= ap_const_logic_1;
    grp_fu_319_p_din0 <= grp_fu_372_p0;
    grp_fu_319_p_din1 <= grp_fu_372_p1;
    grp_fu_319_p_opcode <= ap_const_lv2_0;
    grp_fu_323_p_ce <= ap_const_logic_1;
    grp_fu_323_p_din0 <= grp_fu_378_p0;
    grp_fu_323_p_din1 <= grp_fu_378_p1;
    grp_fu_323_p_opcode <= ap_const_lv2_1;
    grp_fu_327_p_ce <= ap_const_logic_1;
    grp_fu_327_p_din0 <= grp_fu_384_p0;
    grp_fu_327_p_din1 <= grp_fu_384_p1;
    grp_fu_327_p_opcode <= ap_const_lv2_1;

    grp_fu_366_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_re_reg_630_pp0_iter8_reg, x_re_7_reg_642_pp0_iter8_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_366_p0 <= x_re_7_reg_642_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_366_p0 <= x_re_reg_630_pp0_iter8_reg;
        else 
            grp_fu_366_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_366_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_654, y_re_4_reg_666, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_366_p1 <= y_re_4_reg_666;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_366_p1 <= y_re_reg_654;
        else 
            grp_fu_366_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_im_reg_636_pp0_iter8_reg, x_im_7_reg_648_pp0_iter8_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_372_p0 <= x_im_7_reg_648_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_372_p0 <= x_im_reg_636_pp0_iter8_reg;
        else 
            grp_fu_372_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_372_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_660, y_im_4_reg_672, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_372_p1 <= y_im_4_reg_672;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_372_p1 <= y_im_reg_660;
        else 
            grp_fu_372_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_re_reg_630_pp0_iter8_reg, x_re_7_reg_642_pp0_iter8_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_378_p0 <= x_re_7_reg_642_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_378_p0 <= x_re_reg_630_pp0_iter8_reg;
        else 
            grp_fu_378_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_re_reg_654, y_re_4_reg_666, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_378_p1 <= y_re_4_reg_666;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_378_p1 <= y_re_reg_654;
        else 
            grp_fu_378_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_384_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, x_im_reg_636_pp0_iter8_reg, x_im_7_reg_648_pp0_iter8_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_384_p0 <= x_im_7_reg_648_pp0_iter8_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_384_p0 <= x_im_reg_636_pp0_iter8_reg;
        else 
            grp_fu_384_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_384_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage1, y_im_reg_660, y_im_4_reg_672, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_384_p1 <= y_im_4_reg_672;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_384_p1 <= y_im_reg_660;
        else 
            grp_fu_384_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_8_fu_460_p2 <= (i_fu_422_p1 or ap_const_lv8_1);
    i_fu_422_p1 <= ap_sig_allocacmp_n_13(8 - 1 downto 0);
    icmp_ln96_4_fu_486_p2 <= "1" when (or_ln96_fu_480_p2 = ap_const_lv2_1) else "0";
    icmp_ln96_fu_454_p2 <= "1" when (trunc_ln96_fu_450_p1 = ap_const_lv2_0) else "0";

    in_i_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_7_fu_474_p1, zext_ln89_2_fu_508_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_i_address0 <= zext_ln89_2_fu_508_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_i_address0 <= zext_ln91_7_fu_474_p1(9 - 1 downto 0);
            else 
                in_i_address0 <= "XXXXXXXXX";
            end if;
        else 
            in_i_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    in_i_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_fu_434_p1, zext_ln89_fu_503_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_i_address1 <= zext_ln89_fu_503_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_i_address1 <= zext_ln91_fu_434_p1(9 - 1 downto 0);
            else 
                in_i_address1 <= "XXXXXXXXX";
            end if;
        else 
            in_i_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    in_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_i_ce0 <= ap_const_logic_1;
        else 
            in_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_i_ce1 <= ap_const_logic_1;
        else 
            in_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_7_fu_474_p1, zext_ln89_2_fu_508_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_r_address0 <= zext_ln89_2_fu_508_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_r_address0 <= zext_ln91_7_fu_474_p1(9 - 1 downto 0);
            else 
                in_r_address0 <= "XXXXXXXXX";
            end if;
        else 
            in_r_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    in_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln91_fu_434_p1, zext_ln89_fu_503_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_r_address1 <= zext_ln89_fu_503_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_r_address1 <= zext_ln91_fu_434_p1(9 - 1 downto 0);
            else 
                in_r_address1 <= "XXXXXXXXX";
            end if;
        else 
            in_r_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    in_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    n_14_fu_492_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_13) + unsigned(ap_const_lv9_2));
    or_ln96_fu_480_p2 <= (trunc_ln96_fu_450_p1 or ap_const_lv2_1);
    stage0_i_1_address0 <= zext_ln99_reg_686(7 - 1 downto 0);
    stage0_i_1_address1 <= zext_ln96_reg_678(7 - 1 downto 0);

    stage0_i_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_ce0 <= ap_const_logic_1;
        else 
            stage0_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_ce1 <= ap_const_logic_1;
        else 
            stage0_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_1_d0 <= grp_fu_327_p_dout0;
    stage0_i_1_d1 <= grp_fu_319_p_dout0;

    stage0_i_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_we0 <= ap_const_logic_1;
        else 
            stage0_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_1_we1 <= ap_const_logic_1;
        else 
            stage0_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_2_address0 <= zext_ln99_fu_527_p1(7 - 1 downto 0);
    stage0_i_2_address1 <= zext_ln96_fu_513_p1(7 - 1 downto 0);

    stage0_i_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_2_ce0 <= ap_const_logic_1;
        else 
            stage0_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_2_ce1 <= ap_const_logic_1;
        else 
            stage0_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_2_d0 <= grp_fu_327_p_dout0;
    stage0_i_2_d1 <= grp_fu_319_p_dout0;

    stage0_i_2_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_2_we0 <= ap_const_logic_1;
        else 
            stage0_i_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_we1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_2_we1 <= ap_const_logic_1;
        else 
            stage0_i_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_3_address0 <= zext_ln99_reg_686(7 - 1 downto 0);
    stage0_i_3_address1 <= zext_ln96_reg_678(7 - 1 downto 0);

    stage0_i_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_ce0 <= ap_const_logic_1;
        else 
            stage0_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_ce1 <= ap_const_logic_1;
        else 
            stage0_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_3_d0 <= grp_fu_327_p_dout0;
    stage0_i_3_d1 <= grp_fu_319_p_dout0;

    stage0_i_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_we0 <= ap_const_logic_1;
        else 
            stage0_i_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_i_3_we1 <= ap_const_logic_1;
        else 
            stage0_i_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_address0 <= zext_ln99_fu_527_p1(7 - 1 downto 0);
    stage0_i_address1 <= zext_ln96_fu_513_p1(7 - 1 downto 0);

    stage0_i_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_ce0 <= ap_const_logic_1;
        else 
            stage0_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_ce1 <= ap_const_logic_1;
        else 
            stage0_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_i_d0 <= grp_fu_327_p_dout0;
    stage0_i_d1 <= grp_fu_319_p_dout0;

    stage0_i_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_we0 <= ap_const_logic_1;
        else 
            stage0_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_we1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_i_we1 <= ap_const_logic_1;
        else 
            stage0_i_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_1_address0 <= zext_ln99_reg_686(7 - 1 downto 0);
    stage0_r_1_address1 <= zext_ln96_reg_678(7 - 1 downto 0);

    stage0_r_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_ce0 <= ap_const_logic_1;
        else 
            stage0_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_ce1 <= ap_const_logic_1;
        else 
            stage0_r_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_1_d0 <= grp_fu_323_p_dout0;
    stage0_r_1_d1 <= grp_fu_315_p_dout0;

    stage0_r_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_we0 <= ap_const_logic_1;
        else 
            stage0_r_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_1_we1 <= ap_const_logic_1;
        else 
            stage0_r_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_2_address0 <= zext_ln99_fu_527_p1(7 - 1 downto 0);
    stage0_r_2_address1 <= zext_ln96_fu_513_p1(7 - 1 downto 0);

    stage0_r_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_2_ce0 <= ap_const_logic_1;
        else 
            stage0_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_2_ce1 <= ap_const_logic_1;
        else 
            stage0_r_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_2_d0 <= grp_fu_323_p_dout0;
    stage0_r_2_d1 <= grp_fu_315_p_dout0;

    stage0_r_2_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_2_we0 <= ap_const_logic_1;
        else 
            stage0_r_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_we1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_2_we1 <= ap_const_logic_1;
        else 
            stage0_r_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_3_address0 <= zext_ln99_reg_686(7 - 1 downto 0);
    stage0_r_3_address1 <= zext_ln96_reg_678(7 - 1 downto 0);

    stage0_r_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_ce0 <= ap_const_logic_1;
        else 
            stage0_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_ce1 <= ap_const_logic_1;
        else 
            stage0_r_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_3_d0 <= grp_fu_323_p_dout0;
    stage0_r_3_d1 <= grp_fu_315_p_dout0;

    stage0_r_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_we0 <= ap_const_logic_1;
        else 
            stage0_r_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, icmp_ln96_4_reg_586_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (icmp_ln96_4_reg_586_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stage0_r_3_we1 <= ap_const_logic_1;
        else 
            stage0_r_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_address0 <= zext_ln99_fu_527_p1(7 - 1 downto 0);
    stage0_r_address1 <= zext_ln96_fu_513_p1(7 - 1 downto 0);

    stage0_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_ce0 <= ap_const_logic_1;
        else 
            stage0_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_ce1 <= ap_const_logic_1;
        else 
            stage0_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    stage0_r_d0 <= grp_fu_323_p_dout0;
    stage0_r_d1 <= grp_fu_315_p_dout0;

    stage0_r_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_we0 <= ap_const_logic_1;
        else 
            stage0_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_we1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, icmp_ln96_reg_567_pp0_iter10_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln96_reg_567_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            stage0_r_we1 <= ap_const_logic_1;
        else 
            stage0_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_414_p3 <= ap_sig_allocacmp_n_13(8 downto 8);
    trunc_ln96_fu_450_p1 <= ap_sig_allocacmp_n_13(2 - 1 downto 0);
    zext_ln89_2_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_8_reg_571),64));
    zext_ln89_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_546),64));
    zext_ln91_2_cast_fu_466_p3 <= (ap_const_lv1_1 & i_8_fu_460_p2);
    zext_ln91_7_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln91_2_cast_fu_466_p3),64));
    zext_ln91_cast_fu_426_p3 <= (ap_const_lv1_1 & i_fu_422_p1);
    zext_ln91_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln91_cast_fu_426_p3),64));
    zext_ln96_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_561_pp0_iter10_reg),64));
    zext_ln99_cast_fu_520_p3 <= (ap_const_lv1_1 & lshr_ln_reg_561_pp0_iter10_reg);
    zext_ln99_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln99_cast_fu_520_p3),64));
end behav;
