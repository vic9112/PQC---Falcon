-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_10_stages is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce0 : OUT STD_LOGIC;
    in_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce1 : OUT STD_LOGIC;
    in_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce0 : OUT STD_LOGIC;
    out_i_we0 : OUT STD_LOGIC;
    out_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce1 : OUT STD_LOGIC;
    out_i_we1 : OUT STD_LOGIC;
    out_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of FFT_fft_10_stages is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv9_10 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stage0_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_ce0 : STD_LOGIC;
    signal stage0_r_we0 : STD_LOGIC;
    signal stage0_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_ce1 : STD_LOGIC;
    signal stage0_r_we1 : STD_LOGIC;
    signal stage0_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_1_ce0 : STD_LOGIC;
    signal stage0_r_1_we0 : STD_LOGIC;
    signal stage0_r_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_1_ce1 : STD_LOGIC;
    signal stage0_r_1_we1 : STD_LOGIC;
    signal stage0_r_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_2_ce0 : STD_LOGIC;
    signal stage0_r_2_we0 : STD_LOGIC;
    signal stage0_r_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_2_ce1 : STD_LOGIC;
    signal stage0_r_2_we1 : STD_LOGIC;
    signal stage0_r_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_3_ce0 : STD_LOGIC;
    signal stage0_r_3_we0 : STD_LOGIC;
    signal stage0_r_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_r_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_r_3_ce1 : STD_LOGIC;
    signal stage0_r_3_we1 : STD_LOGIC;
    signal stage0_r_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_ce0 : STD_LOGIC;
    signal stage0_i_we0 : STD_LOGIC;
    signal stage0_i_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_ce1 : STD_LOGIC;
    signal stage0_i_we1 : STD_LOGIC;
    signal stage0_i_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_1_ce0 : STD_LOGIC;
    signal stage0_i_1_we0 : STD_LOGIC;
    signal stage0_i_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_1_ce1 : STD_LOGIC;
    signal stage0_i_1_we1 : STD_LOGIC;
    signal stage0_i_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_2_ce0 : STD_LOGIC;
    signal stage0_i_2_we0 : STD_LOGIC;
    signal stage0_i_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_2_ce1 : STD_LOGIC;
    signal stage0_i_2_we1 : STD_LOGIC;
    signal stage0_i_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_3_ce0 : STD_LOGIC;
    signal stage0_i_3_we0 : STD_LOGIC;
    signal stage0_i_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage0_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage0_i_3_ce1 : STD_LOGIC;
    signal stage0_i_3_we1 : STD_LOGIC;
    signal stage0_i_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_ce0 : STD_LOGIC;
    signal stage1_r_we0 : STD_LOGIC;
    signal stage1_r_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_ce1 : STD_LOGIC;
    signal stage1_r_we1 : STD_LOGIC;
    signal stage1_r_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_1_ce0 : STD_LOGIC;
    signal stage1_r_1_we0 : STD_LOGIC;
    signal stage1_r_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_1_ce1 : STD_LOGIC;
    signal stage1_r_1_we1 : STD_LOGIC;
    signal stage1_r_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_2_ce0 : STD_LOGIC;
    signal stage1_r_2_we0 : STD_LOGIC;
    signal stage1_r_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_2_ce1 : STD_LOGIC;
    signal stage1_r_2_we1 : STD_LOGIC;
    signal stage1_r_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_3_ce0 : STD_LOGIC;
    signal stage1_r_3_we0 : STD_LOGIC;
    signal stage1_r_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_r_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_r_3_ce1 : STD_LOGIC;
    signal stage1_r_3_we1 : STD_LOGIC;
    signal stage1_r_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_ce0 : STD_LOGIC;
    signal stage1_i_we0 : STD_LOGIC;
    signal stage1_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_ce1 : STD_LOGIC;
    signal stage1_i_we1 : STD_LOGIC;
    signal stage1_i_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_1_ce0 : STD_LOGIC;
    signal stage1_i_1_we0 : STD_LOGIC;
    signal stage1_i_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_1_ce1 : STD_LOGIC;
    signal stage1_i_1_we1 : STD_LOGIC;
    signal stage1_i_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_2_ce0 : STD_LOGIC;
    signal stage1_i_2_we0 : STD_LOGIC;
    signal stage1_i_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_2_ce1 : STD_LOGIC;
    signal stage1_i_2_we1 : STD_LOGIC;
    signal stage1_i_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_3_ce0 : STD_LOGIC;
    signal stage1_i_3_we0 : STD_LOGIC;
    signal stage1_i_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal stage1_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal stage1_i_3_ce1 : STD_LOGIC;
    signal stage1_i_3_we1 : STD_LOGIC;
    signal stage1_i_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_ap_start : STD_LOGIC;
    signal grp_fft_stage_fu_102_ap_done : STD_LOGIC;
    signal grp_fft_stage_fu_102_ap_idle : STD_LOGIC;
    signal grp_fft_stage_fu_102_ap_ready : STD_LOGIC;
    signal grp_fft_stage_fu_102_in_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_fu_102_in_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_in_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_fu_102_in_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_in_i_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_fu_102_in_i_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_in_i_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_fu_102_in_i_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_r_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_0_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_r_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_r_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_0_we1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_r_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_1_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_r_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_2_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_r_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_3_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_r_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_i_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_i_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_0_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_i_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_i_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_0_we1 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_i_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_1_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_i_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_2_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_out_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_fu_102_out_i_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_3_we0 : STD_LOGIC;
    signal grp_fft_stage_fu_102_out_i_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_186_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_186_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_186_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_186_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_190_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_190_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_190_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_190_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_194_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_194_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_194_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_194_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_198_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_198_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_198_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_198_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_202_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_202_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_202_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_202_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_206_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_206_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_206_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_206_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_210_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_210_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_210_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_grp_fu_214_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_214_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_fu_102_grp_fu_214_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_ap_start : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_ap_done : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_ap_idle : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_ap_ready : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_r_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_r_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_in_i_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_in_i_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_0_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_0_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_1_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_1_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_2_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_2_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_3_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_r_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_3_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_r_3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_0_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_0_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_1_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_1_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_2_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_2_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_3_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_fu_126_out_i_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_3_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_fu_126_out_i_3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_fu_126_t : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_fu_126_m : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_ap_start : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_ap_done : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_ap_idle : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_ap_ready : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_r_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_r_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_0_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_0_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_1_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_1_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_2_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_2_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_3_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_in_i_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_in_i_3_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_r_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_r_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_r_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_r_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_i_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_i_ce0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_i_we0 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_i_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_i_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_out_i_ce1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_i_we1 : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_out_i_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_ce : STD_LOGIC;
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_ce : STD_LOGIC;
    signal grp_fft_stage_fu_102_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fft_stage_clone_fu_126_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_fft_stage_clone_clone_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_186_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_186_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_186_ce : STD_LOGIC;
    signal grp_fu_190_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_190_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_190_ce : STD_LOGIC;
    signal grp_fu_194_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_194_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_194_ce : STD_LOGIC;
    signal grp_fu_198_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_198_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_198_ce : STD_LOGIC;
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_202_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_202_ce : STD_LOGIC;
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_ce : STD_LOGIC;
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_210_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_214_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_214_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_fft_stage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        in_r_ce1 : OUT STD_LOGIC;
        in_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        in_i_ce0 : OUT STD_LOGIC;
        in_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        in_i_ce1 : OUT STD_LOGIC;
        in_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_0_ce0 : OUT STD_LOGIC;
        out_r_0_we0 : OUT STD_LOGIC;
        out_r_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_0_ce1 : OUT STD_LOGIC;
        out_r_0_we1 : OUT STD_LOGIC;
        out_r_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_1_ce0 : OUT STD_LOGIC;
        out_r_1_we0 : OUT STD_LOGIC;
        out_r_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_2_ce0 : OUT STD_LOGIC;
        out_r_2_we0 : OUT STD_LOGIC;
        out_r_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_3_ce0 : OUT STD_LOGIC;
        out_r_3_we0 : OUT STD_LOGIC;
        out_r_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_0_ce0 : OUT STD_LOGIC;
        out_i_0_we0 : OUT STD_LOGIC;
        out_i_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_0_ce1 : OUT STD_LOGIC;
        out_i_0_we1 : OUT STD_LOGIC;
        out_i_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_1_ce0 : OUT STD_LOGIC;
        out_i_1_we0 : OUT STD_LOGIC;
        out_i_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_2_ce0 : OUT STD_LOGIC;
        out_i_2_we0 : OUT STD_LOGIC;
        out_i_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_3_ce0 : OUT STD_LOGIC;
        out_i_3_we0 : OUT STD_LOGIC;
        out_i_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_186_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_ce : OUT STD_LOGIC;
        grp_fu_190_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_190_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_ce : OUT STD_LOGIC;
        grp_fu_194_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_194_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_ce : OUT STD_LOGIC;
        grp_fu_198_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_198_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_ce : OUT STD_LOGIC;
        grp_fu_202_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_202_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_ce : OUT STD_LOGIC;
        grp_fu_206_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_206_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_ce : OUT STD_LOGIC;
        grp_fu_210_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_ce : OUT STD_LOGIC;
        grp_fu_214_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_ce : OUT STD_LOGIC );
    end component;


    component FFT_fft_stage_clone IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_0_ce0 : OUT STD_LOGIC;
        in_r_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_0_ce1 : OUT STD_LOGIC;
        in_r_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_1_ce0 : OUT STD_LOGIC;
        in_r_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_1_ce1 : OUT STD_LOGIC;
        in_r_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_2_ce0 : OUT STD_LOGIC;
        in_r_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_2_ce1 : OUT STD_LOGIC;
        in_r_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_3_ce0 : OUT STD_LOGIC;
        in_r_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_3_ce1 : OUT STD_LOGIC;
        in_r_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_0_ce0 : OUT STD_LOGIC;
        in_i_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_0_ce1 : OUT STD_LOGIC;
        in_i_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_1_ce0 : OUT STD_LOGIC;
        in_i_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_1_ce1 : OUT STD_LOGIC;
        in_i_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_2_ce0 : OUT STD_LOGIC;
        in_i_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_2_ce1 : OUT STD_LOGIC;
        in_i_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_3_ce0 : OUT STD_LOGIC;
        in_i_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_3_ce1 : OUT STD_LOGIC;
        in_i_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_0_ce0 : OUT STD_LOGIC;
        out_r_0_we0 : OUT STD_LOGIC;
        out_r_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_0_ce1 : OUT STD_LOGIC;
        out_r_0_we1 : OUT STD_LOGIC;
        out_r_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_1_ce0 : OUT STD_LOGIC;
        out_r_1_we0 : OUT STD_LOGIC;
        out_r_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_1_ce1 : OUT STD_LOGIC;
        out_r_1_we1 : OUT STD_LOGIC;
        out_r_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_2_ce0 : OUT STD_LOGIC;
        out_r_2_we0 : OUT STD_LOGIC;
        out_r_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_2_ce1 : OUT STD_LOGIC;
        out_r_2_we1 : OUT STD_LOGIC;
        out_r_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_3_ce0 : OUT STD_LOGIC;
        out_r_3_we0 : OUT STD_LOGIC;
        out_r_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_r_3_ce1 : OUT STD_LOGIC;
        out_r_3_we1 : OUT STD_LOGIC;
        out_r_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_0_ce0 : OUT STD_LOGIC;
        out_i_0_we0 : OUT STD_LOGIC;
        out_i_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_0_ce1 : OUT STD_LOGIC;
        out_i_0_we1 : OUT STD_LOGIC;
        out_i_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_1_ce0 : OUT STD_LOGIC;
        out_i_1_we0 : OUT STD_LOGIC;
        out_i_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_1_ce1 : OUT STD_LOGIC;
        out_i_1_we1 : OUT STD_LOGIC;
        out_i_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_2_ce0 : OUT STD_LOGIC;
        out_i_2_we0 : OUT STD_LOGIC;
        out_i_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_2_ce1 : OUT STD_LOGIC;
        out_i_2_we1 : OUT STD_LOGIC;
        out_i_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_3_ce0 : OUT STD_LOGIC;
        out_i_3_we0 : OUT STD_LOGIC;
        out_i_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_i_3_ce1 : OUT STD_LOGIC;
        out_i_3_we1 : OUT STD_LOGIC;
        out_i_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        t : IN STD_LOGIC_VECTOR (8 downto 0);
        m : IN STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component FFT_fft_stage_clone_clone IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_0_ce0 : OUT STD_LOGIC;
        in_r_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_0_ce1 : OUT STD_LOGIC;
        in_r_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_1_ce0 : OUT STD_LOGIC;
        in_r_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_1_ce1 : OUT STD_LOGIC;
        in_r_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_2_ce0 : OUT STD_LOGIC;
        in_r_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_2_ce1 : OUT STD_LOGIC;
        in_r_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_3_ce0 : OUT STD_LOGIC;
        in_r_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_3_ce1 : OUT STD_LOGIC;
        in_r_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_0_ce0 : OUT STD_LOGIC;
        in_i_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_0_ce1 : OUT STD_LOGIC;
        in_i_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_1_ce0 : OUT STD_LOGIC;
        in_i_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_1_ce1 : OUT STD_LOGIC;
        in_i_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_2_ce0 : OUT STD_LOGIC;
        in_i_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_2_ce1 : OUT STD_LOGIC;
        in_i_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_3_ce0 : OUT STD_LOGIC;
        in_i_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_i_3_ce1 : OUT STD_LOGIC;
        in_i_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_r_ce1 : OUT STD_LOGIC;
        out_r_we1 : OUT STD_LOGIC;
        out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_i_ce0 : OUT STD_LOGIC;
        out_i_we0 : OUT STD_LOGIC;
        out_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_i_ce1 : OUT STD_LOGIC;
        out_i_we1 : OUT STD_LOGIC;
        out_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_186_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_186_p_ce : OUT STD_LOGIC;
        grp_fu_190_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_190_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_190_p_ce : OUT STD_LOGIC;
        grp_fu_194_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_194_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_194_p_ce : OUT STD_LOGIC;
        grp_fu_198_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_198_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_198_p_ce : OUT STD_LOGIC;
        grp_fu_202_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_202_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_202_p_ce : OUT STD_LOGIC;
        grp_fu_206_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_206_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_206_p_ce : OUT STD_LOGIC;
        grp_fu_210_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_210_p_ce : OUT STD_LOGIC;
        grp_fu_214_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_214_p_ce : OUT STD_LOGIC );
    end component;


    component FFT_dsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    stage0_r_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_r_address0,
        ce0 => stage0_r_ce0,
        we0 => stage0_r_we0,
        d0 => stage0_r_d0,
        q0 => stage0_r_q0,
        address1 => stage0_r_address1,
        ce1 => stage0_r_ce1,
        we1 => stage0_r_we1,
        d1 => stage0_r_d1,
        q1 => stage0_r_q1);

    stage0_r_1_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_r_1_address0,
        ce0 => stage0_r_1_ce0,
        we0 => stage0_r_1_we0,
        d0 => stage0_r_1_d0,
        q0 => stage0_r_1_q0,
        address1 => stage0_r_1_address1,
        ce1 => stage0_r_1_ce1,
        we1 => stage0_r_1_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_1_d1,
        q1 => stage0_r_1_q1);

    stage0_r_2_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_r_2_address0,
        ce0 => stage0_r_2_ce0,
        we0 => stage0_r_2_we0,
        d0 => stage0_r_2_d0,
        q0 => stage0_r_2_q0,
        address1 => stage0_r_2_address1,
        ce1 => stage0_r_2_ce1,
        we1 => stage0_r_2_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_2_d1,
        q1 => stage0_r_2_q1);

    stage0_r_3_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_r_3_address0,
        ce0 => stage0_r_3_ce0,
        we0 => stage0_r_3_we0,
        d0 => stage0_r_3_d0,
        q0 => stage0_r_3_q0,
        address1 => stage0_r_3_address1,
        ce1 => stage0_r_3_ce1,
        we1 => stage0_r_3_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_3_d1,
        q1 => stage0_r_3_q1);

    stage0_i_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_i_address0,
        ce0 => stage0_i_ce0,
        we0 => stage0_i_we0,
        d0 => stage0_i_d0,
        q0 => stage0_i_q0,
        address1 => stage0_i_address1,
        ce1 => stage0_i_ce1,
        we1 => stage0_i_we1,
        d1 => stage0_i_d1,
        q1 => stage0_i_q1);

    stage0_i_1_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_i_1_address0,
        ce0 => stage0_i_1_ce0,
        we0 => stage0_i_1_we0,
        d0 => stage0_i_1_d0,
        q0 => stage0_i_1_q0,
        address1 => stage0_i_1_address1,
        ce1 => stage0_i_1_ce1,
        we1 => stage0_i_1_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_1_d1,
        q1 => stage0_i_1_q1);

    stage0_i_2_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_i_2_address0,
        ce0 => stage0_i_2_ce0,
        we0 => stage0_i_2_we0,
        d0 => stage0_i_2_d0,
        q0 => stage0_i_2_q0,
        address1 => stage0_i_2_address1,
        ce1 => stage0_i_2_ce1,
        we1 => stage0_i_2_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_2_d1,
        q1 => stage0_i_2_q1);

    stage0_i_3_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage0_i_3_address0,
        ce0 => stage0_i_3_ce0,
        we0 => stage0_i_3_we0,
        d0 => stage0_i_3_d0,
        q0 => stage0_i_3_q0,
        address1 => stage0_i_3_address1,
        ce1 => stage0_i_3_ce1,
        we1 => stage0_i_3_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_3_d1,
        q1 => stage0_i_3_q1);

    stage1_r_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_r_address0,
        ce0 => stage1_r_ce0,
        we0 => stage1_r_we0,
        d0 => grp_fft_stage_clone_fu_126_out_r_0_d0,
        q0 => stage1_r_q0,
        address1 => stage1_r_address1,
        ce1 => stage1_r_ce1,
        we1 => stage1_r_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_0_d1,
        q1 => stage1_r_q1);

    stage1_r_1_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_r_1_address0,
        ce0 => stage1_r_1_ce0,
        we0 => stage1_r_1_we0,
        d0 => grp_fft_stage_clone_fu_126_out_r_1_d0,
        q0 => stage1_r_1_q0,
        address1 => stage1_r_1_address1,
        ce1 => stage1_r_1_ce1,
        we1 => stage1_r_1_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_1_d1,
        q1 => stage1_r_1_q1);

    stage1_r_2_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_r_2_address0,
        ce0 => stage1_r_2_ce0,
        we0 => stage1_r_2_we0,
        d0 => grp_fft_stage_clone_fu_126_out_r_2_d0,
        q0 => stage1_r_2_q0,
        address1 => stage1_r_2_address1,
        ce1 => stage1_r_2_ce1,
        we1 => stage1_r_2_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_2_d1,
        q1 => stage1_r_2_q1);

    stage1_r_3_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_r_3_address0,
        ce0 => stage1_r_3_ce0,
        we0 => stage1_r_3_we0,
        d0 => grp_fft_stage_clone_fu_126_out_r_3_d0,
        q0 => stage1_r_3_q0,
        address1 => stage1_r_3_address1,
        ce1 => stage1_r_3_ce1,
        we1 => stage1_r_3_we1,
        d1 => grp_fft_stage_clone_fu_126_out_r_3_d1,
        q1 => stage1_r_3_q1);

    stage1_i_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_i_address0,
        ce0 => stage1_i_ce0,
        we0 => stage1_i_we0,
        d0 => grp_fft_stage_clone_fu_126_out_i_0_d0,
        q0 => stage1_i_q0,
        address1 => stage1_i_address1,
        ce1 => stage1_i_ce1,
        we1 => stage1_i_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_0_d1,
        q1 => stage1_i_q1);

    stage1_i_1_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_i_1_address0,
        ce0 => stage1_i_1_ce0,
        we0 => stage1_i_1_we0,
        d0 => grp_fft_stage_clone_fu_126_out_i_1_d0,
        q0 => stage1_i_1_q0,
        address1 => stage1_i_1_address1,
        ce1 => stage1_i_1_ce1,
        we1 => stage1_i_1_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_1_d1,
        q1 => stage1_i_1_q1);

    stage1_i_2_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_i_2_address0,
        ce0 => stage1_i_2_ce0,
        we0 => stage1_i_2_we0,
        d0 => grp_fft_stage_clone_fu_126_out_i_2_d0,
        q0 => stage1_i_2_q0,
        address1 => stage1_i_2_address1,
        ce1 => stage1_i_2_ce1,
        we1 => stage1_i_2_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_2_d1,
        q1 => stage1_i_2_q1);

    stage1_i_3_U : component FFT_fft_10_stages_stage0_r_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => stage1_i_3_address0,
        ce0 => stage1_i_3_ce0,
        we0 => stage1_i_3_we0,
        d0 => grp_fft_stage_clone_fu_126_out_i_3_d0,
        q0 => stage1_i_3_q0,
        address1 => stage1_i_3_address1,
        ce1 => stage1_i_3_ce1,
        we1 => stage1_i_3_we1,
        d1 => grp_fft_stage_clone_fu_126_out_i_3_d1,
        q1 => stage1_i_3_q1);

    grp_fft_stage_fu_102 : component FFT_fft_stage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_fu_102_ap_start,
        ap_done => grp_fft_stage_fu_102_ap_done,
        ap_idle => grp_fft_stage_fu_102_ap_idle,
        ap_ready => grp_fft_stage_fu_102_ap_ready,
        in_r_address0 => grp_fft_stage_fu_102_in_r_address0,
        in_r_ce0 => grp_fft_stage_fu_102_in_r_ce0,
        in_r_q0 => in_r_q0,
        in_r_address1 => grp_fft_stage_fu_102_in_r_address1,
        in_r_ce1 => grp_fft_stage_fu_102_in_r_ce1,
        in_r_q1 => in_r_q1,
        in_i_address0 => grp_fft_stage_fu_102_in_i_address0,
        in_i_ce0 => grp_fft_stage_fu_102_in_i_ce0,
        in_i_q0 => in_i_q0,
        in_i_address1 => grp_fft_stage_fu_102_in_i_address1,
        in_i_ce1 => grp_fft_stage_fu_102_in_i_ce1,
        in_i_q1 => in_i_q1,
        out_r_0_address0 => grp_fft_stage_fu_102_out_r_0_address0,
        out_r_0_ce0 => grp_fft_stage_fu_102_out_r_0_ce0,
        out_r_0_we0 => grp_fft_stage_fu_102_out_r_0_we0,
        out_r_0_d0 => grp_fft_stage_fu_102_out_r_0_d0,
        out_r_0_address1 => grp_fft_stage_fu_102_out_r_0_address1,
        out_r_0_ce1 => grp_fft_stage_fu_102_out_r_0_ce1,
        out_r_0_we1 => grp_fft_stage_fu_102_out_r_0_we1,
        out_r_0_d1 => grp_fft_stage_fu_102_out_r_0_d1,
        out_r_1_address0 => grp_fft_stage_fu_102_out_r_1_address0,
        out_r_1_ce0 => grp_fft_stage_fu_102_out_r_1_ce0,
        out_r_1_we0 => grp_fft_stage_fu_102_out_r_1_we0,
        out_r_1_d0 => grp_fft_stage_fu_102_out_r_1_d0,
        out_r_2_address0 => grp_fft_stage_fu_102_out_r_2_address0,
        out_r_2_ce0 => grp_fft_stage_fu_102_out_r_2_ce0,
        out_r_2_we0 => grp_fft_stage_fu_102_out_r_2_we0,
        out_r_2_d0 => grp_fft_stage_fu_102_out_r_2_d0,
        out_r_3_address0 => grp_fft_stage_fu_102_out_r_3_address0,
        out_r_3_ce0 => grp_fft_stage_fu_102_out_r_3_ce0,
        out_r_3_we0 => grp_fft_stage_fu_102_out_r_3_we0,
        out_r_3_d0 => grp_fft_stage_fu_102_out_r_3_d0,
        out_i_0_address0 => grp_fft_stage_fu_102_out_i_0_address0,
        out_i_0_ce0 => grp_fft_stage_fu_102_out_i_0_ce0,
        out_i_0_we0 => grp_fft_stage_fu_102_out_i_0_we0,
        out_i_0_d0 => grp_fft_stage_fu_102_out_i_0_d0,
        out_i_0_address1 => grp_fft_stage_fu_102_out_i_0_address1,
        out_i_0_ce1 => grp_fft_stage_fu_102_out_i_0_ce1,
        out_i_0_we1 => grp_fft_stage_fu_102_out_i_0_we1,
        out_i_0_d1 => grp_fft_stage_fu_102_out_i_0_d1,
        out_i_1_address0 => grp_fft_stage_fu_102_out_i_1_address0,
        out_i_1_ce0 => grp_fft_stage_fu_102_out_i_1_ce0,
        out_i_1_we0 => grp_fft_stage_fu_102_out_i_1_we0,
        out_i_1_d0 => grp_fft_stage_fu_102_out_i_1_d0,
        out_i_2_address0 => grp_fft_stage_fu_102_out_i_2_address0,
        out_i_2_ce0 => grp_fft_stage_fu_102_out_i_2_ce0,
        out_i_2_we0 => grp_fft_stage_fu_102_out_i_2_we0,
        out_i_2_d0 => grp_fft_stage_fu_102_out_i_2_d0,
        out_i_3_address0 => grp_fft_stage_fu_102_out_i_3_address0,
        out_i_3_ce0 => grp_fft_stage_fu_102_out_i_3_ce0,
        out_i_3_we0 => grp_fft_stage_fu_102_out_i_3_we0,
        out_i_3_d0 => grp_fft_stage_fu_102_out_i_3_d0,
        grp_fu_186_p_din0 => grp_fft_stage_fu_102_grp_fu_186_p_din0,
        grp_fu_186_p_din1 => grp_fft_stage_fu_102_grp_fu_186_p_din1,
        grp_fu_186_p_opcode => grp_fft_stage_fu_102_grp_fu_186_p_opcode,
        grp_fu_186_p_dout0 => grp_fu_186_p2,
        grp_fu_186_p_ce => grp_fft_stage_fu_102_grp_fu_186_p_ce,
        grp_fu_190_p_din0 => grp_fft_stage_fu_102_grp_fu_190_p_din0,
        grp_fu_190_p_din1 => grp_fft_stage_fu_102_grp_fu_190_p_din1,
        grp_fu_190_p_opcode => grp_fft_stage_fu_102_grp_fu_190_p_opcode,
        grp_fu_190_p_dout0 => grp_fu_190_p2,
        grp_fu_190_p_ce => grp_fft_stage_fu_102_grp_fu_190_p_ce,
        grp_fu_194_p_din0 => grp_fft_stage_fu_102_grp_fu_194_p_din0,
        grp_fu_194_p_din1 => grp_fft_stage_fu_102_grp_fu_194_p_din1,
        grp_fu_194_p_opcode => grp_fft_stage_fu_102_grp_fu_194_p_opcode,
        grp_fu_194_p_dout0 => grp_fu_194_p2,
        grp_fu_194_p_ce => grp_fft_stage_fu_102_grp_fu_194_p_ce,
        grp_fu_198_p_din0 => grp_fft_stage_fu_102_grp_fu_198_p_din0,
        grp_fu_198_p_din1 => grp_fft_stage_fu_102_grp_fu_198_p_din1,
        grp_fu_198_p_opcode => grp_fft_stage_fu_102_grp_fu_198_p_opcode,
        grp_fu_198_p_dout0 => grp_fu_198_p2,
        grp_fu_198_p_ce => grp_fft_stage_fu_102_grp_fu_198_p_ce,
        grp_fu_202_p_din0 => grp_fft_stage_fu_102_grp_fu_202_p_din0,
        grp_fu_202_p_din1 => grp_fft_stage_fu_102_grp_fu_202_p_din1,
        grp_fu_202_p_opcode => grp_fft_stage_fu_102_grp_fu_202_p_opcode,
        grp_fu_202_p_dout0 => grp_fu_202_p2,
        grp_fu_202_p_ce => grp_fft_stage_fu_102_grp_fu_202_p_ce,
        grp_fu_206_p_din0 => grp_fft_stage_fu_102_grp_fu_206_p_din0,
        grp_fu_206_p_din1 => grp_fft_stage_fu_102_grp_fu_206_p_din1,
        grp_fu_206_p_opcode => grp_fft_stage_fu_102_grp_fu_206_p_opcode,
        grp_fu_206_p_dout0 => grp_fu_206_p2,
        grp_fu_206_p_ce => grp_fft_stage_fu_102_grp_fu_206_p_ce,
        grp_fu_210_p_din0 => grp_fft_stage_fu_102_grp_fu_210_p_din0,
        grp_fu_210_p_din1 => grp_fft_stage_fu_102_grp_fu_210_p_din1,
        grp_fu_210_p_dout0 => grp_fu_210_p2,
        grp_fu_210_p_ce => grp_fft_stage_fu_102_grp_fu_210_p_ce,
        grp_fu_214_p_din0 => grp_fft_stage_fu_102_grp_fu_214_p_din0,
        grp_fu_214_p_din1 => grp_fft_stage_fu_102_grp_fu_214_p_din1,
        grp_fu_214_p_dout0 => grp_fu_214_p2,
        grp_fu_214_p_ce => grp_fft_stage_fu_102_grp_fu_214_p_ce);

    grp_fft_stage_clone_fu_126 : component FFT_fft_stage_clone
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_clone_fu_126_ap_start,
        ap_done => grp_fft_stage_clone_fu_126_ap_done,
        ap_idle => grp_fft_stage_clone_fu_126_ap_idle,
        ap_ready => grp_fft_stage_clone_fu_126_ap_ready,
        in_r_0_address0 => grp_fft_stage_clone_fu_126_in_r_0_address0,
        in_r_0_ce0 => grp_fft_stage_clone_fu_126_in_r_0_ce0,
        in_r_0_q0 => grp_fft_stage_clone_fu_126_in_r_0_q0,
        in_r_0_address1 => grp_fft_stage_clone_fu_126_in_r_0_address1,
        in_r_0_ce1 => grp_fft_stage_clone_fu_126_in_r_0_ce1,
        in_r_0_q1 => grp_fft_stage_clone_fu_126_in_r_0_q1,
        in_r_1_address0 => grp_fft_stage_clone_fu_126_in_r_1_address0,
        in_r_1_ce0 => grp_fft_stage_clone_fu_126_in_r_1_ce0,
        in_r_1_q0 => grp_fft_stage_clone_fu_126_in_r_1_q0,
        in_r_1_address1 => grp_fft_stage_clone_fu_126_in_r_1_address1,
        in_r_1_ce1 => grp_fft_stage_clone_fu_126_in_r_1_ce1,
        in_r_1_q1 => grp_fft_stage_clone_fu_126_in_r_1_q1,
        in_r_2_address0 => grp_fft_stage_clone_fu_126_in_r_2_address0,
        in_r_2_ce0 => grp_fft_stage_clone_fu_126_in_r_2_ce0,
        in_r_2_q0 => grp_fft_stage_clone_fu_126_in_r_2_q0,
        in_r_2_address1 => grp_fft_stage_clone_fu_126_in_r_2_address1,
        in_r_2_ce1 => grp_fft_stage_clone_fu_126_in_r_2_ce1,
        in_r_2_q1 => grp_fft_stage_clone_fu_126_in_r_2_q1,
        in_r_3_address0 => grp_fft_stage_clone_fu_126_in_r_3_address0,
        in_r_3_ce0 => grp_fft_stage_clone_fu_126_in_r_3_ce0,
        in_r_3_q0 => grp_fft_stage_clone_fu_126_in_r_3_q0,
        in_r_3_address1 => grp_fft_stage_clone_fu_126_in_r_3_address1,
        in_r_3_ce1 => grp_fft_stage_clone_fu_126_in_r_3_ce1,
        in_r_3_q1 => grp_fft_stage_clone_fu_126_in_r_3_q1,
        in_i_0_address0 => grp_fft_stage_clone_fu_126_in_i_0_address0,
        in_i_0_ce0 => grp_fft_stage_clone_fu_126_in_i_0_ce0,
        in_i_0_q0 => grp_fft_stage_clone_fu_126_in_i_0_q0,
        in_i_0_address1 => grp_fft_stage_clone_fu_126_in_i_0_address1,
        in_i_0_ce1 => grp_fft_stage_clone_fu_126_in_i_0_ce1,
        in_i_0_q1 => grp_fft_stage_clone_fu_126_in_i_0_q1,
        in_i_1_address0 => grp_fft_stage_clone_fu_126_in_i_1_address0,
        in_i_1_ce0 => grp_fft_stage_clone_fu_126_in_i_1_ce0,
        in_i_1_q0 => grp_fft_stage_clone_fu_126_in_i_1_q0,
        in_i_1_address1 => grp_fft_stage_clone_fu_126_in_i_1_address1,
        in_i_1_ce1 => grp_fft_stage_clone_fu_126_in_i_1_ce1,
        in_i_1_q1 => grp_fft_stage_clone_fu_126_in_i_1_q1,
        in_i_2_address0 => grp_fft_stage_clone_fu_126_in_i_2_address0,
        in_i_2_ce0 => grp_fft_stage_clone_fu_126_in_i_2_ce0,
        in_i_2_q0 => grp_fft_stage_clone_fu_126_in_i_2_q0,
        in_i_2_address1 => grp_fft_stage_clone_fu_126_in_i_2_address1,
        in_i_2_ce1 => grp_fft_stage_clone_fu_126_in_i_2_ce1,
        in_i_2_q1 => grp_fft_stage_clone_fu_126_in_i_2_q1,
        in_i_3_address0 => grp_fft_stage_clone_fu_126_in_i_3_address0,
        in_i_3_ce0 => grp_fft_stage_clone_fu_126_in_i_3_ce0,
        in_i_3_q0 => grp_fft_stage_clone_fu_126_in_i_3_q0,
        in_i_3_address1 => grp_fft_stage_clone_fu_126_in_i_3_address1,
        in_i_3_ce1 => grp_fft_stage_clone_fu_126_in_i_3_ce1,
        in_i_3_q1 => grp_fft_stage_clone_fu_126_in_i_3_q1,
        out_r_0_address0 => grp_fft_stage_clone_fu_126_out_r_0_address0,
        out_r_0_ce0 => grp_fft_stage_clone_fu_126_out_r_0_ce0,
        out_r_0_we0 => grp_fft_stage_clone_fu_126_out_r_0_we0,
        out_r_0_d0 => grp_fft_stage_clone_fu_126_out_r_0_d0,
        out_r_0_address1 => grp_fft_stage_clone_fu_126_out_r_0_address1,
        out_r_0_ce1 => grp_fft_stage_clone_fu_126_out_r_0_ce1,
        out_r_0_we1 => grp_fft_stage_clone_fu_126_out_r_0_we1,
        out_r_0_d1 => grp_fft_stage_clone_fu_126_out_r_0_d1,
        out_r_1_address0 => grp_fft_stage_clone_fu_126_out_r_1_address0,
        out_r_1_ce0 => grp_fft_stage_clone_fu_126_out_r_1_ce0,
        out_r_1_we0 => grp_fft_stage_clone_fu_126_out_r_1_we0,
        out_r_1_d0 => grp_fft_stage_clone_fu_126_out_r_1_d0,
        out_r_1_address1 => grp_fft_stage_clone_fu_126_out_r_1_address1,
        out_r_1_ce1 => grp_fft_stage_clone_fu_126_out_r_1_ce1,
        out_r_1_we1 => grp_fft_stage_clone_fu_126_out_r_1_we1,
        out_r_1_d1 => grp_fft_stage_clone_fu_126_out_r_1_d1,
        out_r_2_address0 => grp_fft_stage_clone_fu_126_out_r_2_address0,
        out_r_2_ce0 => grp_fft_stage_clone_fu_126_out_r_2_ce0,
        out_r_2_we0 => grp_fft_stage_clone_fu_126_out_r_2_we0,
        out_r_2_d0 => grp_fft_stage_clone_fu_126_out_r_2_d0,
        out_r_2_address1 => grp_fft_stage_clone_fu_126_out_r_2_address1,
        out_r_2_ce1 => grp_fft_stage_clone_fu_126_out_r_2_ce1,
        out_r_2_we1 => grp_fft_stage_clone_fu_126_out_r_2_we1,
        out_r_2_d1 => grp_fft_stage_clone_fu_126_out_r_2_d1,
        out_r_3_address0 => grp_fft_stage_clone_fu_126_out_r_3_address0,
        out_r_3_ce0 => grp_fft_stage_clone_fu_126_out_r_3_ce0,
        out_r_3_we0 => grp_fft_stage_clone_fu_126_out_r_3_we0,
        out_r_3_d0 => grp_fft_stage_clone_fu_126_out_r_3_d0,
        out_r_3_address1 => grp_fft_stage_clone_fu_126_out_r_3_address1,
        out_r_3_ce1 => grp_fft_stage_clone_fu_126_out_r_3_ce1,
        out_r_3_we1 => grp_fft_stage_clone_fu_126_out_r_3_we1,
        out_r_3_d1 => grp_fft_stage_clone_fu_126_out_r_3_d1,
        out_i_0_address0 => grp_fft_stage_clone_fu_126_out_i_0_address0,
        out_i_0_ce0 => grp_fft_stage_clone_fu_126_out_i_0_ce0,
        out_i_0_we0 => grp_fft_stage_clone_fu_126_out_i_0_we0,
        out_i_0_d0 => grp_fft_stage_clone_fu_126_out_i_0_d0,
        out_i_0_address1 => grp_fft_stage_clone_fu_126_out_i_0_address1,
        out_i_0_ce1 => grp_fft_stage_clone_fu_126_out_i_0_ce1,
        out_i_0_we1 => grp_fft_stage_clone_fu_126_out_i_0_we1,
        out_i_0_d1 => grp_fft_stage_clone_fu_126_out_i_0_d1,
        out_i_1_address0 => grp_fft_stage_clone_fu_126_out_i_1_address0,
        out_i_1_ce0 => grp_fft_stage_clone_fu_126_out_i_1_ce0,
        out_i_1_we0 => grp_fft_stage_clone_fu_126_out_i_1_we0,
        out_i_1_d0 => grp_fft_stage_clone_fu_126_out_i_1_d0,
        out_i_1_address1 => grp_fft_stage_clone_fu_126_out_i_1_address1,
        out_i_1_ce1 => grp_fft_stage_clone_fu_126_out_i_1_ce1,
        out_i_1_we1 => grp_fft_stage_clone_fu_126_out_i_1_we1,
        out_i_1_d1 => grp_fft_stage_clone_fu_126_out_i_1_d1,
        out_i_2_address0 => grp_fft_stage_clone_fu_126_out_i_2_address0,
        out_i_2_ce0 => grp_fft_stage_clone_fu_126_out_i_2_ce0,
        out_i_2_we0 => grp_fft_stage_clone_fu_126_out_i_2_we0,
        out_i_2_d0 => grp_fft_stage_clone_fu_126_out_i_2_d0,
        out_i_2_address1 => grp_fft_stage_clone_fu_126_out_i_2_address1,
        out_i_2_ce1 => grp_fft_stage_clone_fu_126_out_i_2_ce1,
        out_i_2_we1 => grp_fft_stage_clone_fu_126_out_i_2_we1,
        out_i_2_d1 => grp_fft_stage_clone_fu_126_out_i_2_d1,
        out_i_3_address0 => grp_fft_stage_clone_fu_126_out_i_3_address0,
        out_i_3_ce0 => grp_fft_stage_clone_fu_126_out_i_3_ce0,
        out_i_3_we0 => grp_fft_stage_clone_fu_126_out_i_3_we0,
        out_i_3_d0 => grp_fft_stage_clone_fu_126_out_i_3_d0,
        out_i_3_address1 => grp_fft_stage_clone_fu_126_out_i_3_address1,
        out_i_3_ce1 => grp_fft_stage_clone_fu_126_out_i_3_ce1,
        out_i_3_we1 => grp_fft_stage_clone_fu_126_out_i_3_we1,
        out_i_3_d1 => grp_fft_stage_clone_fu_126_out_i_3_d1,
        t => grp_fft_stage_clone_fu_126_t,
        m => grp_fft_stage_clone_fu_126_m);

    grp_fft_stage_clone_clone_fu_166 : component FFT_fft_stage_clone_clone
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_clone_clone_fu_166_ap_start,
        ap_done => grp_fft_stage_clone_clone_fu_166_ap_done,
        ap_idle => grp_fft_stage_clone_clone_fu_166_ap_idle,
        ap_ready => grp_fft_stage_clone_clone_fu_166_ap_ready,
        in_r_0_address0 => grp_fft_stage_clone_clone_fu_166_in_r_0_address0,
        in_r_0_ce0 => grp_fft_stage_clone_clone_fu_166_in_r_0_ce0,
        in_r_0_q0 => stage1_r_q0,
        in_r_0_address1 => grp_fft_stage_clone_clone_fu_166_in_r_0_address1,
        in_r_0_ce1 => grp_fft_stage_clone_clone_fu_166_in_r_0_ce1,
        in_r_0_q1 => stage1_r_q1,
        in_r_1_address0 => grp_fft_stage_clone_clone_fu_166_in_r_1_address0,
        in_r_1_ce0 => grp_fft_stage_clone_clone_fu_166_in_r_1_ce0,
        in_r_1_q0 => stage1_r_1_q0,
        in_r_1_address1 => grp_fft_stage_clone_clone_fu_166_in_r_1_address1,
        in_r_1_ce1 => grp_fft_stage_clone_clone_fu_166_in_r_1_ce1,
        in_r_1_q1 => stage1_r_1_q1,
        in_r_2_address0 => grp_fft_stage_clone_clone_fu_166_in_r_2_address0,
        in_r_2_ce0 => grp_fft_stage_clone_clone_fu_166_in_r_2_ce0,
        in_r_2_q0 => stage1_r_2_q0,
        in_r_2_address1 => grp_fft_stage_clone_clone_fu_166_in_r_2_address1,
        in_r_2_ce1 => grp_fft_stage_clone_clone_fu_166_in_r_2_ce1,
        in_r_2_q1 => stage1_r_2_q1,
        in_r_3_address0 => grp_fft_stage_clone_clone_fu_166_in_r_3_address0,
        in_r_3_ce0 => grp_fft_stage_clone_clone_fu_166_in_r_3_ce0,
        in_r_3_q0 => stage1_r_3_q0,
        in_r_3_address1 => grp_fft_stage_clone_clone_fu_166_in_r_3_address1,
        in_r_3_ce1 => grp_fft_stage_clone_clone_fu_166_in_r_3_ce1,
        in_r_3_q1 => stage1_r_3_q1,
        in_i_0_address0 => grp_fft_stage_clone_clone_fu_166_in_i_0_address0,
        in_i_0_ce0 => grp_fft_stage_clone_clone_fu_166_in_i_0_ce0,
        in_i_0_q0 => stage1_i_q0,
        in_i_0_address1 => grp_fft_stage_clone_clone_fu_166_in_i_0_address1,
        in_i_0_ce1 => grp_fft_stage_clone_clone_fu_166_in_i_0_ce1,
        in_i_0_q1 => stage1_i_q1,
        in_i_1_address0 => grp_fft_stage_clone_clone_fu_166_in_i_1_address0,
        in_i_1_ce0 => grp_fft_stage_clone_clone_fu_166_in_i_1_ce0,
        in_i_1_q0 => stage1_i_1_q0,
        in_i_1_address1 => grp_fft_stage_clone_clone_fu_166_in_i_1_address1,
        in_i_1_ce1 => grp_fft_stage_clone_clone_fu_166_in_i_1_ce1,
        in_i_1_q1 => stage1_i_1_q1,
        in_i_2_address0 => grp_fft_stage_clone_clone_fu_166_in_i_2_address0,
        in_i_2_ce0 => grp_fft_stage_clone_clone_fu_166_in_i_2_ce0,
        in_i_2_q0 => stage1_i_2_q0,
        in_i_2_address1 => grp_fft_stage_clone_clone_fu_166_in_i_2_address1,
        in_i_2_ce1 => grp_fft_stage_clone_clone_fu_166_in_i_2_ce1,
        in_i_2_q1 => stage1_i_2_q1,
        in_i_3_address0 => grp_fft_stage_clone_clone_fu_166_in_i_3_address0,
        in_i_3_ce0 => grp_fft_stage_clone_clone_fu_166_in_i_3_ce0,
        in_i_3_q0 => stage1_i_3_q0,
        in_i_3_address1 => grp_fft_stage_clone_clone_fu_166_in_i_3_address1,
        in_i_3_ce1 => grp_fft_stage_clone_clone_fu_166_in_i_3_ce1,
        in_i_3_q1 => stage1_i_3_q1,
        out_r_address0 => grp_fft_stage_clone_clone_fu_166_out_r_address0,
        out_r_ce0 => grp_fft_stage_clone_clone_fu_166_out_r_ce0,
        out_r_we0 => grp_fft_stage_clone_clone_fu_166_out_r_we0,
        out_r_d0 => grp_fft_stage_clone_clone_fu_166_out_r_d0,
        out_r_address1 => grp_fft_stage_clone_clone_fu_166_out_r_address1,
        out_r_ce1 => grp_fft_stage_clone_clone_fu_166_out_r_ce1,
        out_r_we1 => grp_fft_stage_clone_clone_fu_166_out_r_we1,
        out_r_d1 => grp_fft_stage_clone_clone_fu_166_out_r_d1,
        out_i_address0 => grp_fft_stage_clone_clone_fu_166_out_i_address0,
        out_i_ce0 => grp_fft_stage_clone_clone_fu_166_out_i_ce0,
        out_i_we0 => grp_fft_stage_clone_clone_fu_166_out_i_we0,
        out_i_d0 => grp_fft_stage_clone_clone_fu_166_out_i_d0,
        out_i_address1 => grp_fft_stage_clone_clone_fu_166_out_i_address1,
        out_i_ce1 => grp_fft_stage_clone_clone_fu_166_out_i_ce1,
        out_i_we1 => grp_fft_stage_clone_clone_fu_166_out_i_we1,
        out_i_d1 => grp_fft_stage_clone_clone_fu_166_out_i_d1,
        grp_fu_186_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din0,
        grp_fu_186_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din1,
        grp_fu_186_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_opcode,
        grp_fu_186_p_dout0 => grp_fu_186_p2,
        grp_fu_186_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_ce,
        grp_fu_190_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din0,
        grp_fu_190_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din1,
        grp_fu_190_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_opcode,
        grp_fu_190_p_dout0 => grp_fu_190_p2,
        grp_fu_190_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_ce,
        grp_fu_194_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din0,
        grp_fu_194_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din1,
        grp_fu_194_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_opcode,
        grp_fu_194_p_dout0 => grp_fu_194_p2,
        grp_fu_194_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_ce,
        grp_fu_198_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din0,
        grp_fu_198_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din1,
        grp_fu_198_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_opcode,
        grp_fu_198_p_dout0 => grp_fu_198_p2,
        grp_fu_198_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_ce,
        grp_fu_202_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din0,
        grp_fu_202_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din1,
        grp_fu_202_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_opcode,
        grp_fu_202_p_dout0 => grp_fu_202_p2,
        grp_fu_202_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_ce,
        grp_fu_206_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din0,
        grp_fu_206_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din1,
        grp_fu_206_p_opcode => grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_opcode,
        grp_fu_206_p_dout0 => grp_fu_206_p2,
        grp_fu_206_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_ce,
        grp_fu_210_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din0,
        grp_fu_210_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din1,
        grp_fu_210_p_dout0 => grp_fu_210_p2,
        grp_fu_210_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_ce,
        grp_fu_214_p_din0 => grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din0,
        grp_fu_214_p_din1 => grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din1,
        grp_fu_214_p_dout0 => grp_fu_214_p2,
        grp_fu_214_p_ce => grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_ce);

    dsub_64ns_64ns_64_5_full_dsp_1_U106 : component FFT_dsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_186_p0,
        din1 => grp_fu_186_p1,
        ce => grp_fu_186_ce,
        dout => grp_fu_186_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U107 : component FFT_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_190_p0,
        din1 => grp_fu_190_p1,
        ce => grp_fu_190_ce,
        dout => grp_fu_190_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U108 : component FFT_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_194_p0,
        din1 => grp_fu_194_p1,
        ce => grp_fu_194_ce,
        dout => grp_fu_194_p2);

    dadd_64ns_64ns_64_5_full_dsp_1_U109 : component FFT_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_198_p0,
        din1 => grp_fu_198_p1,
        ce => grp_fu_198_ce,
        dout => grp_fu_198_p2);

    dsub_64ns_64ns_64_5_full_dsp_1_U110 : component FFT_dsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_202_p0,
        din1 => grp_fu_202_p1,
        ce => grp_fu_202_ce,
        dout => grp_fu_202_p2);

    dsub_64ns_64ns_64_5_full_dsp_1_U111 : component FFT_dsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_206_p0,
        din1 => grp_fu_206_p1,
        ce => grp_fu_206_ce,
        dout => grp_fu_206_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U112 : component FFT_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_210_p0,
        din1 => grp_fu_210_p1,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U113 : component FFT_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_214_p0,
        din1 => grp_fu_214_p1,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fft_stage_clone_clone_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_clone_clone_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_fft_stage_clone_clone_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_clone_clone_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_clone_clone_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_clone_fu_126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_clone_fu_126_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_fft_stage_clone_fu_126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_clone_fu_126_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_clone_fu_126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_fu_102_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_fu_102_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_stage_fu_102_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_fu_102_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_fu_102_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_fft_stage_fu_102_ap_done, grp_fft_stage_clone_fu_126_ap_done, grp_fft_stage_clone_clone_fu_166_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_fft_stage_fu_102_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_fft_stage_clone_clone_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_fft_stage_clone_clone_fu_166_ap_done)
    begin
        if ((grp_fft_stage_clone_clone_fu_166_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_fft_stage_fu_102_ap_done)
    begin
        if ((grp_fft_stage_fu_102_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_fft_stage_clone_fu_126_ap_done)
    begin
        if ((grp_fft_stage_clone_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_fft_stage_clone_clone_fu_166_ap_done, ap_CS_fsm_state18)
    begin
        if ((((grp_fft_stage_clone_clone_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_fft_stage_clone_clone_fu_166_ap_done, ap_CS_fsm_state18)
    begin
        if (((grp_fft_stage_clone_clone_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fft_stage_clone_clone_fu_166_ap_start <= grp_fft_stage_clone_clone_fu_166_ap_start_reg;
    grp_fft_stage_clone_fu_126_ap_start <= grp_fft_stage_clone_fu_126_ap_start_reg;

    grp_fft_stage_clone_fu_126_in_i_0_q0_assign_proc : process(stage0_i_q0, stage1_i_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_0_q0 <= stage1_i_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_0_q0 <= stage0_i_q0;
        else 
            grp_fft_stage_clone_fu_126_in_i_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_0_q1_assign_proc : process(stage0_i_q1, stage1_i_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_0_q1 <= stage1_i_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_0_q1 <= stage0_i_q1;
        else 
            grp_fft_stage_clone_fu_126_in_i_0_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_1_q0_assign_proc : process(stage0_i_1_q0, stage1_i_1_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_1_q0 <= stage1_i_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_1_q0 <= stage0_i_1_q0;
        else 
            grp_fft_stage_clone_fu_126_in_i_1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_1_q1_assign_proc : process(stage0_i_1_q1, stage1_i_1_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_1_q1 <= stage1_i_1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_1_q1 <= stage0_i_1_q1;
        else 
            grp_fft_stage_clone_fu_126_in_i_1_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_2_q0_assign_proc : process(stage0_i_2_q0, stage1_i_2_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_2_q0 <= stage1_i_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_2_q0 <= stage0_i_2_q0;
        else 
            grp_fft_stage_clone_fu_126_in_i_2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_2_q1_assign_proc : process(stage0_i_2_q1, stage1_i_2_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_2_q1 <= stage1_i_2_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_2_q1 <= stage0_i_2_q1;
        else 
            grp_fft_stage_clone_fu_126_in_i_2_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_3_q0_assign_proc : process(stage0_i_3_q0, stage1_i_3_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_3_q0 <= stage1_i_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_3_q0 <= stage0_i_3_q0;
        else 
            grp_fft_stage_clone_fu_126_in_i_3_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_i_3_q1_assign_proc : process(stage0_i_3_q1, stage1_i_3_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_i_3_q1 <= stage1_i_3_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_i_3_q1 <= stage0_i_3_q1;
        else 
            grp_fft_stage_clone_fu_126_in_i_3_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_0_q0_assign_proc : process(stage0_r_q0, stage1_r_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_0_q0 <= stage1_r_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_0_q0 <= stage0_r_q0;
        else 
            grp_fft_stage_clone_fu_126_in_r_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_0_q1_assign_proc : process(stage0_r_q1, stage1_r_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_0_q1 <= stage1_r_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_0_q1 <= stage0_r_q1;
        else 
            grp_fft_stage_clone_fu_126_in_r_0_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_1_q0_assign_proc : process(stage0_r_1_q0, stage1_r_1_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_1_q0 <= stage1_r_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_1_q0 <= stage0_r_1_q0;
        else 
            grp_fft_stage_clone_fu_126_in_r_1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_1_q1_assign_proc : process(stage0_r_1_q1, stage1_r_1_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_1_q1 <= stage1_r_1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_1_q1 <= stage0_r_1_q1;
        else 
            grp_fft_stage_clone_fu_126_in_r_1_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_2_q0_assign_proc : process(stage0_r_2_q0, stage1_r_2_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_2_q0 <= stage1_r_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_2_q0 <= stage0_r_2_q0;
        else 
            grp_fft_stage_clone_fu_126_in_r_2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_2_q1_assign_proc : process(stage0_r_2_q1, stage1_r_2_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_2_q1 <= stage1_r_2_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_2_q1 <= stage0_r_2_q1;
        else 
            grp_fft_stage_clone_fu_126_in_r_2_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_3_q0_assign_proc : process(stage0_r_3_q0, stage1_r_3_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_3_q0 <= stage1_r_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_3_q0 <= stage0_r_3_q0;
        else 
            grp_fft_stage_clone_fu_126_in_r_3_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_in_r_3_q1_assign_proc : process(stage0_r_3_q1, stage1_r_3_q1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_fft_stage_clone_fu_126_in_r_3_q1 <= stage1_r_3_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fft_stage_clone_fu_126_in_r_3_q1 <= stage0_r_3_q1;
        else 
            grp_fft_stage_clone_fu_126_in_r_3_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_m_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_100;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_80;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fft_stage_clone_fu_126_m <= ap_const_lv9_4;
        else 
            grp_fft_stage_clone_fu_126_m <= "XXXXXXXXX";
        end if; 
    end process;


    grp_fft_stage_clone_fu_126_t_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_80;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fft_stage_clone_fu_126_t <= ap_const_lv9_100;
        else 
            grp_fft_stage_clone_fu_126_t <= "XXXXXXXXX";
        end if; 
    end process;

    grp_fft_stage_fu_102_ap_start <= grp_fft_stage_fu_102_ap_start_reg;

    grp_fu_186_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_186_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_186_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_186_ce <= grp_fft_stage_fu_102_grp_fu_186_p_ce;
        else 
            grp_fu_186_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_186_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_186_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_186_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_186_p0 <= grp_fft_stage_fu_102_grp_fu_186_p_din0;
        else 
            grp_fu_186_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_186_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_186_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_186_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_186_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_186_p1 <= grp_fft_stage_fu_102_grp_fu_186_p_din1;
        else 
            grp_fu_186_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_190_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_190_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_190_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_190_ce <= grp_fft_stage_fu_102_grp_fu_190_p_ce;
        else 
            grp_fu_190_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_190_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_190_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_190_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_190_p0 <= grp_fft_stage_fu_102_grp_fu_190_p_din0;
        else 
            grp_fu_190_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_190_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_190_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_190_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_190_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_190_p1 <= grp_fft_stage_fu_102_grp_fu_190_p_din1;
        else 
            grp_fu_190_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_194_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_194_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_194_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_194_ce <= grp_fft_stage_fu_102_grp_fu_194_p_ce;
        else 
            grp_fu_194_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_194_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_194_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_194_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_194_p0 <= grp_fft_stage_fu_102_grp_fu_194_p_din0;
        else 
            grp_fu_194_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_194_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_194_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_194_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_194_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_194_p1 <= grp_fft_stage_fu_102_grp_fu_194_p_din1;
        else 
            grp_fu_194_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_198_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_198_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_198_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_198_ce <= grp_fft_stage_fu_102_grp_fu_198_p_ce;
        else 
            grp_fu_198_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_198_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_198_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_198_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_198_p0 <= grp_fft_stage_fu_102_grp_fu_198_p_din0;
        else 
            grp_fu_198_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_198_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_198_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_198_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_198_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_198_p1 <= grp_fft_stage_fu_102_grp_fu_198_p_din1;
        else 
            grp_fu_198_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_202_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_202_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_202_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_202_ce <= grp_fft_stage_fu_102_grp_fu_202_p_ce;
        else 
            grp_fu_202_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_202_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_202_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_202_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_202_p0 <= grp_fft_stage_fu_102_grp_fu_202_p_din0;
        else 
            grp_fu_202_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_202_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_202_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_202_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_202_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_202_p1 <= grp_fft_stage_fu_102_grp_fu_202_p_din1;
        else 
            grp_fu_202_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_206_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_206_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_206_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_206_ce <= grp_fft_stage_fu_102_grp_fu_206_p_ce;
        else 
            grp_fu_206_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_206_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_206_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_206_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_206_p0 <= grp_fft_stage_fu_102_grp_fu_206_p_din0;
        else 
            grp_fu_206_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_206_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_206_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_206_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_206_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_206_p1 <= grp_fft_stage_fu_102_grp_fu_206_p_din1;
        else 
            grp_fu_206_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_210_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_210_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_210_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_210_ce <= grp_fft_stage_fu_102_grp_fu_210_p_ce;
        else 
            grp_fu_210_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_210_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_210_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_210_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_210_p0 <= grp_fft_stage_fu_102_grp_fu_210_p_din0;
        else 
            grp_fu_210_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_210_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_210_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_210_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_210_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_210_p1 <= grp_fft_stage_fu_102_grp_fu_210_p_din1;
        else 
            grp_fu_210_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_ce_assign_proc : process(grp_fft_stage_fu_102_grp_fu_214_p_ce, grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_214_ce <= grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_214_ce <= grp_fft_stage_fu_102_grp_fu_214_p_ce;
        else 
            grp_fu_214_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_214_p0_assign_proc : process(grp_fft_stage_fu_102_grp_fu_214_p_din0, grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_214_p0 <= grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_214_p0 <= grp_fft_stage_fu_102_grp_fu_214_p_din0;
        else 
            grp_fu_214_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_214_p1_assign_proc : process(grp_fft_stage_fu_102_grp_fu_214_p_din1, grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_214_p1 <= grp_fft_stage_clone_clone_fu_166_grp_fu_214_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_214_p1 <= grp_fft_stage_fu_102_grp_fu_214_p_din1;
        else 
            grp_fu_214_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    in_i_address0 <= grp_fft_stage_fu_102_in_i_address0;
    in_i_address1 <= grp_fft_stage_fu_102_in_i_address1;
    in_i_ce0 <= grp_fft_stage_fu_102_in_i_ce0;
    in_i_ce1 <= grp_fft_stage_fu_102_in_i_ce1;
    in_r_address0 <= grp_fft_stage_fu_102_in_r_address0;
    in_r_address1 <= grp_fft_stage_fu_102_in_r_address1;
    in_r_ce0 <= grp_fft_stage_fu_102_in_r_ce0;
    in_r_ce1 <= grp_fft_stage_fu_102_in_r_ce1;
    out_i_address0 <= grp_fft_stage_clone_clone_fu_166_out_i_address0;
    out_i_address1 <= grp_fft_stage_clone_clone_fu_166_out_i_address1;
    out_i_ce0 <= grp_fft_stage_clone_clone_fu_166_out_i_ce0;
    out_i_ce1 <= grp_fft_stage_clone_clone_fu_166_out_i_ce1;
    out_i_d0 <= grp_fft_stage_clone_clone_fu_166_out_i_d0;
    out_i_d1 <= grp_fft_stage_clone_clone_fu_166_out_i_d1;
    out_i_we0 <= grp_fft_stage_clone_clone_fu_166_out_i_we0;
    out_i_we1 <= grp_fft_stage_clone_clone_fu_166_out_i_we1;
    out_r_address0 <= grp_fft_stage_clone_clone_fu_166_out_r_address0;
    out_r_address1 <= grp_fft_stage_clone_clone_fu_166_out_r_address1;
    out_r_ce0 <= grp_fft_stage_clone_clone_fu_166_out_r_ce0;
    out_r_ce1 <= grp_fft_stage_clone_clone_fu_166_out_r_ce1;
    out_r_d0 <= grp_fft_stage_clone_clone_fu_166_out_r_d0;
    out_r_d1 <= grp_fft_stage_clone_clone_fu_166_out_r_d1;
    out_r_we0 <= grp_fft_stage_clone_clone_fu_166_out_r_we0;
    out_r_we1 <= grp_fft_stage_clone_clone_fu_166_out_r_we1;

    stage0_i_1_address0_assign_proc : process(grp_fft_stage_fu_102_out_i_1_address0, grp_fft_stage_clone_fu_126_in_i_1_address0, grp_fft_stage_clone_fu_126_out_i_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_address0 <= grp_fft_stage_clone_fu_126_out_i_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_1_address0 <= grp_fft_stage_clone_fu_126_in_i_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_1_address0 <= grp_fft_stage_fu_102_out_i_1_address0;
        else 
            stage0_i_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_1_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_address1, grp_fft_stage_clone_fu_126_out_i_1_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_address1 <= grp_fft_stage_clone_fu_126_out_i_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_1_address1 <= grp_fft_stage_clone_fu_126_in_i_1_address1;
        else 
            stage0_i_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_1_ce0_assign_proc : process(grp_fft_stage_fu_102_out_i_1_ce0, grp_fft_stage_clone_fu_126_in_i_1_ce0, grp_fft_stage_clone_fu_126_out_i_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_ce0 <= grp_fft_stage_clone_fu_126_out_i_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_1_ce0 <= grp_fft_stage_clone_fu_126_in_i_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_1_ce0 <= grp_fft_stage_fu_102_out_i_1_ce0;
        else 
            stage0_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_ce1, grp_fft_stage_clone_fu_126_out_i_1_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_ce1 <= grp_fft_stage_clone_fu_126_out_i_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_1_ce1 <= grp_fft_stage_clone_fu_126_in_i_1_ce1;
        else 
            stage0_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_d0_assign_proc : process(grp_fft_stage_fu_102_out_i_1_d0, grp_fft_stage_clone_fu_126_out_i_1_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_d0 <= grp_fft_stage_clone_fu_126_out_i_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_1_d0 <= grp_fft_stage_fu_102_out_i_1_d0;
        else 
            stage0_i_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_i_1_we0_assign_proc : process(grp_fft_stage_fu_102_out_i_1_we0, grp_fft_stage_clone_fu_126_out_i_1_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_we0 <= grp_fft_stage_clone_fu_126_out_i_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_1_we0 <= grp_fft_stage_fu_102_out_i_1_we0;
        else 
            stage0_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_1_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_1_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_1_we1 <= grp_fft_stage_clone_fu_126_out_i_1_we1;
        else 
            stage0_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_address0_assign_proc : process(grp_fft_stage_fu_102_out_i_2_address0, grp_fft_stage_clone_fu_126_in_i_2_address0, grp_fft_stage_clone_fu_126_out_i_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_address0 <= grp_fft_stage_clone_fu_126_out_i_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_2_address0 <= grp_fft_stage_clone_fu_126_in_i_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_2_address0 <= grp_fft_stage_fu_102_out_i_2_address0;
        else 
            stage0_i_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_2_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_address1, grp_fft_stage_clone_fu_126_out_i_2_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_address1 <= grp_fft_stage_clone_fu_126_out_i_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_2_address1 <= grp_fft_stage_clone_fu_126_in_i_2_address1;
        else 
            stage0_i_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_2_ce0_assign_proc : process(grp_fft_stage_fu_102_out_i_2_ce0, grp_fft_stage_clone_fu_126_in_i_2_ce0, grp_fft_stage_clone_fu_126_out_i_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_ce0 <= grp_fft_stage_clone_fu_126_out_i_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_2_ce0 <= grp_fft_stage_clone_fu_126_in_i_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_2_ce0 <= grp_fft_stage_fu_102_out_i_2_ce0;
        else 
            stage0_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_ce1, grp_fft_stage_clone_fu_126_out_i_2_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_ce1 <= grp_fft_stage_clone_fu_126_out_i_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_2_ce1 <= grp_fft_stage_clone_fu_126_in_i_2_ce1;
        else 
            stage0_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_d0_assign_proc : process(grp_fft_stage_fu_102_out_i_2_d0, grp_fft_stage_clone_fu_126_out_i_2_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_d0 <= grp_fft_stage_clone_fu_126_out_i_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_2_d0 <= grp_fft_stage_fu_102_out_i_2_d0;
        else 
            stage0_i_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_i_2_we0_assign_proc : process(grp_fft_stage_fu_102_out_i_2_we0, grp_fft_stage_clone_fu_126_out_i_2_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_we0 <= grp_fft_stage_clone_fu_126_out_i_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_2_we0 <= grp_fft_stage_fu_102_out_i_2_we0;
        else 
            stage0_i_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_2_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_2_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_2_we1 <= grp_fft_stage_clone_fu_126_out_i_2_we1;
        else 
            stage0_i_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_address0_assign_proc : process(grp_fft_stage_fu_102_out_i_3_address0, grp_fft_stage_clone_fu_126_in_i_3_address0, grp_fft_stage_clone_fu_126_out_i_3_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_address0 <= grp_fft_stage_clone_fu_126_out_i_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_3_address0 <= grp_fft_stage_clone_fu_126_in_i_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_3_address0 <= grp_fft_stage_fu_102_out_i_3_address0;
        else 
            stage0_i_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_3_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_address1, grp_fft_stage_clone_fu_126_out_i_3_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_address1 <= grp_fft_stage_clone_fu_126_out_i_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_3_address1 <= grp_fft_stage_clone_fu_126_in_i_3_address1;
        else 
            stage0_i_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_3_ce0_assign_proc : process(grp_fft_stage_fu_102_out_i_3_ce0, grp_fft_stage_clone_fu_126_in_i_3_ce0, grp_fft_stage_clone_fu_126_out_i_3_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_ce0 <= grp_fft_stage_clone_fu_126_out_i_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_3_ce0 <= grp_fft_stage_clone_fu_126_in_i_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_3_ce0 <= grp_fft_stage_fu_102_out_i_3_ce0;
        else 
            stage0_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_ce1, grp_fft_stage_clone_fu_126_out_i_3_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_ce1 <= grp_fft_stage_clone_fu_126_out_i_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_3_ce1 <= grp_fft_stage_clone_fu_126_in_i_3_ce1;
        else 
            stage0_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_d0_assign_proc : process(grp_fft_stage_fu_102_out_i_3_d0, grp_fft_stage_clone_fu_126_out_i_3_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_d0 <= grp_fft_stage_clone_fu_126_out_i_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_3_d0 <= grp_fft_stage_fu_102_out_i_3_d0;
        else 
            stage0_i_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_i_3_we0_assign_proc : process(grp_fft_stage_fu_102_out_i_3_we0, grp_fft_stage_clone_fu_126_out_i_3_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_we0 <= grp_fft_stage_clone_fu_126_out_i_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_3_we0 <= grp_fft_stage_fu_102_out_i_3_we0;
        else 
            stage0_i_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_3_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_3_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_3_we1 <= grp_fft_stage_clone_fu_126_out_i_3_we1;
        else 
            stage0_i_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_address0_assign_proc : process(grp_fft_stage_fu_102_out_i_0_address0, grp_fft_stage_clone_fu_126_in_i_0_address0, grp_fft_stage_clone_fu_126_out_i_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_address0 <= grp_fft_stage_clone_fu_126_out_i_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_address0 <= grp_fft_stage_clone_fu_126_in_i_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_address0 <= grp_fft_stage_fu_102_out_i_0_address0;
        else 
            stage0_i_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_address1_assign_proc : process(grp_fft_stage_fu_102_out_i_0_address1, grp_fft_stage_clone_fu_126_in_i_0_address1, grp_fft_stage_clone_fu_126_out_i_0_address1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_address1 <= grp_fft_stage_clone_fu_126_out_i_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_address1 <= grp_fft_stage_clone_fu_126_in_i_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_address1 <= grp_fft_stage_fu_102_out_i_0_address1;
        else 
            stage0_i_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_i_ce0_assign_proc : process(grp_fft_stage_fu_102_out_i_0_ce0, grp_fft_stage_clone_fu_126_in_i_0_ce0, grp_fft_stage_clone_fu_126_out_i_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_ce0 <= grp_fft_stage_clone_fu_126_out_i_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_ce0 <= grp_fft_stage_clone_fu_126_in_i_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_ce0 <= grp_fft_stage_fu_102_out_i_0_ce0;
        else 
            stage0_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_ce1_assign_proc : process(grp_fft_stage_fu_102_out_i_0_ce1, grp_fft_stage_clone_fu_126_in_i_0_ce1, grp_fft_stage_clone_fu_126_out_i_0_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_ce1 <= grp_fft_stage_clone_fu_126_out_i_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_i_ce1 <= grp_fft_stage_clone_fu_126_in_i_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_ce1 <= grp_fft_stage_fu_102_out_i_0_ce1;
        else 
            stage0_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_d0_assign_proc : process(grp_fft_stage_fu_102_out_i_0_d0, grp_fft_stage_clone_fu_126_out_i_0_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_d0 <= grp_fft_stage_clone_fu_126_out_i_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_d0 <= grp_fft_stage_fu_102_out_i_0_d0;
        else 
            stage0_i_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_i_d1_assign_proc : process(grp_fft_stage_fu_102_out_i_0_d1, grp_fft_stage_clone_fu_126_out_i_0_d1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_d1 <= grp_fft_stage_clone_fu_126_out_i_0_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_d1 <= grp_fft_stage_fu_102_out_i_0_d1;
        else 
            stage0_i_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_i_we0_assign_proc : process(grp_fft_stage_fu_102_out_i_0_we0, grp_fft_stage_clone_fu_126_out_i_0_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_we0 <= grp_fft_stage_clone_fu_126_out_i_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_we0 <= grp_fft_stage_fu_102_out_i_0_we0;
        else 
            stage0_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_i_we1_assign_proc : process(grp_fft_stage_fu_102_out_i_0_we1, grp_fft_stage_clone_fu_126_out_i_0_we1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_i_we1 <= grp_fft_stage_clone_fu_126_out_i_0_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_i_we1 <= grp_fft_stage_fu_102_out_i_0_we1;
        else 
            stage0_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_address0_assign_proc : process(grp_fft_stage_fu_102_out_r_1_address0, grp_fft_stage_clone_fu_126_in_r_1_address0, grp_fft_stage_clone_fu_126_out_r_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_address0 <= grp_fft_stage_clone_fu_126_out_r_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_1_address0 <= grp_fft_stage_clone_fu_126_in_r_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_1_address0 <= grp_fft_stage_fu_102_out_r_1_address0;
        else 
            stage0_r_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_1_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_address1, grp_fft_stage_clone_fu_126_out_r_1_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_address1 <= grp_fft_stage_clone_fu_126_out_r_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_1_address1 <= grp_fft_stage_clone_fu_126_in_r_1_address1;
        else 
            stage0_r_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_1_ce0_assign_proc : process(grp_fft_stage_fu_102_out_r_1_ce0, grp_fft_stage_clone_fu_126_in_r_1_ce0, grp_fft_stage_clone_fu_126_out_r_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_ce0 <= grp_fft_stage_clone_fu_126_out_r_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_1_ce0 <= grp_fft_stage_clone_fu_126_in_r_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_1_ce0 <= grp_fft_stage_fu_102_out_r_1_ce0;
        else 
            stage0_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_ce1, grp_fft_stage_clone_fu_126_out_r_1_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_ce1 <= grp_fft_stage_clone_fu_126_out_r_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_1_ce1 <= grp_fft_stage_clone_fu_126_in_r_1_ce1;
        else 
            stage0_r_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_d0_assign_proc : process(grp_fft_stage_fu_102_out_r_1_d0, grp_fft_stage_clone_fu_126_out_r_1_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_d0 <= grp_fft_stage_clone_fu_126_out_r_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_1_d0 <= grp_fft_stage_fu_102_out_r_1_d0;
        else 
            stage0_r_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_r_1_we0_assign_proc : process(grp_fft_stage_fu_102_out_r_1_we0, grp_fft_stage_clone_fu_126_out_r_1_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_we0 <= grp_fft_stage_clone_fu_126_out_r_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_1_we0 <= grp_fft_stage_fu_102_out_r_1_we0;
        else 
            stage0_r_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_1_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_1_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_1_we1 <= grp_fft_stage_clone_fu_126_out_r_1_we1;
        else 
            stage0_r_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_address0_assign_proc : process(grp_fft_stage_fu_102_out_r_2_address0, grp_fft_stage_clone_fu_126_in_r_2_address0, grp_fft_stage_clone_fu_126_out_r_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_address0 <= grp_fft_stage_clone_fu_126_out_r_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_2_address0 <= grp_fft_stage_clone_fu_126_in_r_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_2_address0 <= grp_fft_stage_fu_102_out_r_2_address0;
        else 
            stage0_r_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_2_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_address1, grp_fft_stage_clone_fu_126_out_r_2_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_address1 <= grp_fft_stage_clone_fu_126_out_r_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_2_address1 <= grp_fft_stage_clone_fu_126_in_r_2_address1;
        else 
            stage0_r_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_2_ce0_assign_proc : process(grp_fft_stage_fu_102_out_r_2_ce0, grp_fft_stage_clone_fu_126_in_r_2_ce0, grp_fft_stage_clone_fu_126_out_r_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_ce0 <= grp_fft_stage_clone_fu_126_out_r_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_2_ce0 <= grp_fft_stage_clone_fu_126_in_r_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_2_ce0 <= grp_fft_stage_fu_102_out_r_2_ce0;
        else 
            stage0_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_ce1, grp_fft_stage_clone_fu_126_out_r_2_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_ce1 <= grp_fft_stage_clone_fu_126_out_r_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_2_ce1 <= grp_fft_stage_clone_fu_126_in_r_2_ce1;
        else 
            stage0_r_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_d0_assign_proc : process(grp_fft_stage_fu_102_out_r_2_d0, grp_fft_stage_clone_fu_126_out_r_2_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_d0 <= grp_fft_stage_clone_fu_126_out_r_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_2_d0 <= grp_fft_stage_fu_102_out_r_2_d0;
        else 
            stage0_r_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_r_2_we0_assign_proc : process(grp_fft_stage_fu_102_out_r_2_we0, grp_fft_stage_clone_fu_126_out_r_2_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_we0 <= grp_fft_stage_clone_fu_126_out_r_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_2_we0 <= grp_fft_stage_fu_102_out_r_2_we0;
        else 
            stage0_r_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_2_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_2_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_2_we1 <= grp_fft_stage_clone_fu_126_out_r_2_we1;
        else 
            stage0_r_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_address0_assign_proc : process(grp_fft_stage_fu_102_out_r_3_address0, grp_fft_stage_clone_fu_126_in_r_3_address0, grp_fft_stage_clone_fu_126_out_r_3_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_address0 <= grp_fft_stage_clone_fu_126_out_r_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_3_address0 <= grp_fft_stage_clone_fu_126_in_r_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_3_address0 <= grp_fft_stage_fu_102_out_r_3_address0;
        else 
            stage0_r_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_3_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_address1, grp_fft_stage_clone_fu_126_out_r_3_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_address1 <= grp_fft_stage_clone_fu_126_out_r_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_3_address1 <= grp_fft_stage_clone_fu_126_in_r_3_address1;
        else 
            stage0_r_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_3_ce0_assign_proc : process(grp_fft_stage_fu_102_out_r_3_ce0, grp_fft_stage_clone_fu_126_in_r_3_ce0, grp_fft_stage_clone_fu_126_out_r_3_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_ce0 <= grp_fft_stage_clone_fu_126_out_r_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_3_ce0 <= grp_fft_stage_clone_fu_126_in_r_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_3_ce0 <= grp_fft_stage_fu_102_out_r_3_ce0;
        else 
            stage0_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_ce1, grp_fft_stage_clone_fu_126_out_r_3_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_ce1 <= grp_fft_stage_clone_fu_126_out_r_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_3_ce1 <= grp_fft_stage_clone_fu_126_in_r_3_ce1;
        else 
            stage0_r_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_d0_assign_proc : process(grp_fft_stage_fu_102_out_r_3_d0, grp_fft_stage_clone_fu_126_out_r_3_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_d0 <= grp_fft_stage_clone_fu_126_out_r_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_3_d0 <= grp_fft_stage_fu_102_out_r_3_d0;
        else 
            stage0_r_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_r_3_we0_assign_proc : process(grp_fft_stage_fu_102_out_r_3_we0, grp_fft_stage_clone_fu_126_out_r_3_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_we0 <= grp_fft_stage_clone_fu_126_out_r_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_3_we0 <= grp_fft_stage_fu_102_out_r_3_we0;
        else 
            stage0_r_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_3_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_3_we1, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_3_we1 <= grp_fft_stage_clone_fu_126_out_r_3_we1;
        else 
            stage0_r_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_address0_assign_proc : process(grp_fft_stage_fu_102_out_r_0_address0, grp_fft_stage_clone_fu_126_in_r_0_address0, grp_fft_stage_clone_fu_126_out_r_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_address0 <= grp_fft_stage_clone_fu_126_out_r_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_address0 <= grp_fft_stage_clone_fu_126_in_r_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_address0 <= grp_fft_stage_fu_102_out_r_0_address0;
        else 
            stage0_r_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_address1_assign_proc : process(grp_fft_stage_fu_102_out_r_0_address1, grp_fft_stage_clone_fu_126_in_r_0_address1, grp_fft_stage_clone_fu_126_out_r_0_address1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_address1 <= grp_fft_stage_clone_fu_126_out_r_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_address1 <= grp_fft_stage_clone_fu_126_in_r_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_address1 <= grp_fft_stage_fu_102_out_r_0_address1;
        else 
            stage0_r_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage0_r_ce0_assign_proc : process(grp_fft_stage_fu_102_out_r_0_ce0, grp_fft_stage_clone_fu_126_in_r_0_ce0, grp_fft_stage_clone_fu_126_out_r_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_ce0 <= grp_fft_stage_clone_fu_126_out_r_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_ce0 <= grp_fft_stage_clone_fu_126_in_r_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_ce0 <= grp_fft_stage_fu_102_out_r_0_ce0;
        else 
            stage0_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_ce1_assign_proc : process(grp_fft_stage_fu_102_out_r_0_ce1, grp_fft_stage_clone_fu_126_in_r_0_ce1, grp_fft_stage_clone_fu_126_out_r_0_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_ce1 <= grp_fft_stage_clone_fu_126_out_r_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage0_r_ce1 <= grp_fft_stage_clone_fu_126_in_r_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_ce1 <= grp_fft_stage_fu_102_out_r_0_ce1;
        else 
            stage0_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_d0_assign_proc : process(grp_fft_stage_fu_102_out_r_0_d0, grp_fft_stage_clone_fu_126_out_r_0_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_d0 <= grp_fft_stage_clone_fu_126_out_r_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_d0 <= grp_fft_stage_fu_102_out_r_0_d0;
        else 
            stage0_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_r_d1_assign_proc : process(grp_fft_stage_fu_102_out_r_0_d1, grp_fft_stage_clone_fu_126_out_r_0_d1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_d1 <= grp_fft_stage_clone_fu_126_out_r_0_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_d1 <= grp_fft_stage_fu_102_out_r_0_d1;
        else 
            stage0_r_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stage0_r_we0_assign_proc : process(grp_fft_stage_fu_102_out_r_0_we0, grp_fft_stage_clone_fu_126_out_r_0_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_we0 <= grp_fft_stage_clone_fu_126_out_r_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_we0 <= grp_fft_stage_fu_102_out_r_0_we0;
        else 
            stage0_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage0_r_we1_assign_proc : process(grp_fft_stage_fu_102_out_r_0_we1, grp_fft_stage_clone_fu_126_out_r_0_we1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage0_r_we1 <= grp_fft_stage_clone_fu_126_out_r_0_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            stage0_r_we1 <= grp_fft_stage_fu_102_out_r_0_we1;
        else 
            stage0_r_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_1_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_address0, grp_fft_stage_clone_fu_126_out_i_1_address0, grp_fft_stage_clone_clone_fu_166_in_i_1_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_1_address0 <= grp_fft_stage_clone_clone_fu_166_in_i_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_address0 <= grp_fft_stage_clone_fu_126_out_i_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_1_address0 <= grp_fft_stage_clone_fu_126_in_i_1_address0;
        else 
            stage1_i_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_1_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_address1, grp_fft_stage_clone_fu_126_out_i_1_address1, grp_fft_stage_clone_clone_fu_166_in_i_1_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_1_address1 <= grp_fft_stage_clone_clone_fu_166_in_i_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_address1 <= grp_fft_stage_clone_fu_126_out_i_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_1_address1 <= grp_fft_stage_clone_fu_126_in_i_1_address1;
        else 
            stage1_i_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_1_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_ce0, grp_fft_stage_clone_fu_126_out_i_1_ce0, grp_fft_stage_clone_clone_fu_166_in_i_1_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_1_ce0 <= grp_fft_stage_clone_clone_fu_166_in_i_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_ce0 <= grp_fft_stage_clone_fu_126_out_i_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_1_ce0 <= grp_fft_stage_clone_fu_126_in_i_1_ce0;
        else 
            stage1_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_1_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_1_ce1, grp_fft_stage_clone_fu_126_out_i_1_ce1, grp_fft_stage_clone_clone_fu_166_in_i_1_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_1_ce1 <= grp_fft_stage_clone_clone_fu_166_in_i_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_ce1 <= grp_fft_stage_clone_fu_126_out_i_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_1_ce1 <= grp_fft_stage_clone_fu_126_in_i_1_ce1;
        else 
            stage1_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_1_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_1_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_we0 <= grp_fft_stage_clone_fu_126_out_i_1_we0;
        else 
            stage1_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_1_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_1_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_1_we1 <= grp_fft_stage_clone_fu_126_out_i_1_we1;
        else 
            stage1_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_2_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_address0, grp_fft_stage_clone_fu_126_out_i_2_address0, grp_fft_stage_clone_clone_fu_166_in_i_2_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_2_address0 <= grp_fft_stage_clone_clone_fu_166_in_i_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_address0 <= grp_fft_stage_clone_fu_126_out_i_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_2_address0 <= grp_fft_stage_clone_fu_126_in_i_2_address0;
        else 
            stage1_i_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_2_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_address1, grp_fft_stage_clone_fu_126_out_i_2_address1, grp_fft_stage_clone_clone_fu_166_in_i_2_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_2_address1 <= grp_fft_stage_clone_clone_fu_166_in_i_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_address1 <= grp_fft_stage_clone_fu_126_out_i_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_2_address1 <= grp_fft_stage_clone_fu_126_in_i_2_address1;
        else 
            stage1_i_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_2_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_ce0, grp_fft_stage_clone_fu_126_out_i_2_ce0, grp_fft_stage_clone_clone_fu_166_in_i_2_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_2_ce0 <= grp_fft_stage_clone_clone_fu_166_in_i_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_ce0 <= grp_fft_stage_clone_fu_126_out_i_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_2_ce0 <= grp_fft_stage_clone_fu_126_in_i_2_ce0;
        else 
            stage1_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_2_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_2_ce1, grp_fft_stage_clone_fu_126_out_i_2_ce1, grp_fft_stage_clone_clone_fu_166_in_i_2_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_2_ce1 <= grp_fft_stage_clone_clone_fu_166_in_i_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_ce1 <= grp_fft_stage_clone_fu_126_out_i_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_2_ce1 <= grp_fft_stage_clone_fu_126_in_i_2_ce1;
        else 
            stage1_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_2_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_2_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_we0 <= grp_fft_stage_clone_fu_126_out_i_2_we0;
        else 
            stage1_i_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_2_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_2_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_2_we1 <= grp_fft_stage_clone_fu_126_out_i_2_we1;
        else 
            stage1_i_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_3_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_address0, grp_fft_stage_clone_fu_126_out_i_3_address0, grp_fft_stage_clone_clone_fu_166_in_i_3_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_3_address0 <= grp_fft_stage_clone_clone_fu_166_in_i_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_address0 <= grp_fft_stage_clone_fu_126_out_i_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_3_address0 <= grp_fft_stage_clone_fu_126_in_i_3_address0;
        else 
            stage1_i_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_3_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_address1, grp_fft_stage_clone_fu_126_out_i_3_address1, grp_fft_stage_clone_clone_fu_166_in_i_3_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_3_address1 <= grp_fft_stage_clone_clone_fu_166_in_i_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_address1 <= grp_fft_stage_clone_fu_126_out_i_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_3_address1 <= grp_fft_stage_clone_fu_126_in_i_3_address1;
        else 
            stage1_i_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_3_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_ce0, grp_fft_stage_clone_fu_126_out_i_3_ce0, grp_fft_stage_clone_clone_fu_166_in_i_3_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_3_ce0 <= grp_fft_stage_clone_clone_fu_166_in_i_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_ce0 <= grp_fft_stage_clone_fu_126_out_i_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_3_ce0 <= grp_fft_stage_clone_fu_126_in_i_3_ce0;
        else 
            stage1_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_3_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_3_ce1, grp_fft_stage_clone_fu_126_out_i_3_ce1, grp_fft_stage_clone_clone_fu_166_in_i_3_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_3_ce1 <= grp_fft_stage_clone_clone_fu_166_in_i_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_ce1 <= grp_fft_stage_clone_fu_126_out_i_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_3_ce1 <= grp_fft_stage_clone_fu_126_in_i_3_ce1;
        else 
            stage1_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_3_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_3_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_we0 <= grp_fft_stage_clone_fu_126_out_i_3_we0;
        else 
            stage1_i_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_3_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_3_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_3_we1 <= grp_fft_stage_clone_fu_126_out_i_3_we1;
        else 
            stage1_i_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_0_address0, grp_fft_stage_clone_fu_126_out_i_0_address0, grp_fft_stage_clone_clone_fu_166_in_i_0_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_address0 <= grp_fft_stage_clone_clone_fu_166_in_i_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_address0 <= grp_fft_stage_clone_fu_126_out_i_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_address0 <= grp_fft_stage_clone_fu_126_in_i_0_address0;
        else 
            stage1_i_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_0_address1, grp_fft_stage_clone_fu_126_out_i_0_address1, grp_fft_stage_clone_clone_fu_166_in_i_0_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_address1 <= grp_fft_stage_clone_clone_fu_166_in_i_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_address1 <= grp_fft_stage_clone_fu_126_out_i_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_address1 <= grp_fft_stage_clone_fu_126_in_i_0_address1;
        else 
            stage1_i_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_i_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_0_ce0, grp_fft_stage_clone_fu_126_out_i_0_ce0, grp_fft_stage_clone_clone_fu_166_in_i_0_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_ce0 <= grp_fft_stage_clone_clone_fu_166_in_i_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_ce0 <= grp_fft_stage_clone_fu_126_out_i_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_ce0 <= grp_fft_stage_clone_fu_126_in_i_0_ce0;
        else 
            stage1_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_i_0_ce1, grp_fft_stage_clone_fu_126_out_i_0_ce1, grp_fft_stage_clone_clone_fu_166_in_i_0_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_i_ce1 <= grp_fft_stage_clone_clone_fu_166_in_i_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_ce1 <= grp_fft_stage_clone_fu_126_out_i_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_i_ce1 <= grp_fft_stage_clone_fu_126_in_i_0_ce1;
        else 
            stage1_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_0_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_we0 <= grp_fft_stage_clone_fu_126_out_i_0_we0;
        else 
            stage1_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_i_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_i_0_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_i_we1 <= grp_fft_stage_clone_fu_126_out_i_0_we1;
        else 
            stage1_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_1_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_address0, grp_fft_stage_clone_fu_126_out_r_1_address0, grp_fft_stage_clone_clone_fu_166_in_r_1_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_1_address0 <= grp_fft_stage_clone_clone_fu_166_in_r_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_address0 <= grp_fft_stage_clone_fu_126_out_r_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_1_address0 <= grp_fft_stage_clone_fu_126_in_r_1_address0;
        else 
            stage1_r_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_1_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_address1, grp_fft_stage_clone_fu_126_out_r_1_address1, grp_fft_stage_clone_clone_fu_166_in_r_1_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_1_address1 <= grp_fft_stage_clone_clone_fu_166_in_r_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_address1 <= grp_fft_stage_clone_fu_126_out_r_1_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_1_address1 <= grp_fft_stage_clone_fu_126_in_r_1_address1;
        else 
            stage1_r_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_1_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_ce0, grp_fft_stage_clone_fu_126_out_r_1_ce0, grp_fft_stage_clone_clone_fu_166_in_r_1_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_1_ce0 <= grp_fft_stage_clone_clone_fu_166_in_r_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_ce0 <= grp_fft_stage_clone_fu_126_out_r_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_1_ce0 <= grp_fft_stage_clone_fu_126_in_r_1_ce0;
        else 
            stage1_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_1_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_1_ce1, grp_fft_stage_clone_fu_126_out_r_1_ce1, grp_fft_stage_clone_clone_fu_166_in_r_1_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_1_ce1 <= grp_fft_stage_clone_clone_fu_166_in_r_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_ce1 <= grp_fft_stage_clone_fu_126_out_r_1_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_1_ce1 <= grp_fft_stage_clone_fu_126_in_r_1_ce1;
        else 
            stage1_r_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_1_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_1_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_we0 <= grp_fft_stage_clone_fu_126_out_r_1_we0;
        else 
            stage1_r_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_1_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_1_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_1_we1 <= grp_fft_stage_clone_fu_126_out_r_1_we1;
        else 
            stage1_r_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_2_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_address0, grp_fft_stage_clone_fu_126_out_r_2_address0, grp_fft_stage_clone_clone_fu_166_in_r_2_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_2_address0 <= grp_fft_stage_clone_clone_fu_166_in_r_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_address0 <= grp_fft_stage_clone_fu_126_out_r_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_2_address0 <= grp_fft_stage_clone_fu_126_in_r_2_address0;
        else 
            stage1_r_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_2_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_address1, grp_fft_stage_clone_fu_126_out_r_2_address1, grp_fft_stage_clone_clone_fu_166_in_r_2_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_2_address1 <= grp_fft_stage_clone_clone_fu_166_in_r_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_address1 <= grp_fft_stage_clone_fu_126_out_r_2_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_2_address1 <= grp_fft_stage_clone_fu_126_in_r_2_address1;
        else 
            stage1_r_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_2_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_ce0, grp_fft_stage_clone_fu_126_out_r_2_ce0, grp_fft_stage_clone_clone_fu_166_in_r_2_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_2_ce0 <= grp_fft_stage_clone_clone_fu_166_in_r_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_ce0 <= grp_fft_stage_clone_fu_126_out_r_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_2_ce0 <= grp_fft_stage_clone_fu_126_in_r_2_ce0;
        else 
            stage1_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_2_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_2_ce1, grp_fft_stage_clone_fu_126_out_r_2_ce1, grp_fft_stage_clone_clone_fu_166_in_r_2_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_2_ce1 <= grp_fft_stage_clone_clone_fu_166_in_r_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_ce1 <= grp_fft_stage_clone_fu_126_out_r_2_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_2_ce1 <= grp_fft_stage_clone_fu_126_in_r_2_ce1;
        else 
            stage1_r_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_2_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_2_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_we0 <= grp_fft_stage_clone_fu_126_out_r_2_we0;
        else 
            stage1_r_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_2_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_2_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_2_we1 <= grp_fft_stage_clone_fu_126_out_r_2_we1;
        else 
            stage1_r_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_3_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_address0, grp_fft_stage_clone_fu_126_out_r_3_address0, grp_fft_stage_clone_clone_fu_166_in_r_3_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_3_address0 <= grp_fft_stage_clone_clone_fu_166_in_r_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_address0 <= grp_fft_stage_clone_fu_126_out_r_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_3_address0 <= grp_fft_stage_clone_fu_126_in_r_3_address0;
        else 
            stage1_r_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_3_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_address1, grp_fft_stage_clone_fu_126_out_r_3_address1, grp_fft_stage_clone_clone_fu_166_in_r_3_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_3_address1 <= grp_fft_stage_clone_clone_fu_166_in_r_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_address1 <= grp_fft_stage_clone_fu_126_out_r_3_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_3_address1 <= grp_fft_stage_clone_fu_126_in_r_3_address1;
        else 
            stage1_r_3_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_3_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_ce0, grp_fft_stage_clone_fu_126_out_r_3_ce0, grp_fft_stage_clone_clone_fu_166_in_r_3_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_3_ce0 <= grp_fft_stage_clone_clone_fu_166_in_r_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_ce0 <= grp_fft_stage_clone_fu_126_out_r_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_3_ce0 <= grp_fft_stage_clone_fu_126_in_r_3_ce0;
        else 
            stage1_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_3_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_3_ce1, grp_fft_stage_clone_fu_126_out_r_3_ce1, grp_fft_stage_clone_clone_fu_166_in_r_3_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_3_ce1 <= grp_fft_stage_clone_clone_fu_166_in_r_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_ce1 <= grp_fft_stage_clone_fu_126_out_r_3_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_3_ce1 <= grp_fft_stage_clone_fu_126_in_r_3_ce1;
        else 
            stage1_r_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_3_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_3_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_we0 <= grp_fft_stage_clone_fu_126_out_r_3_we0;
        else 
            stage1_r_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_3_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_3_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_3_we1 <= grp_fft_stage_clone_fu_126_out_r_3_we1;
        else 
            stage1_r_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_address0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_0_address0, grp_fft_stage_clone_fu_126_out_r_0_address0, grp_fft_stage_clone_clone_fu_166_in_r_0_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_address0 <= grp_fft_stage_clone_clone_fu_166_in_r_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_address0 <= grp_fft_stage_clone_fu_126_out_r_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_address0 <= grp_fft_stage_clone_fu_126_in_r_0_address0;
        else 
            stage1_r_address0 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_address1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_0_address1, grp_fft_stage_clone_fu_126_out_r_0_address1, grp_fft_stage_clone_clone_fu_166_in_r_0_address1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_address1 <= grp_fft_stage_clone_clone_fu_166_in_r_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_address1 <= grp_fft_stage_clone_fu_126_out_r_0_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_address1 <= grp_fft_stage_clone_fu_126_in_r_0_address1;
        else 
            stage1_r_address1 <= "XXXXXXX";
        end if; 
    end process;


    stage1_r_ce0_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_0_ce0, grp_fft_stage_clone_fu_126_out_r_0_ce0, grp_fft_stage_clone_clone_fu_166_in_r_0_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_ce0 <= grp_fft_stage_clone_clone_fu_166_in_r_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_ce0 <= grp_fft_stage_clone_fu_126_out_r_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_ce0 <= grp_fft_stage_clone_fu_126_in_r_0_ce0;
        else 
            stage1_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_ce1_assign_proc : process(grp_fft_stage_clone_fu_126_in_r_0_ce1, grp_fft_stage_clone_fu_126_out_r_0_ce1, grp_fft_stage_clone_clone_fu_166_in_r_0_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            stage1_r_ce1 <= grp_fft_stage_clone_clone_fu_166_in_r_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_ce1 <= grp_fft_stage_clone_fu_126_out_r_0_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            stage1_r_ce1 <= grp_fft_stage_clone_fu_126_in_r_0_ce1;
        else 
            stage1_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_we0_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_0_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_we0 <= grp_fft_stage_clone_fu_126_out_r_0_we0;
        else 
            stage1_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    stage1_r_we1_assign_proc : process(grp_fft_stage_clone_fu_126_out_r_0_we1, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            stage1_r_we1 <= grp_fft_stage_clone_fu_126_out_r_0_we1;
        else 
            stage1_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
