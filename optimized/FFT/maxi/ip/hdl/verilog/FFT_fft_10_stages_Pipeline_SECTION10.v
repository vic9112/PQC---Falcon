// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT_fft_10_stages_Pipeline_SECTION10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stage1_r_address0,
        stage1_r_ce0,
        stage1_r_q0,
        stage1_i_address0,
        stage1_i_ce0,
        stage1_i_q0,
        stage1_r_4_address0,
        stage1_r_4_ce0,
        stage1_r_4_q0,
        stage1_i_4_address0,
        stage1_i_4_ce0,
        stage1_i_4_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        out_r_address1,
        out_r_ce1,
        out_r_we1,
        out_r_d1,
        out_i_address0,
        out_i_ce0,
        out_i_we0,
        out_i_d0,
        out_i_address1,
        out_i_ce1,
        out_i_we1,
        out_i_d1,
        stage1_r_5_address0,
        stage1_r_5_ce0,
        stage1_r_5_q0,
        stage1_i_5_address0,
        stage1_i_5_ce0,
        stage1_i_5_q0,
        stage1_r_6_address0,
        stage1_r_6_ce0,
        stage1_r_6_q0,
        stage1_i_6_address0,
        stage1_i_6_ce0,
        stage1_i_6_q0,
        gm_re_tab_address0,
        gm_re_tab_ce0,
        gm_re_tab_q0,
        gm_im_tab_address0,
        gm_im_tab_ce0,
        gm_im_tab_q0,
        grp_complex_mul_fu_308_p_din1,
        grp_complex_mul_fu_308_p_din2,
        grp_complex_mul_fu_308_p_din3,
        grp_complex_mul_fu_308_p_din4,
        grp_complex_mul_fu_308_p_dout0_0,
        grp_complex_mul_fu_308_p_dout0_1,
        grp_complex_mul_fu_308_p_ce,
        grp_fu_315_p_din0,
        grp_fu_315_p_din1,
        grp_fu_315_p_opcode,
        grp_fu_315_p_dout0,
        grp_fu_315_p_ce,
        grp_fu_319_p_din0,
        grp_fu_319_p_din1,
        grp_fu_319_p_opcode,
        grp_fu_319_p_dout0,
        grp_fu_319_p_ce,
        grp_fu_323_p_din0,
        grp_fu_323_p_din1,
        grp_fu_323_p_opcode,
        grp_fu_323_p_dout0,
        grp_fu_323_p_ce,
        grp_fu_327_p_din0,
        grp_fu_327_p_din1,
        grp_fu_327_p_opcode,
        grp_fu_327_p_dout0,
        grp_fu_327_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] stage1_r_address0;
output   stage1_r_ce0;
input  [63:0] stage1_r_q0;
output  [6:0] stage1_i_address0;
output   stage1_i_ce0;
input  [63:0] stage1_i_q0;
output  [6:0] stage1_r_4_address0;
output   stage1_r_4_ce0;
input  [63:0] stage1_r_4_q0;
output  [6:0] stage1_i_4_address0;
output   stage1_i_4_ce0;
input  [63:0] stage1_i_4_q0;
output  [8:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [63:0] out_r_d0;
output  [8:0] out_r_address1;
output   out_r_ce1;
output   out_r_we1;
output  [63:0] out_r_d1;
output  [8:0] out_i_address0;
output   out_i_ce0;
output   out_i_we0;
output  [63:0] out_i_d0;
output  [8:0] out_i_address1;
output   out_i_ce1;
output   out_i_we1;
output  [63:0] out_i_d1;
output  [6:0] stage1_r_5_address0;
output   stage1_r_5_ce0;
input  [63:0] stage1_r_5_q0;
output  [6:0] stage1_i_5_address0;
output   stage1_i_5_ce0;
input  [63:0] stage1_i_5_q0;
output  [6:0] stage1_r_6_address0;
output   stage1_r_6_ce0;
input  [63:0] stage1_r_6_q0;
output  [6:0] stage1_i_6_address0;
output   stage1_i_6_ce0;
input  [63:0] stage1_i_6_q0;
output  [9:0] gm_re_tab_address0;
output   gm_re_tab_ce0;
input  [63:0] gm_re_tab_q0;
output  [9:0] gm_im_tab_address0;
output   gm_im_tab_ce0;
input  [63:0] gm_im_tab_q0;
output  [63:0] grp_complex_mul_fu_308_p_din1;
output  [63:0] grp_complex_mul_fu_308_p_din2;
output  [63:0] grp_complex_mul_fu_308_p_din3;
output  [63:0] grp_complex_mul_fu_308_p_din4;
input  [63:0] grp_complex_mul_fu_308_p_dout0_0;
input  [63:0] grp_complex_mul_fu_308_p_dout0_1;
output   grp_complex_mul_fu_308_p_ce;
output  [63:0] grp_fu_315_p_din0;
output  [63:0] grp_fu_315_p_din1;
output  [1:0] grp_fu_315_p_opcode;
input  [63:0] grp_fu_315_p_dout0;
output   grp_fu_315_p_ce;
output  [63:0] grp_fu_319_p_din0;
output  [63:0] grp_fu_319_p_din1;
output  [1:0] grp_fu_319_p_opcode;
input  [63:0] grp_fu_319_p_dout0;
output   grp_fu_319_p_ce;
output  [63:0] grp_fu_323_p_din0;
output  [63:0] grp_fu_323_p_din1;
output  [1:0] grp_fu_323_p_opcode;
input  [63:0] grp_fu_323_p_dout0;
output   grp_fu_323_p_ce;
output  [63:0] grp_fu_327_p_din0;
output  [63:0] grp_fu_327_p_din1;
output  [1:0] grp_fu_327_p_opcode;
input  [63:0] grp_fu_327_p_dout0;
output   grp_fu_327_p_ce;

reg ap_idle;
reg stage1_r_ce0;
reg stage1_i_ce0;
reg stage1_r_4_ce0;
reg stage1_i_4_ce0;
reg[8:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[8:0] out_r_address1;
reg out_r_ce1;
reg out_r_we1;
reg[8:0] out_i_address0;
reg out_i_ce0;
reg out_i_we0;
reg[8:0] out_i_address1;
reg out_i_ce1;
reg out_i_we1;
reg stage1_r_5_ce0;
reg stage1_i_5_ce0;
reg stage1_r_6_ce0;
reg stage1_i_6_ce0;
reg[9:0] gm_re_tab_address0;
reg gm_re_tab_ce0;
reg[9:0] gm_im_tab_address0;
reg gm_im_tab_ce0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] tmp_reg_504;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [8:0] n_11_reg_499;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] n_11_reg_499_pp0_iter1_reg;
reg   [8:0] n_11_reg_499_pp0_iter2_reg;
reg   [8:0] n_11_reg_499_pp0_iter3_reg;
reg   [8:0] n_11_reg_499_pp0_iter4_reg;
reg   [8:0] n_11_reg_499_pp0_iter5_reg;
reg   [8:0] n_11_reg_499_pp0_iter6_reg;
reg   [8:0] n_11_reg_499_pp0_iter7_reg;
reg   [8:0] n_11_reg_499_pp0_iter8_reg;
reg   [8:0] n_11_reg_499_pp0_iter9_reg;
reg   [8:0] n_11_reg_499_pp0_iter10_reg;
wire   [0:0] tmp_fu_356_p3;
reg   [0:0] tmp_reg_504_pp0_iter1_reg;
reg   [0:0] tmp_reg_504_pp0_iter2_reg;
reg   [0:0] tmp_reg_504_pp0_iter3_reg;
reg   [0:0] tmp_reg_504_pp0_iter4_reg;
reg   [0:0] tmp_reg_504_pp0_iter5_reg;
reg   [0:0] tmp_reg_504_pp0_iter6_reg;
reg   [0:0] tmp_reg_504_pp0_iter7_reg;
reg   [0:0] tmp_reg_504_pp0_iter8_reg;
reg   [0:0] tmp_reg_504_pp0_iter9_reg;
wire   [63:0] zext_ln89_6_fu_392_p1;
reg   [63:0] zext_ln89_6_reg_518;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter1_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter2_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter3_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter4_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter5_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter6_reg;
reg   [63:0] zext_ln89_6_reg_518_pp0_iter7_reg;
wire   [7:0] i_gm_2_fu_398_p2;
reg   [7:0] i_gm_2_reg_536;
reg   [7:0] i_gm_2_reg_536_pp0_iter1_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter2_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter3_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter4_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter5_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter6_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter7_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter8_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter9_reg;
reg   [7:0] i_gm_2_reg_536_pp0_iter10_reg;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] tmp_re_6_reg_582;
reg   [63:0] tmp_im_6_reg_587;
reg   [63:0] y_re_reg_612;
reg   [63:0] y_im_reg_618;
reg   [63:0] x_re_6_reg_646;
reg   [63:0] x_im_6_reg_652;
reg   [63:0] y_re_5_reg_658;
reg   [63:0] y_im_5_reg_664;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] grp_complex_mul_fu_304_x_re;
reg   [63:0] grp_complex_mul_fu_304_x_im;
reg    grp_complex_mul_fu_304_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call23;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call23;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call23;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call23;
wire    ap_block_state9_pp0_stage0_iter4_ignore_call23;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call23;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call23;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call23;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call23;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call23;
wire    ap_block_state21_pp0_stage0_iter10_ignore_call23;
wire    ap_block_state23_pp0_stage0_iter11_ignore_call23;
wire    ap_block_pp0_stage0_11001_ignoreCallOp68;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call23;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call23;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call23;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call23;
wire    ap_block_state10_pp0_stage1_iter4_ignore_call23;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call23;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call23;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call23;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call23;
wire    ap_block_state20_pp0_stage1_iter9_ignore_call23;
wire    ap_block_state22_pp0_stage1_iter10_ignore_call23;
wire    ap_block_pp0_stage1_11001_ignoreCallOp59;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln87_fu_376_p1;
wire   [63:0] zext_ln91_6_fu_414_p1;
wire   [63:0] zext_ln87_1_fu_438_p1;
wire   [63:0] zext_ln89_fu_449_p1;
wire   [63:0] zext_ln91_fu_461_p1;
wire   [63:0] zext_ln89_7_fu_474_p1;
wire   [63:0] zext_ln91_5_fu_486_p1;
reg   [8:0] n_fu_72;
wire   [8:0] n_12_fu_420_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_n_11;
reg   [63:0] grp_fu_316_p0;
reg   [63:0] grp_fu_316_p1;
reg   [63:0] grp_fu_322_p0;
reg   [63:0] grp_fu_322_p1;
reg   [63:0] grp_fu_328_p0;
reg   [63:0] grp_fu_328_p1;
reg   [63:0] grp_fu_334_p0;
reg   [63:0] grp_fu_334_p1;
wire   [7:0] i_gm_fu_364_p1;
wire   [9:0] zext_ln87_7_cast_fu_368_p3;
wire   [6:0] trunc_ln89_1_fu_382_p4;
wire   [6:0] tmp_s_fu_404_p4;
wire   [9:0] zext_ln87_8_cast_fu_431_p3;
wire   [8:0] i_fu_444_p2;
wire   [8:0] or_ln91_fu_455_p2;
wire   [8:0] i_7_fu_467_p3;
wire   [8:0] or_ln91_1_fu_480_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter10_stage0;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_356_p3 == 1'd0))) begin
            n_fu_72 <= n_12_fu_420_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_72 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_356_p3 == 1'd0))) begin
        i_gm_2_reg_536[7 : 1] <= i_gm_2_fu_398_p2[7 : 1];
        zext_ln89_6_reg_518[6 : 0] <= zext_ln89_6_fu_392_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_gm_2_reg_536_pp0_iter10_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter9_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter1_reg[7 : 1] <= i_gm_2_reg_536[7 : 1];
        i_gm_2_reg_536_pp0_iter2_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter1_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter3_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter2_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter4_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter3_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter5_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter4_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter6_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter5_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter7_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter6_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter8_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter7_reg[7 : 1];
        i_gm_2_reg_536_pp0_iter9_reg[7 : 1] <= i_gm_2_reg_536_pp0_iter8_reg[7 : 1];
        n_11_reg_499 <= ap_sig_allocacmp_n_11;
        n_11_reg_499_pp0_iter10_reg <= n_11_reg_499_pp0_iter9_reg;
        n_11_reg_499_pp0_iter1_reg <= n_11_reg_499;
        n_11_reg_499_pp0_iter2_reg <= n_11_reg_499_pp0_iter1_reg;
        n_11_reg_499_pp0_iter3_reg <= n_11_reg_499_pp0_iter2_reg;
        n_11_reg_499_pp0_iter4_reg <= n_11_reg_499_pp0_iter3_reg;
        n_11_reg_499_pp0_iter5_reg <= n_11_reg_499_pp0_iter4_reg;
        n_11_reg_499_pp0_iter6_reg <= n_11_reg_499_pp0_iter5_reg;
        n_11_reg_499_pp0_iter7_reg <= n_11_reg_499_pp0_iter6_reg;
        n_11_reg_499_pp0_iter8_reg <= n_11_reg_499_pp0_iter7_reg;
        n_11_reg_499_pp0_iter9_reg <= n_11_reg_499_pp0_iter8_reg;
        tmp_reg_504 <= ap_sig_allocacmp_n_11[32'd8];
        tmp_reg_504_pp0_iter1_reg <= tmp_reg_504;
        tmp_reg_504_pp0_iter2_reg <= tmp_reg_504_pp0_iter1_reg;
        tmp_reg_504_pp0_iter3_reg <= tmp_reg_504_pp0_iter2_reg;
        tmp_reg_504_pp0_iter4_reg <= tmp_reg_504_pp0_iter3_reg;
        tmp_reg_504_pp0_iter5_reg <= tmp_reg_504_pp0_iter4_reg;
        tmp_reg_504_pp0_iter6_reg <= tmp_reg_504_pp0_iter5_reg;
        tmp_reg_504_pp0_iter7_reg <= tmp_reg_504_pp0_iter6_reg;
        tmp_reg_504_pp0_iter8_reg <= tmp_reg_504_pp0_iter7_reg;
        tmp_reg_504_pp0_iter9_reg <= tmp_reg_504_pp0_iter8_reg;
        zext_ln89_6_reg_518_pp0_iter1_reg[6 : 0] <= zext_ln89_6_reg_518[6 : 0];
        zext_ln89_6_reg_518_pp0_iter2_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter1_reg[6 : 0];
        zext_ln89_6_reg_518_pp0_iter3_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter2_reg[6 : 0];
        zext_ln89_6_reg_518_pp0_iter4_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter3_reg[6 : 0];
        zext_ln89_6_reg_518_pp0_iter5_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter4_reg[6 : 0];
        zext_ln89_6_reg_518_pp0_iter6_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter5_reg[6 : 0];
        zext_ln89_6_reg_518_pp0_iter7_reg[6 : 0] <= zext_ln89_6_reg_518_pp0_iter6_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_504 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_im_6_reg_587 <= stage1_i_6_q0;
        tmp_re_6_reg_582 <= stage1_r_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_im_6_reg_652 <= stage1_i_5_q0;
        x_re_6_reg_646 <= stage1_r_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_im_5_reg_664 <= grp_complex_mul_fu_308_p_dout0_1;
        y_re_5_reg_658 <= grp_complex_mul_fu_308_p_dout0_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_im_reg_618 <= grp_complex_mul_fu_308_p_dout0_1;
        y_re_reg_612 <= grp_complex_mul_fu_308_p_dout0_0;
    end
end

always @ (*) begin
    if (((tmp_reg_504 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (tmp_reg_504_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_11 = 9'd0;
    end else begin
        ap_sig_allocacmp_n_11 = n_fu_72;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            gm_im_tab_address0 = zext_ln87_1_fu_438_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            gm_im_tab_address0 = zext_ln87_fu_376_p1;
        end else begin
            gm_im_tab_address0 = 'bx;
        end
    end else begin
        gm_im_tab_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gm_im_tab_ce0 = 1'b1;
    end else begin
        gm_im_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            gm_re_tab_address0 = zext_ln87_1_fu_438_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            gm_re_tab_address0 = zext_ln87_fu_376_p1;
        end else begin
            gm_re_tab_address0 = 'bx;
        end
    end else begin
        gm_re_tab_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gm_re_tab_ce0 = 1'b1;
    end else begin
        gm_re_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp68) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp59) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_complex_mul_fu_304_ap_ce = 1'b1;
    end else begin
        grp_complex_mul_fu_304_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_complex_mul_fu_304_x_im = tmp_im_6_reg_587;
    end else if (((tmp_reg_504 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_complex_mul_fu_304_x_im = stage1_i_4_q0;
    end else begin
        grp_complex_mul_fu_304_x_im = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_complex_mul_fu_304_x_re = tmp_re_6_reg_582;
    end else if (((tmp_reg_504 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_complex_mul_fu_304_x_re = stage1_r_4_q0;
    end else begin
        grp_complex_mul_fu_304_x_re = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_316_p0 = x_re_6_reg_646;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_316_p0 = stage1_r_q0;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_316_p1 = y_re_5_reg_658;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_316_p1 = y_re_reg_612;
    end else begin
        grp_fu_316_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_322_p0 = x_im_6_reg_652;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_322_p0 = stage1_i_q0;
    end else begin
        grp_fu_322_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_322_p1 = y_im_5_reg_664;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_322_p1 = y_im_reg_618;
    end else begin
        grp_fu_322_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_328_p0 = x_re_6_reg_646;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_328_p0 = stage1_r_q0;
    end else begin
        grp_fu_328_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_328_p1 = y_re_5_reg_658;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_328_p1 = y_re_reg_612;
    end else begin
        grp_fu_328_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_334_p0 = x_im_6_reg_652;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_334_p0 = stage1_i_q0;
    end else begin
        grp_fu_334_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_334_p1 = y_im_5_reg_664;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_334_p1 = y_im_reg_618;
    end else begin
        grp_fu_334_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_i_address0 = zext_ln91_5_fu_486_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_i_address0 = zext_ln91_fu_461_p1;
    end else begin
        out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_i_address1 = zext_ln89_7_fu_474_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_i_address1 = zext_ln89_fu_449_p1;
    end else begin
        out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_i_ce0 = 1'b1;
    end else begin
        out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_i_ce1 = 1'b1;
    end else begin
        out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_i_we0 = 1'b1;
    end else begin
        out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_i_we1 = 1'b1;
    end else begin
        out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_r_address0 = zext_ln91_5_fu_486_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_r_address0 = zext_ln91_fu_461_p1;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_r_address1 = zext_ln89_7_fu_474_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_r_address1 = zext_ln89_fu_449_p1;
    end else begin
        out_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_r_ce1 = 1'b1;
    end else begin
        out_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out_r_we1 = 1'b1;
    end else begin
        out_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_i_4_ce0 = 1'b1;
    end else begin
        stage1_i_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_i_5_ce0 = 1'b1;
    end else begin
        stage1_i_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_i_6_ce0 = 1'b1;
    end else begin
        stage1_i_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_i_ce0 = 1'b1;
    end else begin
        stage1_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_r_4_ce0 = 1'b1;
    end else begin
        stage1_r_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_r_5_ce0 = 1'b1;
    end else begin
        stage1_r_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_r_6_ce0 = 1'b1;
    end else begin
        stage1_r_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage1_r_ce0 = 1'b1;
    end else begin
        stage1_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp68 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp59 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_complex_mul_fu_308_p_ce = grp_complex_mul_fu_304_ap_ce;

assign grp_complex_mul_fu_308_p_din1 = grp_complex_mul_fu_304_x_re;

assign grp_complex_mul_fu_308_p_din2 = grp_complex_mul_fu_304_x_im;

assign grp_complex_mul_fu_308_p_din3 = gm_re_tab_q0;

assign grp_complex_mul_fu_308_p_din4 = gm_im_tab_q0;

assign grp_fu_315_p_ce = 1'b1;

assign grp_fu_315_p_din0 = grp_fu_316_p0;

assign grp_fu_315_p_din1 = grp_fu_316_p1;

assign grp_fu_315_p_opcode = 2'd0;

assign grp_fu_319_p_ce = 1'b1;

assign grp_fu_319_p_din0 = grp_fu_322_p0;

assign grp_fu_319_p_din1 = grp_fu_322_p1;

assign grp_fu_319_p_opcode = 2'd0;

assign grp_fu_323_p_ce = 1'b1;

assign grp_fu_323_p_din0 = grp_fu_328_p0;

assign grp_fu_323_p_din1 = grp_fu_328_p1;

assign grp_fu_323_p_opcode = 2'd1;

assign grp_fu_327_p_ce = 1'b1;

assign grp_fu_327_p_din0 = grp_fu_334_p0;

assign grp_fu_327_p_din1 = grp_fu_334_p1;

assign grp_fu_327_p_opcode = 2'd1;

assign i_7_fu_467_p3 = {{i_gm_2_reg_536_pp0_iter10_reg}, {1'd0}};

assign i_fu_444_p2 = n_11_reg_499_pp0_iter10_reg << 9'd1;

assign i_gm_2_fu_398_p2 = (i_gm_fu_364_p1 | 8'd1);

assign i_gm_fu_364_p1 = ap_sig_allocacmp_n_11[7:0];

assign n_12_fu_420_p2 = (ap_sig_allocacmp_n_11 + 9'd2);

assign or_ln91_1_fu_480_p2 = (i_7_fu_467_p3 | 9'd1);

assign or_ln91_fu_455_p2 = (i_fu_444_p2 | 9'd1);

assign out_i_d0 = grp_fu_327_p_dout0;

assign out_i_d1 = grp_fu_319_p_dout0;

assign out_r_d0 = grp_fu_323_p_dout0;

assign out_r_d1 = grp_fu_315_p_dout0;

assign stage1_i_4_address0 = zext_ln89_6_fu_392_p1;

assign stage1_i_5_address0 = zext_ln89_6_reg_518_pp0_iter7_reg;

assign stage1_i_6_address0 = zext_ln91_6_fu_414_p1;

assign stage1_i_address0 = zext_ln89_6_reg_518_pp0_iter7_reg;

assign stage1_r_4_address0 = zext_ln89_6_fu_392_p1;

assign stage1_r_5_address0 = zext_ln89_6_reg_518_pp0_iter7_reg;

assign stage1_r_6_address0 = zext_ln91_6_fu_414_p1;

assign stage1_r_address0 = zext_ln89_6_reg_518_pp0_iter7_reg;

assign tmp_fu_356_p3 = ap_sig_allocacmp_n_11[32'd8];

assign tmp_s_fu_404_p4 = {{i_gm_2_fu_398_p2[7:1]}};

assign trunc_ln89_1_fu_382_p4 = {{ap_sig_allocacmp_n_11[7:1]}};

assign zext_ln87_1_fu_438_p1 = zext_ln87_8_cast_fu_431_p3;

assign zext_ln87_7_cast_fu_368_p3 = {{2'd2}, {i_gm_fu_364_p1}};

assign zext_ln87_8_cast_fu_431_p3 = {{2'd2}, {i_gm_2_reg_536}};

assign zext_ln87_fu_376_p1 = zext_ln87_7_cast_fu_368_p3;

assign zext_ln89_6_fu_392_p1 = trunc_ln89_1_fu_382_p4;

assign zext_ln89_7_fu_474_p1 = i_7_fu_467_p3;

assign zext_ln89_fu_449_p1 = i_fu_444_p2;

assign zext_ln91_5_fu_486_p1 = or_ln91_1_fu_480_p2;

assign zext_ln91_6_fu_414_p1 = tmp_s_fu_404_p4;

assign zext_ln91_fu_461_p1 = or_ln91_fu_455_p2;

always @ (posedge ap_clk) begin
    zext_ln89_6_reg_518[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln89_6_reg_518_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_gm_2_reg_536[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter1_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter2_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter3_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter4_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter5_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter6_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter7_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter8_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter9_reg[0] <= 1'b1;
    i_gm_2_reg_536_pp0_iter10_reg[0] <= 1'b1;
end

endmodule //FFT_fft_10_stages_Pipeline_SECTION10
