-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_stage is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce0 : OUT STD_LOGIC;
    in_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    in_i_ce1 : OUT STD_LOGIC;
    in_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_r_0_ce0 : OUT STD_LOGIC;
    out_r_0_we0 : OUT STD_LOGIC;
    out_r_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_r_0_ce1 : OUT STD_LOGIC;
    out_r_0_we1 : OUT STD_LOGIC;
    out_r_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_r_1_ce0 : OUT STD_LOGIC;
    out_r_1_we0 : OUT STD_LOGIC;
    out_r_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_r_2_ce0 : OUT STD_LOGIC;
    out_r_2_we0 : OUT STD_LOGIC;
    out_r_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_r_3_ce0 : OUT STD_LOGIC;
    out_r_3_we0 : OUT STD_LOGIC;
    out_r_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_i_0_ce0 : OUT STD_LOGIC;
    out_i_0_we0 : OUT STD_LOGIC;
    out_i_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_i_0_ce1 : OUT STD_LOGIC;
    out_i_0_we1 : OUT STD_LOGIC;
    out_i_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_i_1_ce0 : OUT STD_LOGIC;
    out_i_1_we0 : OUT STD_LOGIC;
    out_i_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_i_2_ce0 : OUT STD_LOGIC;
    out_i_2_we0 : OUT STD_LOGIC;
    out_i_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_i_3_ce0 : OUT STD_LOGIC;
    out_i_3_we0 : OUT STD_LOGIC;
    out_i_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_182_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_ce : OUT STD_LOGIC;
    grp_fu_186_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_186_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_ce : OUT STD_LOGIC;
    grp_fu_190_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_190_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_ce : OUT STD_LOGIC;
    grp_fu_194_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_194_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_ce : OUT STD_LOGIC;
    grp_fu_198_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_198_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_ce : OUT STD_LOGIC;
    grp_fu_202_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_202_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_ce : OUT STD_LOGIC;
    grp_fu_206_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_ce : OUT STD_LOGIC;
    grp_fu_210_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_ce : OUT STD_LOGIC );
end;


architecture behav of FFT_fft_stage is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_3FE6A09E667F3BCD : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100110101000001001111001100110011111110011101111001101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal tmp_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_440 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_447 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_470_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_reg_692 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_692_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_692_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_692_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_692_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i_7_fu_484_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_7_reg_698 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_713 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_713_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_713_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_713_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_713_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i_8_fu_514_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_8_reg_718 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_733 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_733_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_733_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_reg_733_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_re_7_reg_748 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_7_reg_753 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_8_reg_758 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_8_reg_763 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_9_fu_568_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_9_reg_768 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_783 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_783_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_783_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_783_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_reg_783_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_re_reg_788 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_reg_793 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_9_reg_818 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_9_reg_823 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal x_re_7_reg_838 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_838_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_7_reg_838_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_844 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_844_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_7_reg_844_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_8_reg_850 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_8_reg_850_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_8_reg_850_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_8_reg_856 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_8_reg_856_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_8_reg_856_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_872 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_872_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_872_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_878 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_878_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_878_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_9_reg_884 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_9_reg_884_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_9_reg_884_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_9_reg_890 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_9_reg_890_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_9_reg_890_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_1_reg_896 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_1_reg_902 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_2_reg_908 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_2_reg_914 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_3_reg_920 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_3_reg_926 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_932 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul7_reg_938 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_7_reg_944 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_7_reg_950 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_8_reg_956 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_8_reg_962 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_9_reg_968 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_9_reg_974 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_reg_980 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_reg_986 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_reg_992 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln87_8_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln87_9_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln87_10_fu_581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_10_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln85_11_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln85_12_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_1_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_2_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_fu_655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_3_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_01_fu_70 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_fu_544_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_9 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_396_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_400_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_404_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_409_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_414_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_418_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_430_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_435_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_11_cast_fu_490_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln87_12_cast_fu_520_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln87_cast_fu_555_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln87_13_cast_fu_573_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln96_1_cast_fu_622_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln96_2_cast_fu_635_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln96_cast_fu_648_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln96_3_cast_fu_661_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_227 : BOOLEAN;
    signal ap_enable_state17_pp0_iter4_stage0 : BOOLEAN;
    signal ap_enable_operation_248 : BOOLEAN;
    signal ap_enable_state18_pp0_iter4_stage1 : BOOLEAN;
    signal ap_enable_operation_230 : BOOLEAN;
    signal ap_enable_operation_250 : BOOLEAN;
    signal ap_enable_operation_253 : BOOLEAN;
    signal ap_enable_operation_270 : BOOLEAN;
    signal ap_enable_state19_pp0_iter4_stage2 : BOOLEAN;
    signal ap_enable_operation_256 : BOOLEAN;
    signal ap_enable_operation_272 : BOOLEAN;
    signal ap_enable_operation_275 : BOOLEAN;
    signal ap_enable_operation_300 : BOOLEAN;
    signal ap_enable_state20_pp0_iter4_stage3 : BOOLEAN;
    signal ap_enable_operation_278 : BOOLEAN;
    signal ap_enable_operation_302 : BOOLEAN;
    signal ap_enable_operation_285 : BOOLEAN;
    signal ap_enable_operation_293 : BOOLEAN;
    signal ap_enable_operation_288 : BOOLEAN;
    signal ap_enable_operation_296 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_dsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component FFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    n_01_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_462_p3 = ap_const_lv1_0))) then 
                    n_01_fu_70 <= n_fu_544_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_01_fu_70 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                x_im_7_reg_844_pp0_iter1_reg <= x_im_7_reg_844;
                x_im_7_reg_844_pp0_iter2_reg <= x_im_7_reg_844_pp0_iter1_reg;
                x_im_8_reg_856_pp0_iter1_reg <= x_im_8_reg_856;
                x_im_8_reg_856_pp0_iter2_reg <= x_im_8_reg_856_pp0_iter1_reg;
                x_re_7_reg_838_pp0_iter1_reg <= x_re_7_reg_838;
                x_re_7_reg_838_pp0_iter2_reg <= x_re_7_reg_838_pp0_iter1_reg;
                x_re_8_reg_850_pp0_iter1_reg <= x_re_8_reg_850;
                x_re_8_reg_850_pp0_iter2_reg <= x_re_8_reg_850_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_462_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    i_7_reg_698(7 downto 1) <= i_7_fu_484_p2(7 downto 1);
                    i_8_reg_718(0) <= i_8_fu_514_p2(0);    i_8_reg_718(7 downto 2) <= i_8_fu_514_p2(7 downto 2);
                i_reg_685 <= i_fu_470_p1;
                lshr_ln_reg_692 <= ap_sig_allocacmp_n_9(7 downto 2);
                tmp_5_reg_713 <= i_7_fu_484_p2(7 downto 2);
                tmp_6_reg_733 <= i_8_fu_514_p2(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    i_9_reg_768(7 downto 2) <= i_9_fu_568_p2(7 downto 2);
                tmp_7_reg_783 <= i_9_fu_568_p2(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln_reg_692_pp0_iter1_reg <= lshr_ln_reg_692;
                lshr_ln_reg_692_pp0_iter2_reg <= lshr_ln_reg_692_pp0_iter1_reg;
                lshr_ln_reg_692_pp0_iter3_reg <= lshr_ln_reg_692_pp0_iter2_reg;
                lshr_ln_reg_692_pp0_iter4_reg <= lshr_ln_reg_692_pp0_iter3_reg;
                tmp_5_reg_713_pp0_iter1_reg <= tmp_5_reg_713;
                tmp_5_reg_713_pp0_iter2_reg <= tmp_5_reg_713_pp0_iter1_reg;
                tmp_5_reg_713_pp0_iter3_reg <= tmp_5_reg_713_pp0_iter2_reg;
                tmp_5_reg_713_pp0_iter4_reg <= tmp_5_reg_713_pp0_iter3_reg;
                tmp_6_reg_733_pp0_iter1_reg <= tmp_6_reg_733;
                tmp_6_reg_733_pp0_iter2_reg <= tmp_6_reg_733_pp0_iter1_reg;
                tmp_6_reg_733_pp0_iter3_reg <= tmp_6_reg_733_pp0_iter2_reg;
                tmp_6_reg_733_pp0_iter4_reg <= tmp_6_reg_733_pp0_iter3_reg;
                tmp_reg_681 <= ap_sig_allocacmp_n_9(8 downto 8);
                x_im_9_reg_890_pp0_iter2_reg <= x_im_9_reg_890;
                x_im_9_reg_890_pp0_iter3_reg <= x_im_9_reg_890_pp0_iter2_reg;
                x_im_reg_878_pp0_iter2_reg <= x_im_reg_878;
                x_im_reg_878_pp0_iter3_reg <= x_im_reg_878_pp0_iter2_reg;
                x_re_9_reg_884_pp0_iter2_reg <= x_re_9_reg_884;
                x_re_9_reg_884_pp0_iter3_reg <= x_re_9_reg_884_pp0_iter2_reg;
                x_re_reg_872_pp0_iter2_reg <= x_re_reg_872;
                x_re_reg_872_pp0_iter3_reg <= x_re_reg_872_pp0_iter2_reg;
                    zext_ln93_reg_992(5 downto 0) <= zext_ln93_fu_617_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul33_1_reg_896 <= grp_fu_206_p_dout0;
                mul34_1_reg_902 <= grp_fu_210_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul33_2_reg_908 <= grp_fu_206_p_dout0;
                mul34_2_reg_914 <= grp_fu_210_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul33_3_reg_920 <= grp_fu_206_p_dout0;
                mul34_3_reg_926 <= grp_fu_210_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul7_reg_938 <= grp_fu_210_p_dout0;
                mul_reg_932 <= grp_fu_206_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_440 <= grp_fu_198_p_dout0;
                reg_447 <= grp_fu_202_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_7_reg_783_pp0_iter1_reg <= tmp_7_reg_783;
                tmp_7_reg_783_pp0_iter2_reg <= tmp_7_reg_783_pp0_iter1_reg;
                tmp_7_reg_783_pp0_iter3_reg <= tmp_7_reg_783_pp0_iter2_reg;
                tmp_7_reg_783_pp0_iter4_reg <= tmp_7_reg_783_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_im_7_reg_753 <= in_i_q1;
                tmp_im_8_reg_763 <= in_i_q0;
                tmp_re_7_reg_748 <= in_r_q1;
                tmp_re_8_reg_758 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_im_9_reg_823 <= in_i_q0;
                tmp_im_reg_793 <= in_i_q1;
                tmp_re_9_reg_818 <= in_r_q0;
                tmp_re_reg_788 <= in_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                x_im_7_reg_844 <= in_i_q1;
                x_im_8_reg_856 <= in_i_q0;
                x_re_7_reg_838 <= in_r_q1;
                x_re_8_reg_850 <= in_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                x_im_9_reg_890 <= in_i_q0;
                x_im_reg_878 <= in_i_q1;
                x_re_9_reg_884 <= in_r_q0;
                x_re_reg_872 <= in_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                y_im_7_reg_950 <= grp_fu_186_p_dout0;
                y_re_7_reg_944 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_im_8_reg_962 <= grp_fu_186_p_dout0;
                y_re_8_reg_956 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                y_im_9_reg_974 <= grp_fu_186_p_dout0;
                y_re_9_reg_968 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                y_im_reg_986 <= grp_fu_186_p_dout0;
                y_re_reg_980 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    i_7_reg_698(0) <= '1';
    i_8_reg_718(1) <= '1';
    i_9_reg_768(1 downto 0) <= "11";
    zext_ln93_reg_992(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
                ap_block_pp0 <= (((ap_ST_fsm_pp0_stage3 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage3_subdone)) or ((ap_ST_fsm_pp0_stage2 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage2_subdone)) or ((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)) or ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, tmp_reg_681)
    begin
        if (((tmp_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

        ap_enable_operation_227 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_230 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_248 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_250 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_253 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_256 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_270 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_272 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_275 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_278 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_285 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_288 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_293 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_296 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_300 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_302 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_enable_state17_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state17_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state18_pp0_iter4_stage1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1)
    begin
                ap_enable_state18_pp0_iter4_stage1 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state19_pp0_iter4_stage2_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2)
    begin
                ap_enable_state19_pp0_iter4_stage2 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_enable_state20_pp0_iter4_stage3_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3)
    begin
                ap_enable_state20_pp0_iter4_stage3 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_01_fu_70, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_9 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_9 <= n_01_fu_70;
        end if; 
    end process;

    grp_fu_182_p_ce <= ap_const_logic_1;
    grp_fu_182_p_din0 <= grp_fu_396_p0;
    grp_fu_182_p_din1 <= grp_fu_396_p1;
    grp_fu_182_p_opcode <= ap_const_lv2_1;
    grp_fu_186_p_ce <= ap_const_logic_1;
    grp_fu_186_p_din0 <= grp_fu_400_p0;
    grp_fu_186_p_din1 <= grp_fu_400_p1;
    grp_fu_186_p_opcode <= ap_const_lv2_0;
    grp_fu_190_p_ce <= ap_const_logic_1;
    grp_fu_190_p_din0 <= grp_fu_404_p0;
    grp_fu_190_p_din1 <= grp_fu_404_p1;
    grp_fu_190_p_opcode <= ap_const_lv2_0;
    grp_fu_194_p_ce <= ap_const_logic_1;
    grp_fu_194_p_din0 <= grp_fu_409_p0;
    grp_fu_194_p_din1 <= grp_fu_409_p1;
    grp_fu_194_p_opcode <= ap_const_lv2_0;
    grp_fu_198_p_ce <= ap_const_logic_1;
    grp_fu_198_p_din0 <= grp_fu_414_p0;
    grp_fu_198_p_din1 <= grp_fu_414_p1;
    grp_fu_198_p_opcode <= ap_const_lv2_1;
    grp_fu_202_p_ce <= ap_const_logic_1;
    grp_fu_202_p_din0 <= grp_fu_418_p0;
    grp_fu_202_p_din1 <= grp_fu_418_p1;
    grp_fu_202_p_opcode <= ap_const_lv2_1;
    grp_fu_206_p_ce <= ap_const_logic_1;
    grp_fu_206_p_din0 <= grp_fu_430_p0;
    grp_fu_206_p_din1 <= ap_const_lv64_3FE6A09E667F3BCD;
    grp_fu_210_p_ce <= ap_const_logic_1;
    grp_fu_210_p_din0 <= grp_fu_435_p0;
    grp_fu_210_p_din1 <= ap_const_lv64_3FE6A09E667F3BCD;

    grp_fu_396_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul33_1_reg_896, mul33_2_reg_908, mul33_3_reg_920, mul_reg_932, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_396_p0 <= mul_reg_932;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_396_p0 <= mul33_3_reg_920;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_396_p0 <= mul33_2_reg_908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_396_p0 <= mul33_1_reg_896;
        else 
            grp_fu_396_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_396_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul34_1_reg_902, mul34_2_reg_914, mul34_3_reg_926, mul7_reg_938, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_396_p1 <= mul7_reg_938;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_396_p1 <= mul34_3_reg_926;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_396_p1 <= mul34_2_reg_914;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_396_p1 <= mul34_1_reg_902;
        else 
            grp_fu_396_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul33_1_reg_896, mul33_2_reg_908, mul33_3_reg_920, mul_reg_932, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_400_p0 <= mul_reg_932;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_400_p0 <= mul33_3_reg_920;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_400_p0 <= mul33_2_reg_908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_400_p0 <= mul33_1_reg_896;
        else 
            grp_fu_400_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_400_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul34_1_reg_902, mul34_2_reg_914, mul34_3_reg_926, mul7_reg_938, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_400_p1 <= mul7_reg_938;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_400_p1 <= mul34_3_reg_926;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_400_p1 <= mul34_2_reg_914;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_400_p1 <= mul34_1_reg_902;
        else 
            grp_fu_400_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_404_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_re_7_reg_838_pp0_iter2_reg, x_re_8_reg_850_pp0_iter2_reg, x_re_reg_872_pp0_iter3_reg, x_re_9_reg_884_pp0_iter3_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_404_p0 <= x_re_reg_872_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_404_p0 <= x_re_9_reg_884_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_404_p0 <= x_re_8_reg_850_pp0_iter2_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_404_p0 <= x_re_7_reg_838_pp0_iter2_reg;
            else 
                grp_fu_404_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_404_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_404_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_re_7_reg_944, y_re_8_reg_956, y_re_9_reg_968, y_re_reg_980, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_404_p1 <= y_re_reg_980;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_404_p1 <= y_re_9_reg_968;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_404_p1 <= y_re_8_reg_956;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_404_p1 <= y_re_7_reg_944;
            else 
                grp_fu_404_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_404_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_im_7_reg_844_pp0_iter2_reg, x_im_8_reg_856_pp0_iter2_reg, x_im_reg_878_pp0_iter3_reg, x_im_9_reg_890_pp0_iter3_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_409_p0 <= x_im_reg_878_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_409_p0 <= x_im_9_reg_890_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_409_p0 <= x_im_8_reg_856_pp0_iter2_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_409_p0 <= x_im_7_reg_844_pp0_iter2_reg;
            else 
                grp_fu_409_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_409_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_409_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_im_7_reg_950, y_im_8_reg_962, y_im_9_reg_974, y_im_reg_986, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_409_p1 <= y_im_reg_986;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_409_p1 <= y_im_9_reg_974;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_409_p1 <= y_im_8_reg_962;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_409_p1 <= y_im_7_reg_950;
            else 
                grp_fu_409_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_409_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_414_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_re_7_reg_838_pp0_iter2_reg, x_re_8_reg_850_pp0_iter2_reg, x_re_reg_872_pp0_iter3_reg, x_re_9_reg_884_pp0_iter3_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_414_p0 <= x_re_reg_872_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_414_p0 <= x_re_9_reg_884_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_414_p0 <= x_re_8_reg_850_pp0_iter2_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_414_p0 <= x_re_7_reg_838_pp0_iter2_reg;
            else 
                grp_fu_414_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_414_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_414_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_re_7_reg_944, y_re_8_reg_956, y_re_9_reg_968, y_re_reg_980, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_414_p1 <= y_re_reg_980;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_414_p1 <= y_re_9_reg_968;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_414_p1 <= y_re_8_reg_956;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_414_p1 <= y_re_7_reg_944;
            else 
                grp_fu_414_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_414_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_418_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_im_7_reg_844_pp0_iter2_reg, x_im_8_reg_856_pp0_iter2_reg, x_im_reg_878_pp0_iter3_reg, x_im_9_reg_890_pp0_iter3_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_418_p0 <= x_im_reg_878_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_418_p0 <= x_im_9_reg_890_pp0_iter3_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_418_p0 <= x_im_8_reg_856_pp0_iter2_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_418_p0 <= x_im_7_reg_844_pp0_iter2_reg;
            else 
                grp_fu_418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_418_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_im_7_reg_950, y_im_8_reg_962, y_im_9_reg_974, y_im_reg_986, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_418_p1 <= y_im_reg_986;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_418_p1 <= y_im_9_reg_974;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_418_p1 <= y_im_8_reg_962;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_418_p1 <= y_im_7_reg_950;
            else 
                grp_fu_418_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_418_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_430_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_re_7_reg_748, tmp_re_8_reg_758, tmp_re_reg_788, tmp_re_9_reg_818, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_430_p0 <= tmp_re_reg_788;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_430_p0 <= tmp_re_9_reg_818;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_430_p0 <= tmp_re_8_reg_758;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_430_p0 <= tmp_re_7_reg_748;
        else 
            grp_fu_430_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_435_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_im_7_reg_753, tmp_im_8_reg_763, tmp_im_reg_793, tmp_im_9_reg_823, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_435_p0 <= tmp_im_reg_793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_435_p0 <= tmp_im_9_reg_823;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_435_p0 <= tmp_im_8_reg_763;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_435_p0 <= tmp_im_7_reg_753;
        else 
            grp_fu_435_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_7_fu_484_p2 <= (i_fu_470_p1 or ap_const_lv8_1);
    i_8_fu_514_p2 <= (i_fu_470_p1 or ap_const_lv8_2);
    i_9_fu_568_p2 <= (i_reg_685 or ap_const_lv8_3);
    i_fu_470_p1 <= ap_sig_allocacmp_n_9(8 - 1 downto 0);

    in_i_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln87_9_fu_528_p1, ap_block_pp0_stage1, zext_ln87_10_fu_581_p1, ap_block_pp0_stage2, zext_ln85_11_fu_602_p1, ap_block_pp0_stage3, zext_ln85_12_fu_612_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                in_i_address0 <= zext_ln85_12_fu_612_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                in_i_address0 <= zext_ln85_11_fu_602_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_i_address0 <= zext_ln87_10_fu_581_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_i_address0 <= zext_ln87_9_fu_528_p1(9 - 1 downto 0);
            else 
                in_i_address0 <= "XXXXXXXXX";
            end if;
        else 
            in_i_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    in_i_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln87_8_fu_498_p1, ap_block_pp0_stage0, zext_ln87_fu_562_p1, ap_block_pp0_stage1, zext_ln85_10_fu_597_p1, ap_block_pp0_stage2, zext_ln85_fu_607_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                in_i_address1 <= zext_ln85_fu_607_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                in_i_address1 <= zext_ln85_10_fu_597_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_i_address1 <= zext_ln87_fu_562_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_i_address1 <= zext_ln87_8_fu_498_p1(9 - 1 downto 0);
            else 
                in_i_address1 <= "XXXXXXXXX";
            end if;
        else 
            in_i_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    in_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_i_ce0 <= ap_const_logic_1;
        else 
            in_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_i_ce1 <= ap_const_logic_1;
        else 
            in_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln87_9_fu_528_p1, ap_block_pp0_stage1, zext_ln87_10_fu_581_p1, ap_block_pp0_stage2, zext_ln85_11_fu_602_p1, ap_block_pp0_stage3, zext_ln85_12_fu_612_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                in_r_address0 <= zext_ln85_12_fu_612_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                in_r_address0 <= zext_ln85_11_fu_602_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_r_address0 <= zext_ln87_10_fu_581_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_r_address0 <= zext_ln87_9_fu_528_p1(9 - 1 downto 0);
            else 
                in_r_address0 <= "XXXXXXXXX";
            end if;
        else 
            in_r_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    in_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln87_8_fu_498_p1, ap_block_pp0_stage0, zext_ln87_fu_562_p1, ap_block_pp0_stage1, zext_ln85_10_fu_597_p1, ap_block_pp0_stage2, zext_ln85_fu_607_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                in_r_address1 <= zext_ln85_fu_607_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                in_r_address1 <= zext_ln85_10_fu_597_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_r_address1 <= zext_ln87_fu_562_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_r_address1 <= zext_ln87_8_fu_498_p1(9 - 1 downto 0);
            else 
                in_r_address1 <= "XXXXXXXXX";
            end if;
        else 
            in_r_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    in_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    n_fu_544_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_9) + unsigned(ap_const_lv9_4));
    out_i_0_address0 <= zext_ln96_fu_655_p1(7 - 1 downto 0);
    out_i_0_address1 <= zext_ln93_reg_992(7 - 1 downto 0);

    out_i_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_i_0_ce0 <= ap_const_logic_1;
        else 
            out_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_i_0_ce1 <= ap_const_logic_1;
        else 
            out_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_i_0_d0 <= grp_fu_202_p_dout0;
    out_i_0_d1 <= grp_fu_194_p_dout0;

    out_i_0_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_i_0_we0 <= ap_const_logic_1;
        else 
            out_i_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_0_we1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_i_0_we1 <= ap_const_logic_1;
        else 
            out_i_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, zext_ln93_fu_617_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln96_1_fu_629_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_1_address0 <= zext_ln96_1_fu_629_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_i_1_address0 <= zext_ln93_fu_617_p1(7 - 1 downto 0);
            else 
                out_i_1_address0 <= "XXXXXXX";
            end if;
        else 
            out_i_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_i_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_1_ce0 <= ap_const_logic_1;
        else 
            out_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, reg_447, ap_block_pp0_stage0, ap_block_pp0_stage1, grp_fu_194_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_1_d0 <= reg_447;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_i_1_d0 <= grp_fu_194_p_dout0;
            else 
                out_i_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_i_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_i_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_1_we0 <= ap_const_logic_1;
        else 
            out_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_2_address0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln93_reg_992, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln96_2_fu_642_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_2_address0 <= zext_ln96_2_fu_642_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_2_address0 <= zext_ln93_reg_992(7 - 1 downto 0);
            else 
                out_i_2_address0 <= "XXXXXXX";
            end if;
        else 
            out_i_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_i_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            out_i_2_ce0 <= ap_const_logic_1;
        else 
            out_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_2_d0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, reg_447, ap_block_pp0_stage1, ap_block_pp0_stage2, grp_fu_194_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_2_d0 <= reg_447;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_2_d0 <= grp_fu_194_p_dout0;
            else 
                out_i_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_i_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_i_2_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            out_i_2_we0 <= ap_const_logic_1;
        else 
            out_i_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_3_address0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, zext_ln93_reg_992, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln96_3_fu_668_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_i_3_address0 <= zext_ln96_3_fu_668_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_3_address0 <= zext_ln93_reg_992(7 - 1 downto 0);
            else 
                out_i_3_address0 <= "XXXXXXX";
            end if;
        else 
            out_i_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_i_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_i_3_ce0 <= ap_const_logic_1;
        else 
            out_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_3_d0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, reg_447, ap_block_pp0_stage2, ap_block_pp0_stage3, grp_fu_194_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_i_3_d0 <= reg_447;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_3_d0 <= grp_fu_194_p_dout0;
            else 
                out_i_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_i_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_i_3_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_i_3_we0 <= ap_const_logic_1;
        else 
            out_i_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_0_address0 <= zext_ln96_fu_655_p1(7 - 1 downto 0);
    out_r_0_address1 <= zext_ln93_reg_992(7 - 1 downto 0);

    out_r_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_0_ce0 <= ap_const_logic_1;
        else 
            out_r_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_0_ce1 <= ap_const_logic_1;
        else 
            out_r_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_0_d0 <= grp_fu_198_p_dout0;
    out_r_0_d1 <= grp_fu_190_p_dout0;

    out_r_0_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_0_we0 <= ap_const_logic_1;
        else 
            out_r_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_0_we1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            out_r_0_we1 <= ap_const_logic_1;
        else 
            out_r_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, zext_ln93_fu_617_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln96_1_fu_629_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_1_address0 <= zext_ln96_1_fu_629_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_r_1_address0 <= zext_ln93_fu_617_p1(7 - 1 downto 0);
            else 
                out_r_1_address0 <= "XXXXXXX";
            end if;
        else 
            out_r_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_r_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_1_ce0 <= ap_const_logic_1;
        else 
            out_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, reg_440, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, grp_fu_190_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_1_d0 <= reg_440;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_r_1_d0 <= grp_fu_190_p_dout0;
            else 
                out_r_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_r_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_1_we0 <= ap_const_logic_1;
        else 
            out_r_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_2_address0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln93_reg_992, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln96_2_fu_642_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_2_address0 <= zext_ln96_2_fu_642_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_2_address0 <= zext_ln93_reg_992(7 - 1 downto 0);
            else 
                out_r_2_address0 <= "XXXXXXX";
            end if;
        else 
            out_r_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_r_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            out_r_2_ce0 <= ap_const_logic_1;
        else 
            out_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_2_d0_assign_proc : process(ap_enable_reg_pp0_iter4, reg_440, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, grp_fu_190_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_2_d0 <= reg_440;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_2_d0 <= grp_fu_190_p_dout0;
            else 
                out_r_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_r_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_2_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            out_r_2_we0 <= ap_const_logic_1;
        else 
            out_r_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_3_address0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, zext_ln93_reg_992, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln96_3_fu_668_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_r_3_address0 <= zext_ln96_3_fu_668_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_3_address0 <= zext_ln93_reg_992(7 - 1 downto 0);
            else 
                out_r_3_address0 <= "XXXXXXX";
            end if;
        else 
            out_r_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    out_r_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_r_3_ce0 <= ap_const_logic_1;
        else 
            out_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_3_d0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, reg_440, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, grp_fu_190_p_dout0)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_r_3_d0 <= reg_440;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_3_d0 <= grp_fu_190_p_dout0;
            else 
                out_r_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_r_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_3_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            out_r_3_we0 <= ap_const_logic_1;
        else 
            out_r_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_462_p3 <= ap_sig_allocacmp_n_9(8 downto 8);
    zext_ln85_10_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_7_reg_698),64));
    zext_ln85_11_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_8_reg_718),64));
    zext_ln85_12_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_9_reg_768),64));
    zext_ln85_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_685),64));
    zext_ln87_10_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_13_cast_fu_573_p3),64));
    zext_ln87_11_cast_fu_490_p3 <= (ap_const_lv1_1 & i_7_fu_484_p2);
    zext_ln87_12_cast_fu_520_p3 <= (ap_const_lv1_1 & i_8_fu_514_p2);
    zext_ln87_13_cast_fu_573_p3 <= (ap_const_lv1_1 & i_9_fu_568_p2);
    zext_ln87_8_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_11_cast_fu_490_p3),64));
    zext_ln87_9_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_12_cast_fu_520_p3),64));
    zext_ln87_cast_fu_555_p3 <= (ap_const_lv1_1 & i_reg_685);
    zext_ln87_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln87_cast_fu_555_p3),64));
    zext_ln93_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_692_pp0_iter3_reg),64));
    zext_ln96_1_cast_fu_622_p3 <= (ap_const_lv1_1 & tmp_5_reg_713_pp0_iter4_reg);
    zext_ln96_1_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln96_1_cast_fu_622_p3),64));
    zext_ln96_2_cast_fu_635_p3 <= (ap_const_lv1_1 & tmp_6_reg_733_pp0_iter4_reg);
    zext_ln96_2_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln96_2_cast_fu_635_p3),64));
    zext_ln96_3_cast_fu_661_p3 <= (ap_const_lv1_1 & tmp_7_reg_783_pp0_iter4_reg);
    zext_ln96_3_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln96_3_cast_fu_661_p3),64));
    zext_ln96_cast_fu_648_p3 <= (ap_const_lv1_1 & lshr_ln_reg_692_pp0_iter4_reg);
    zext_ln96_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln96_cast_fu_648_p3),64));
end behav;
