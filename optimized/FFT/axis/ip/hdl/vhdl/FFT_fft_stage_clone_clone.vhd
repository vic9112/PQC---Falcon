-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_fft_stage_clone_clone is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_0_ce0 : OUT STD_LOGIC;
    in_r_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_0_ce1 : OUT STD_LOGIC;
    in_r_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_1_ce0 : OUT STD_LOGIC;
    in_r_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_1_ce1 : OUT STD_LOGIC;
    in_r_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_2_ce0 : OUT STD_LOGIC;
    in_r_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_2_ce1 : OUT STD_LOGIC;
    in_r_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_3_ce0 : OUT STD_LOGIC;
    in_r_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_3_ce1 : OUT STD_LOGIC;
    in_r_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_0_ce0 : OUT STD_LOGIC;
    in_i_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_0_ce1 : OUT STD_LOGIC;
    in_i_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_1_ce0 : OUT STD_LOGIC;
    in_i_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_1_ce1 : OUT STD_LOGIC;
    in_i_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_2_ce0 : OUT STD_LOGIC;
    in_i_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_2_ce1 : OUT STD_LOGIC;
    in_i_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_3_ce0 : OUT STD_LOGIC;
    in_i_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_i_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_i_3_ce1 : OUT STD_LOGIC;
    in_i_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce0 : OUT STD_LOGIC;
    out_i_we0 : OUT STD_LOGIC;
    out_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_i_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_i_ce1 : OUT STD_LOGIC;
    out_i_we1 : OUT STD_LOGIC;
    out_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    gm_re_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_re_tab_ce0 : OUT STD_LOGIC;
    gm_re_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    gm_im_tab_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    gm_im_tab_ce0 : OUT STD_LOGIC;
    gm_im_tab_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_182_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_182_p_ce : OUT STD_LOGIC;
    grp_fu_186_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_186_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_186_p_ce : OUT STD_LOGIC;
    grp_fu_190_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_190_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_190_p_ce : OUT STD_LOGIC;
    grp_fu_194_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_194_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_194_p_ce : OUT STD_LOGIC;
    grp_fu_198_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_198_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_198_p_ce : OUT STD_LOGIC;
    grp_fu_202_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_202_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_202_p_ce : OUT STD_LOGIC;
    grp_fu_206_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_206_p_ce : OUT STD_LOGIC;
    grp_fu_210_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_210_p_ce : OUT STD_LOGIC );
end;


architecture behav of FFT_fft_stage_clone_clone is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal tmp_reg_822 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal n_2_reg_817 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal n_2_reg_817_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_2_reg_817_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal n_2_reg_817_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln85_1_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_1_reg_836 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_1_reg_836_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_1_reg_836_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal i_gm_1_fu_596_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_1_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_1_reg_854_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_1_reg_854_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_1_reg_854_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_1_reg_854_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_fu_618_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_870_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_870_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_870_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_2_reg_870_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln85_4_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_4_reg_876 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_4_reg_876_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_4_reg_876_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal i_gm_3_fu_640_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_3_reg_892 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_3_reg_892_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_3_reg_892_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_3_reg_892_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal i_gm_3_reg_892_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln85_6_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_6_reg_898 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_6_reg_898_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_6_reg_898_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_reg_914 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gm_im_reg_920 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_reg_926 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_reg_932 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_1_reg_948 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_1_reg_954 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_2_reg_960 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_2_reg_966 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_re_3_reg_972 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_im_3_reg_978 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_1_reg_984 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gm_im_1_reg_990 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_2_reg_1006 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal gm_im_2_reg_1012 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_re_3_reg_1028 : STD_LOGIC_VECTOR (63 downto 0);
    signal gm_im_3_reg_1034 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_1040 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul1_reg_1045 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_538_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul2_reg_1050 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_542_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul3_reg_1055 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_1_reg_1060 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_1_reg_1065 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul35_1_reg_1070 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul36_1_reg_1075 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_2_reg_1090 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_2_reg_1095 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul35_2_reg_1100 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul36_2_reg_1105 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_reg_1110 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_reg_1116 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul33_3_reg_1122 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul34_3_reg_1127 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul35_3_reg_1132 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul36_3_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_reg_1148 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_1_reg_1164 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_1_reg_1170 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_2_reg_1208 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_2_reg_1214 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_2_reg_1220 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_2_reg_1226 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_re_3_reg_1232 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_im_3_reg_1238 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_re_3_reg_1244 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_im_3_reg_1250 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln83_fu_574_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln87_2_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln83_1_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln83_2_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln83_3_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln85_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_2_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_1_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_3_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_3_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_5_fu_792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_4_fu_804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_74 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_3_fu_662_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n_2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_498_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_502_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_506_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_511_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_516_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_521_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_530_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_534_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_538_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_542_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_gm_fu_562_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln83_cast_fu_566_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln_fu_580_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_602_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln85_1_fu_624_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln85_2_fu_646_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln83_1_cast_fu_673_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln83_2_cast_fu_686_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln83_3_cast_fu_699_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_712_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln87_fu_723_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_fu_735_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln87_1_fu_748_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_2_fu_760_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln87_2_fu_773_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_3_fu_785_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln87_3_fu_798_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to4 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_dsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component FFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    dmul_64ns_64ns_64_5_max_dsp_1_U90 : component FFT_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_538_p0,
        din1 => grp_fu_538_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_538_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U91 : component FFT_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_542_p0,
        din1 => grp_fu_542_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_542_p2);

    flow_control_loop_pipe_sequential_init_U : component FFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    n_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_fu_554_p3 = ap_const_lv1_0))) then 
                    n_fu_74 <= n_3_fu_662_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_74 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                gm_im_1_reg_990 <= gm_im_tab_q0;
                gm_re_1_reg_984 <= gm_re_tab_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                gm_im_2_reg_1012 <= gm_im_tab_q0;
                gm_re_2_reg_1006 <= gm_re_tab_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                gm_im_3_reg_1034 <= gm_im_tab_q0;
                gm_re_3_reg_1028 <= gm_re_tab_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_822 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                gm_im_reg_920 <= gm_im_tab_q0;
                gm_re_reg_914 <= gm_re_tab_q0;
                tmp_im_1_reg_954 <= in_i_3_q1;
                tmp_im_2_reg_966 <= in_i_1_q0;
                tmp_im_3_reg_978 <= in_i_3_q0;
                tmp_im_reg_932 <= in_i_1_q1;
                tmp_re_1_reg_948 <= in_r_3_q1;
                tmp_re_2_reg_960 <= in_r_1_q0;
                tmp_re_3_reg_972 <= in_r_3_q0;
                tmp_re_reg_926 <= in_r_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_fu_554_p3 = ap_const_lv1_0))) then
                    i_gm_1_reg_854(7 downto 1) <= i_gm_1_fu_596_p2(7 downto 1);
                    i_gm_2_reg_870(0) <= i_gm_2_fu_618_p2(0);    i_gm_2_reg_870(7 downto 2) <= i_gm_2_fu_618_p2(7 downto 2);
                    i_gm_3_reg_892(7 downto 2) <= i_gm_3_fu_640_p2(7 downto 2);
                    zext_ln85_1_reg_836(6 downto 0) <= zext_ln85_1_fu_590_p1(6 downto 0);
                    zext_ln85_4_reg_876(6 downto 1) <= zext_ln85_4_fu_634_p1(6 downto 1);
                    zext_ln85_6_reg_898(6 downto 1) <= zext_ln85_6_fu_656_p1(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    i_gm_1_reg_854_pp0_iter1_reg(7 downto 1) <= i_gm_1_reg_854(7 downto 1);
                    i_gm_1_reg_854_pp0_iter2_reg(7 downto 1) <= i_gm_1_reg_854_pp0_iter1_reg(7 downto 1);
                    i_gm_1_reg_854_pp0_iter3_reg(7 downto 1) <= i_gm_1_reg_854_pp0_iter2_reg(7 downto 1);
                    i_gm_1_reg_854_pp0_iter4_reg(7 downto 1) <= i_gm_1_reg_854_pp0_iter3_reg(7 downto 1);
                    i_gm_2_reg_870_pp0_iter1_reg(0) <= i_gm_2_reg_870(0);    i_gm_2_reg_870_pp0_iter1_reg(7 downto 2) <= i_gm_2_reg_870(7 downto 2);
                    i_gm_2_reg_870_pp0_iter2_reg(0) <= i_gm_2_reg_870_pp0_iter1_reg(0);    i_gm_2_reg_870_pp0_iter2_reg(7 downto 2) <= i_gm_2_reg_870_pp0_iter1_reg(7 downto 2);
                    i_gm_2_reg_870_pp0_iter3_reg(0) <= i_gm_2_reg_870_pp0_iter2_reg(0);    i_gm_2_reg_870_pp0_iter3_reg(7 downto 2) <= i_gm_2_reg_870_pp0_iter2_reg(7 downto 2);
                    i_gm_2_reg_870_pp0_iter4_reg(0) <= i_gm_2_reg_870_pp0_iter3_reg(0);    i_gm_2_reg_870_pp0_iter4_reg(7 downto 2) <= i_gm_2_reg_870_pp0_iter3_reg(7 downto 2);
                    i_gm_3_reg_892_pp0_iter1_reg(7 downto 2) <= i_gm_3_reg_892(7 downto 2);
                    i_gm_3_reg_892_pp0_iter2_reg(7 downto 2) <= i_gm_3_reg_892_pp0_iter1_reg(7 downto 2);
                    i_gm_3_reg_892_pp0_iter3_reg(7 downto 2) <= i_gm_3_reg_892_pp0_iter2_reg(7 downto 2);
                    i_gm_3_reg_892_pp0_iter4_reg(7 downto 2) <= i_gm_3_reg_892_pp0_iter3_reg(7 downto 2);
                n_2_reg_817 <= ap_sig_allocacmp_n_2;
                n_2_reg_817_pp0_iter1_reg <= n_2_reg_817;
                n_2_reg_817_pp0_iter2_reg <= n_2_reg_817_pp0_iter1_reg;
                n_2_reg_817_pp0_iter3_reg <= n_2_reg_817_pp0_iter2_reg;
                tmp_reg_822 <= ap_sig_allocacmp_n_2(8 downto 8);
                    zext_ln85_1_reg_836_pp0_iter1_reg(6 downto 0) <= zext_ln85_1_reg_836(6 downto 0);
                    zext_ln85_1_reg_836_pp0_iter2_reg(6 downto 0) <= zext_ln85_1_reg_836_pp0_iter1_reg(6 downto 0);
                    zext_ln85_4_reg_876_pp0_iter1_reg(6 downto 1) <= zext_ln85_4_reg_876(6 downto 1);
                    zext_ln85_4_reg_876_pp0_iter2_reg(6 downto 1) <= zext_ln85_4_reg_876_pp0_iter1_reg(6 downto 1);
                    zext_ln85_6_reg_898_pp0_iter1_reg(6 downto 1) <= zext_ln85_6_reg_898(6 downto 1);
                    zext_ln85_6_reg_898_pp0_iter2_reg(6 downto 1) <= zext_ln85_6_reg_898_pp0_iter1_reg(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul1_reg_1045 <= grp_fu_210_p_dout0;
                mul2_reg_1050 <= grp_fu_538_p2;
                mul3_reg_1055 <= grp_fu_542_p2;
                mul_reg_1040 <= grp_fu_206_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul33_1_reg_1060 <= grp_fu_206_p_dout0;
                mul34_1_reg_1065 <= grp_fu_210_p_dout0;
                mul35_1_reg_1070 <= grp_fu_538_p2;
                mul36_1_reg_1075 <= grp_fu_542_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul33_2_reg_1090 <= grp_fu_206_p_dout0;
                mul34_2_reg_1095 <= grp_fu_210_p_dout0;
                mul35_2_reg_1100 <= grp_fu_538_p2;
                mul36_2_reg_1105 <= grp_fu_542_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul33_3_reg_1122 <= grp_fu_206_p_dout0;
                mul34_3_reg_1127 <= grp_fu_210_p_dout0;
                mul35_3_reg_1132 <= grp_fu_538_p2;
                mul36_3_reg_1137 <= grp_fu_542_p2;
                x_im_reg_1116 <= in_i_0_q1;
                x_re_reg_1110 <= in_r_0_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                x_im_2_reg_1214 <= in_i_0_q0;
                x_im_3_reg_1238 <= in_i_2_q0;
                x_re_2_reg_1208 <= in_r_0_q0;
                x_re_3_reg_1232 <= in_r_2_q0;
                y_im_2_reg_1226 <= grp_fu_186_p_dout0;
                y_re_2_reg_1220 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                y_im_1_reg_1170 <= grp_fu_186_p_dout0;
                y_re_1_reg_1164 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                y_im_3_reg_1250 <= grp_fu_186_p_dout0;
                y_re_3_reg_1244 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                y_im_reg_1148 <= grp_fu_186_p_dout0;
                y_re_reg_1142 <= grp_fu_182_p_dout0;
            end if;
        end if;
    end process;
    zext_ln85_1_reg_836(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_1_reg_836_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_1_reg_836_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    i_gm_1_reg_854(0) <= '1';
    i_gm_1_reg_854_pp0_iter1_reg(0) <= '1';
    i_gm_1_reg_854_pp0_iter2_reg(0) <= '1';
    i_gm_1_reg_854_pp0_iter3_reg(0) <= '1';
    i_gm_1_reg_854_pp0_iter4_reg(0) <= '1';
    i_gm_2_reg_870(1) <= '1';
    i_gm_2_reg_870_pp0_iter1_reg(1) <= '1';
    i_gm_2_reg_870_pp0_iter2_reg(1) <= '1';
    i_gm_2_reg_870_pp0_iter3_reg(1) <= '1';
    i_gm_2_reg_870_pp0_iter4_reg(1) <= '1';
    zext_ln85_4_reg_876(0) <= '1';
    zext_ln85_4_reg_876(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_4_reg_876_pp0_iter1_reg(0) <= '1';
    zext_ln85_4_reg_876_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_4_reg_876_pp0_iter2_reg(0) <= '1';
    zext_ln85_4_reg_876_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    i_gm_3_reg_892(1 downto 0) <= "11";
    i_gm_3_reg_892_pp0_iter1_reg(1 downto 0) <= "11";
    i_gm_3_reg_892_pp0_iter2_reg(1 downto 0) <= "11";
    i_gm_3_reg_892_pp0_iter3_reg(1 downto 0) <= "11";
    i_gm_3_reg_892_pp0_iter4_reg(1 downto 0) <= "11";
    zext_ln85_6_reg_898(0) <= '1';
    zext_ln85_6_reg_898(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_6_reg_898_pp0_iter1_reg(0) <= '1';
    zext_ln85_6_reg_898_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln85_6_reg_898_pp0_iter2_reg(0) <= '1';
    zext_ln85_6_reg_898_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to4, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to4 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, tmp_reg_822)
    begin
        if (((tmp_reg_822 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_fu_74, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_2 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_n_2 <= n_fu_74;
        end if; 
    end process;


    gm_im_tab_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln83_fu_574_p1, ap_block_pp0_stage0, zext_ln83_1_fu_680_p1, ap_block_pp0_stage1, zext_ln83_2_fu_693_p1, ap_block_pp0_stage2, zext_ln83_3_fu_706_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                gm_im_tab_address0 <= zext_ln83_3_fu_706_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                gm_im_tab_address0 <= zext_ln83_2_fu_693_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                gm_im_tab_address0 <= zext_ln83_1_fu_680_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                gm_im_tab_address0 <= zext_ln83_fu_574_p1(10 - 1 downto 0);
            else 
                gm_im_tab_address0 <= "XXXXXXXXXX";
            end if;
        else 
            gm_im_tab_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gm_im_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gm_im_tab_ce0 <= ap_const_logic_1;
        else 
            gm_im_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gm_re_tab_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln83_fu_574_p1, ap_block_pp0_stage0, zext_ln83_1_fu_680_p1, ap_block_pp0_stage1, zext_ln83_2_fu_693_p1, ap_block_pp0_stage2, zext_ln83_3_fu_706_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                gm_re_tab_address0 <= zext_ln83_3_fu_706_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                gm_re_tab_address0 <= zext_ln83_2_fu_693_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                gm_re_tab_address0 <= zext_ln83_1_fu_680_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                gm_re_tab_address0 <= zext_ln83_fu_574_p1(10 - 1 downto 0);
            else 
                gm_re_tab_address0 <= "XXXXXXXXXX";
            end if;
        else 
            gm_re_tab_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gm_re_tab_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gm_re_tab_ce0 <= ap_const_logic_1;
        else 
            gm_re_tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_182_p_ce <= ap_const_logic_1;
    grp_fu_182_p_din0 <= grp_fu_498_p0;
    grp_fu_182_p_din1 <= grp_fu_498_p1;
    grp_fu_182_p_opcode <= ap_const_lv2_1;
    grp_fu_186_p_ce <= ap_const_logic_1;
    grp_fu_186_p_din0 <= grp_fu_502_p0;
    grp_fu_186_p_din1 <= grp_fu_502_p1;
    grp_fu_186_p_opcode <= ap_const_lv2_0;
    grp_fu_190_p_ce <= ap_const_logic_1;
    grp_fu_190_p_din0 <= grp_fu_506_p0;
    grp_fu_190_p_din1 <= grp_fu_506_p1;
    grp_fu_190_p_opcode <= ap_const_lv2_0;
    grp_fu_194_p_ce <= ap_const_logic_1;
    grp_fu_194_p_din0 <= grp_fu_511_p0;
    grp_fu_194_p_din1 <= grp_fu_511_p1;
    grp_fu_194_p_opcode <= ap_const_lv2_0;
    grp_fu_198_p_ce <= ap_const_logic_1;
    grp_fu_198_p_din0 <= grp_fu_516_p0;
    grp_fu_198_p_din1 <= grp_fu_516_p1;
    grp_fu_198_p_opcode <= ap_const_lv2_1;
    grp_fu_202_p_ce <= ap_const_logic_1;
    grp_fu_202_p_din0 <= grp_fu_521_p0;
    grp_fu_202_p_din1 <= grp_fu_521_p1;
    grp_fu_202_p_opcode <= ap_const_lv2_1;
    grp_fu_206_p_ce <= ap_const_logic_1;
    grp_fu_206_p_din0 <= grp_fu_530_p0;
    grp_fu_206_p_din1 <= grp_fu_530_p1;
    grp_fu_210_p_ce <= ap_const_logic_1;
    grp_fu_210_p_din0 <= grp_fu_534_p0;
    grp_fu_210_p_din1 <= grp_fu_534_p1;

    grp_fu_498_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_1040, mul33_1_reg_1060, mul33_2_reg_1090, mul33_3_reg_1122, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_498_p0 <= mul33_3_reg_1122;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_498_p0 <= mul33_2_reg_1090;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_498_p0 <= mul33_1_reg_1060;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_498_p0 <= mul_reg_1040;
        else 
            grp_fu_498_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_498_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul1_reg_1045, mul34_1_reg_1065, mul34_2_reg_1095, mul34_3_reg_1127, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_498_p1 <= mul34_3_reg_1127;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_498_p1 <= mul34_2_reg_1095;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_498_p1 <= mul34_1_reg_1065;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_498_p1 <= mul1_reg_1045;
        else 
            grp_fu_498_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_502_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul2_reg_1050, mul35_1_reg_1070, mul35_2_reg_1100, mul35_3_reg_1132, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_502_p0 <= mul35_3_reg_1132;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_502_p0 <= mul35_2_reg_1100;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_502_p0 <= mul35_1_reg_1070;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_502_p0 <= mul2_reg_1050;
        else 
            grp_fu_502_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_502_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul3_reg_1055, mul36_1_reg_1075, mul36_2_reg_1105, mul36_3_reg_1137, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_502_p1 <= mul36_3_reg_1137;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_502_p1 <= mul36_2_reg_1105;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_502_p1 <= mul36_1_reg_1075;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_502_p1 <= mul3_reg_1055;
        else 
            grp_fu_502_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_506_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, in_r_2_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_re_reg_1110, x_re_2_reg_1208, x_re_3_reg_1232, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_506_p0 <= x_re_3_reg_1232;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_506_p0 <= x_re_2_reg_1208;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_506_p0 <= in_r_2_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_506_p0 <= x_re_reg_1110;
            else 
                grp_fu_506_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_506_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_506_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_re_reg_1142, y_re_1_reg_1164, y_re_2_reg_1220, y_re_3_reg_1244, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_506_p1 <= y_re_3_reg_1244;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_506_p1 <= y_re_2_reg_1220;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_506_p1 <= y_re_1_reg_1164;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_506_p1 <= y_re_reg_1142;
            else 
                grp_fu_506_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_506_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_511_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, in_i_2_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_im_reg_1116, x_im_2_reg_1214, x_im_3_reg_1238, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_511_p0 <= x_im_3_reg_1238;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_511_p0 <= x_im_2_reg_1214;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_511_p0 <= in_i_2_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_511_p0 <= x_im_reg_1116;
            else 
                grp_fu_511_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_511_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_511_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_im_reg_1148, y_im_1_reg_1170, y_im_2_reg_1226, y_im_3_reg_1250, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_511_p1 <= y_im_3_reg_1250;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_511_p1 <= y_im_2_reg_1226;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_511_p1 <= y_im_1_reg_1170;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_511_p1 <= y_im_reg_1148;
            else 
                grp_fu_511_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_511_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_516_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, in_r_2_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_re_reg_1110, x_re_2_reg_1208, x_re_3_reg_1232, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_516_p0 <= x_re_3_reg_1232;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_516_p0 <= x_re_2_reg_1208;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_516_p0 <= in_r_2_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_516_p0 <= x_re_reg_1110;
            else 
                grp_fu_516_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_516_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_516_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_re_reg_1142, y_re_1_reg_1164, y_re_2_reg_1220, y_re_3_reg_1244, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_516_p1 <= y_re_3_reg_1244;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_516_p1 <= y_re_2_reg_1220;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_516_p1 <= y_re_1_reg_1164;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_516_p1 <= y_re_reg_1142;
            else 
                grp_fu_516_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_516_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, in_i_2_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, x_im_reg_1116, x_im_2_reg_1214, x_im_3_reg_1238, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_521_p0 <= x_im_3_reg_1238;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_521_p0 <= x_im_2_reg_1214;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_521_p0 <= in_i_2_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_521_p0 <= x_im_reg_1116;
            else 
                grp_fu_521_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_521_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_521_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, y_im_reg_1148, y_im_1_reg_1170, y_im_2_reg_1226, y_im_3_reg_1250, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_521_p1 <= y_im_3_reg_1250;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_521_p1 <= y_im_2_reg_1226;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_521_p1 <= y_im_1_reg_1170;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_521_p1 <= y_im_reg_1148;
            else 
                grp_fu_521_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_521_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_530_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, tmp_re_reg_926, tmp_re_1_reg_948, tmp_re_2_reg_960, tmp_re_3_reg_972, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_530_p0 <= tmp_re_3_reg_972;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_530_p0 <= tmp_re_2_reg_960;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_530_p0 <= tmp_re_1_reg_948;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_530_p0 <= tmp_re_reg_926;
        else 
            grp_fu_530_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_530_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, gm_re_reg_914, ap_CS_fsm_pp0_stage1, gm_re_1_reg_984, ap_CS_fsm_pp0_stage2, gm_re_2_reg_1006, gm_re_3_reg_1028, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_530_p1 <= gm_re_3_reg_1028;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_530_p1 <= gm_re_2_reg_1006;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_530_p1 <= gm_re_1_reg_984;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_530_p1 <= gm_re_reg_914;
        else 
            grp_fu_530_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_534_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, tmp_im_reg_932, tmp_im_1_reg_954, tmp_im_2_reg_966, tmp_im_3_reg_978, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_534_p0 <= tmp_im_3_reg_978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_534_p0 <= tmp_im_2_reg_966;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_534_p0 <= tmp_im_1_reg_954;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_534_p0 <= tmp_im_reg_932;
        else 
            grp_fu_534_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_534_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, gm_im_reg_920, ap_CS_fsm_pp0_stage2, gm_im_1_reg_990, gm_im_2_reg_1012, gm_im_3_reg_1034, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_534_p1 <= gm_im_3_reg_1034;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_534_p1 <= gm_im_2_reg_1012;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_534_p1 <= gm_im_1_reg_990;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_534_p1 <= gm_im_reg_920;
        else 
            grp_fu_534_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_538_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, tmp_re_reg_926, tmp_re_1_reg_948, tmp_re_2_reg_960, tmp_re_3_reg_972, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_538_p0 <= tmp_re_3_reg_972;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_538_p0 <= tmp_re_2_reg_960;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_538_p0 <= tmp_re_1_reg_948;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_538_p0 <= tmp_re_reg_926;
        else 
            grp_fu_538_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_538_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, gm_im_reg_920, ap_CS_fsm_pp0_stage2, gm_im_1_reg_990, gm_im_2_reg_1012, gm_im_3_reg_1034, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_538_p1 <= gm_im_3_reg_1034;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_538_p1 <= gm_im_2_reg_1012;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_538_p1 <= gm_im_1_reg_990;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_538_p1 <= gm_im_reg_920;
        else 
            grp_fu_538_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_542_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, tmp_im_reg_932, tmp_im_1_reg_954, tmp_im_2_reg_966, tmp_im_3_reg_978, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_542_p0 <= tmp_im_3_reg_978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_542_p0 <= tmp_im_2_reg_966;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_542_p0 <= tmp_im_1_reg_954;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_542_p0 <= tmp_im_reg_932;
        else 
            grp_fu_542_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_542_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, gm_re_reg_914, ap_CS_fsm_pp0_stage1, gm_re_1_reg_984, ap_CS_fsm_pp0_stage2, gm_re_2_reg_1006, gm_re_3_reg_1028, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_542_p1 <= gm_re_3_reg_1028;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_542_p1 <= gm_re_2_reg_1006;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_542_p1 <= gm_re_1_reg_984;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_542_p1 <= gm_re_reg_914;
        else 
            grp_fu_542_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_735_p3 <= (i_gm_1_reg_854_pp0_iter4_reg & ap_const_lv1_0);
    i_2_fu_760_p3 <= (i_gm_2_reg_870_pp0_iter4_reg & ap_const_lv1_0);
    i_3_fu_785_p3 <= (i_gm_3_reg_892_pp0_iter4_reg & ap_const_lv1_0);
    i_fu_712_p2 <= std_logic_vector(shift_left(unsigned(n_2_reg_817_pp0_iter3_reg),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    i_gm_1_fu_596_p2 <= (i_gm_fu_562_p1 or ap_const_lv8_1);
    i_gm_2_fu_618_p2 <= (i_gm_fu_562_p1 or ap_const_lv8_2);
    i_gm_3_fu_640_p2 <= (i_gm_fu_562_p1 or ap_const_lv8_3);
    i_gm_fu_562_p1 <= ap_sig_allocacmp_n_2(8 - 1 downto 0);
    in_i_0_address0 <= zext_ln85_4_reg_876_pp0_iter2_reg(7 - 1 downto 0);
    in_i_0_address1 <= zext_ln85_1_reg_836_pp0_iter1_reg(7 - 1 downto 0);

    in_i_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_0_ce0 <= ap_const_logic_1;
        else 
            in_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_0_ce1 <= ap_const_logic_1;
        else 
            in_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_i_1_address0 <= zext_ln85_4_fu_634_p1(7 - 1 downto 0);
    in_i_1_address1 <= zext_ln85_1_fu_590_p1(7 - 1 downto 0);

    in_i_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_1_ce0 <= ap_const_logic_1;
        else 
            in_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_1_ce1 <= ap_const_logic_1;
        else 
            in_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_i_2_address0 <= zext_ln85_6_reg_898_pp0_iter2_reg(7 - 1 downto 0);
    in_i_2_address1 <= zext_ln85_1_reg_836_pp0_iter2_reg(7 - 1 downto 0);

    in_i_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_2_ce0 <= ap_const_logic_1;
        else 
            in_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_2_ce1 <= ap_const_logic_1;
        else 
            in_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_i_3_address0 <= zext_ln85_6_fu_656_p1(7 - 1 downto 0);
    in_i_3_address1 <= zext_ln87_2_fu_612_p1(7 - 1 downto 0);

    in_i_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_3_ce0 <= ap_const_logic_1;
        else 
            in_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_i_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_i_3_ce1 <= ap_const_logic_1;
        else 
            in_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_r_0_address0 <= zext_ln85_4_reg_876_pp0_iter2_reg(7 - 1 downto 0);
    in_r_0_address1 <= zext_ln85_1_reg_836_pp0_iter1_reg(7 - 1 downto 0);

    in_r_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_0_ce0 <= ap_const_logic_1;
        else 
            in_r_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_0_ce1 <= ap_const_logic_1;
        else 
            in_r_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_r_1_address0 <= zext_ln85_4_fu_634_p1(7 - 1 downto 0);
    in_r_1_address1 <= zext_ln85_1_fu_590_p1(7 - 1 downto 0);

    in_r_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_1_ce0 <= ap_const_logic_1;
        else 
            in_r_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_1_ce1 <= ap_const_logic_1;
        else 
            in_r_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_r_2_address0 <= zext_ln85_6_reg_898_pp0_iter2_reg(7 - 1 downto 0);
    in_r_2_address1 <= zext_ln85_1_reg_836_pp0_iter2_reg(7 - 1 downto 0);

    in_r_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_2_ce0 <= ap_const_logic_1;
        else 
            in_r_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_2_ce1 <= ap_const_logic_1;
        else 
            in_r_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    in_r_3_address0 <= zext_ln85_6_fu_656_p1(7 - 1 downto 0);
    in_r_3_address1 <= zext_ln87_2_fu_612_p1(7 - 1 downto 0);

    in_r_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_3_ce0 <= ap_const_logic_1;
        else 
            in_r_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_r_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_3_ce1 <= ap_const_logic_1;
        else 
            in_r_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    n_3_fu_662_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_2) + unsigned(ap_const_lv9_4));
    or_ln87_1_fu_748_p2 <= (i_1_fu_735_p3 or ap_const_lv9_1);
    or_ln87_2_fu_773_p2 <= (i_2_fu_760_p3 or ap_const_lv9_1);
    or_ln87_3_fu_798_p2 <= (i_3_fu_785_p3 or ap_const_lv9_1);
    or_ln87_fu_723_p2 <= (i_fu_712_p2 or ap_const_lv9_1);

    out_i_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln87_fu_729_p1, zext_ln87_1_fu_754_p1, zext_ln87_3_fu_779_p1, zext_ln87_4_fu_804_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_i_address0 <= zext_ln87_4_fu_804_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_address0 <= zext_ln87_3_fu_779_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_address0 <= zext_ln87_1_fu_754_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_i_address0 <= zext_ln87_fu_729_p1(9 - 1 downto 0);
            else 
                out_i_address0 <= "XXXXXXXXX";
            end if;
        else 
            out_i_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    out_i_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln85_fu_717_p1, zext_ln85_2_fu_742_p1, zext_ln85_3_fu_767_p1, zext_ln85_5_fu_792_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_i_address1 <= zext_ln85_5_fu_792_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_i_address1 <= zext_ln85_3_fu_767_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_i_address1 <= zext_ln85_2_fu_742_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_i_address1 <= zext_ln85_fu_717_p1(9 - 1 downto 0);
            else 
                out_i_address1 <= "XXXXXXXXX";
            end if;
        else 
            out_i_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    out_i_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_ce0 <= ap_const_logic_1;
        else 
            out_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_ce1 <= ap_const_logic_1;
        else 
            out_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_i_d0 <= grp_fu_202_p_dout0;
    out_i_d1 <= grp_fu_194_p_dout0;

    out_i_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_we0 <= ap_const_logic_1;
        else 
            out_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_i_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_i_we1 <= ap_const_logic_1;
        else 
            out_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln87_fu_729_p1, zext_ln87_1_fu_754_p1, zext_ln87_3_fu_779_p1, zext_ln87_4_fu_804_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_r_address0 <= zext_ln87_4_fu_804_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_address0 <= zext_ln87_3_fu_779_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_address0 <= zext_ln87_1_fu_754_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_r_address0 <= zext_ln87_fu_729_p1(9 - 1 downto 0);
            else 
                out_r_address0 <= "XXXXXXXXX";
            end if;
        else 
            out_r_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    out_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln85_fu_717_p1, zext_ln85_2_fu_742_p1, zext_ln85_3_fu_767_p1, zext_ln85_5_fu_792_p1)
    begin
        if ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                out_r_address1 <= zext_ln85_5_fu_792_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                out_r_address1 <= zext_ln85_3_fu_767_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                out_r_address1 <= zext_ln85_2_fu_742_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                out_r_address1 <= zext_ln85_fu_717_p1(9 - 1 downto 0);
            else 
                out_r_address1 <= "XXXXXXXXX";
            end if;
        else 
            out_r_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_ce1 <= ap_const_logic_1;
        else 
            out_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= grp_fu_198_p_dout0;
    out_r_d1 <= grp_fu_190_p_dout0;

    out_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_we1 <= ap_const_logic_1;
        else 
            out_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_602_p4 <= i_gm_1_fu_596_p2(7 downto 1);
    tmp_fu_554_p3 <= ap_sig_allocacmp_n_2(8 downto 8);
    trunc_ln85_1_fu_624_p4 <= i_gm_2_fu_618_p2(7 downto 1);
    trunc_ln85_2_fu_646_p4 <= i_gm_3_fu_640_p2(7 downto 1);
    trunc_ln_fu_580_p4 <= ap_sig_allocacmp_n_2(7 downto 1);
    zext_ln83_1_cast_fu_673_p3 <= (ap_const_lv2_2 & i_gm_1_reg_854);
    zext_ln83_1_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln83_1_cast_fu_673_p3),64));
    zext_ln83_2_cast_fu_686_p3 <= (ap_const_lv2_2 & i_gm_2_reg_870);
    zext_ln83_2_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln83_2_cast_fu_686_p3),64));
    zext_ln83_3_cast_fu_699_p3 <= (ap_const_lv2_2 & i_gm_3_reg_892);
    zext_ln83_3_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln83_3_cast_fu_699_p3),64));
    zext_ln83_cast_fu_566_p3 <= (ap_const_lv2_2 & i_gm_fu_562_p1);
    zext_ln83_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln83_cast_fu_566_p3),64));
    zext_ln85_1_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_580_p4),64));
    zext_ln85_2_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_735_p3),64));
    zext_ln85_3_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_760_p3),64));
    zext_ln85_4_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln85_1_fu_624_p4),64));
    zext_ln85_5_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_fu_785_p3),64));
    zext_ln85_6_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln85_2_fu_646_p4),64));
    zext_ln85_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_712_p2),64));
    zext_ln87_1_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln87_1_fu_748_p2),64));
    zext_ln87_2_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_602_p4),64));
    zext_ln87_3_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln87_2_fu_773_p2),64));
    zext_ln87_4_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln87_3_fu_798_p2),64));
    zext_ln87_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln87_fu_723_p2),64));
end behav;
